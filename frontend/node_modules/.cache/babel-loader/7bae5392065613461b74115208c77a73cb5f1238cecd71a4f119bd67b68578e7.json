{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\n// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios'; // axios 임포트 확인\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent({\n  selectedDb,\n  databases,\n  onDbChange\n}) {\n  _s();\n  // openaiKeys, selectedOpenAIKey 제거\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n  const [aiModels, setAiModels] = useState([]); // 모든 AI 모델 목록\n  const [selectedAiModel, setSelectedAiModel] = useState(''); // 현재 선택된 AI 모델의 이름\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [{\n    title: '성능 분석',\n    questions: ['오늘 가장 오래 걸린 쿼리 보여줘', '슬로우 쿼리 10개만 보여줘', '테이블별 row 수와 크기 알려줘']\n  }, {\n    title: '데이터 탐색',\n    questions: ['가장 row가 많은 테이블 알려줘', '최근 7일간 생성된 데이터 보여줘', '사용자 테이블의 구조를 설명해줘']\n  }, {\n    title: '시스템 상태',\n    questions: ['현재 활성 연결 수는?', '데이터베이스 크기와 사용량 알려줘', '인덱스 사용 현황을 분석해줘']\n  }];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // DB 선택 변경 시 채팅 기록 불러오기 및 AI 모델 목록 불러오기\n  useEffect(() => {\n    const fetchChatHistory = async () => {\n      if (selectedDb) {\n        try {\n          const response = await fetch(`/api/nl2sql/history?db_name=${selectedDb}`);\n          if (response.ok) {\n            const data = await response.json();\n            setMessages(data.history || []);\n          } else {\n            console.error('채팅 기록을 불러오는데 실패했습니다.');\n            setMessages([]);\n          }\n        } catch (error) {\n          console.error('채팅 기록 불러오기 오류:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]); // DB가 선택되지 않으면 메시지 초기화\n      }\n    };\n    const fetchAiModels = async () => {\n      try {\n        const openaiRes = await axios.get('/api/openai/keys');\n        const azureOpenAIRes = await axios.get('/api/azure-openai/configs');\n        const geminiRes = await axios.get('/api/gemini/configs');\n        const claudeRes = await axios.get('/api/claude/configs');\n        const allModels = [...openaiRes.data.keys.map(k => ({\n          ...k,\n          type: 'openai'\n        })), ...azureOpenAIRes.data.configs.map(c => ({\n          ...c,\n          type: 'azure_openai'\n        })), ...geminiRes.data.configs.map(c => ({\n          ...c,\n          type: 'gemini'\n        })), ...claudeRes.data.configs.map(c => ({\n          ...c,\n          type: 'claude'\n        }))];\n        setAiModels(allModels);\n\n        // 현재 선택된 모델 찾기\n        const currentSelected = allModels.find(m => m.is_selected);\n        if (currentSelected) {\n          setSelectedAiModel(currentSelected.name);\n        } else if (allModels.length > 0) {\n          // 선택된 모델이 없으면 첫 번째 모델을 기본으로 선택 (선택 API 호출)\n          const defaultModel = allModels[0];\n          let selectApiEndpoint = '';\n          if (defaultModel.type === 'openai') selectApiEndpoint = '/api/openai/select';else if (defaultModel.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';else if (defaultModel.type === 'gemini') selectApiEndpoint = '/api/gemini/select';else if (defaultModel.type === 'claude') selectApiEndpoint = '/api/claude/select';\n          if (selectApiEndpoint) {\n            const formData = new FormData();\n            formData.append('name', defaultModel.name);\n            axios.post(selectApiEndpoint, formData).then(() => {\n              setSelectedAiModel(defaultModel.name);\n              console.log(`Default AI model selected: ${defaultModel.name}`);\n            }).catch(error => {\n              console.error('Error selecting default AI model:', error);\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching AI models:', error);\n      }\n    };\n    fetchChatHistory();\n    fetchAiModels();\n  }, [selectedDb]);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = el => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = question => {\n    var _textareaRef$current;\n    setInput(question);\n    (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : _textareaRef$current.focus();\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim() || !selectedDb) return;\n    if (!selectedAiModel) {\n      // 선택된 AI 모델이 없으면 경고\n      alert('먼저 사용할 AI 모델을 선택해주세요.');\n      return;\n    }\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n    setTextareaRows(1);\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      formData.append('prompt', input);\n      const response = await fetch('/api/nl2sql', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.error) {\n          const errorMessage = {\n            role: 'assistant',\n            content: data.error,\n            error: true,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, errorMessage]);\n        } else {\n          const assistantMessage = {\n            role: 'assistant',\n            content: data.message.content || '',\n            sql: data.message.sql || '',\n            result: data.message.result || null,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      const errorMessage = {\n        role: 'assistant',\n        content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n        error: true,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = e => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화\n  const handleResetChat = async () => {\n    if (!selectedDb) return;\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      const response = await fetch('/api/nl2sql/reset', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('채팅 초기화 오류:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"db-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"db-select\",\n            className: \"prompt-label\",\n            children: \"DB \\uC120\\uD0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"db-select\",\n            value: selectedDb || '',\n            onChange: e => onDbChange(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"DB\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"__ALL_DBS__\",\n              children: \"\\uBAA8\\uB4E0 DB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), databases === null || databases === void 0 ? void 0 : databases.map(db => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: db.name,\n              children: db.name\n            }, db.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-model-selector ms-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"ai-model-select\",\n            className: \"prompt-label\",\n            children: \"AI \\uBAA8\\uB378 \\uC120\\uD0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"ai-model-select\",\n            value: selectedAiModel,\n            onChange: async e => {\n              const modelName = e.target.value;\n              const selected = aiModels.find(m => m.name === modelName);\n              if (selected) {\n                let selectApiEndpoint = '';\n                if (selected.type === 'openai') selectApiEndpoint = '/api/openai/select';else if (selected.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';else if (selected.type === 'gemini') selectApiEndpoint = '/api/gemini/select';else if (selected.type === 'claude') selectApiEndpoint = '/api/claude/select';\n                if (selectApiEndpoint) {\n                  try {\n                    const formData = new FormData();\n                    formData.append('name', selected.name);\n                    await axios.post(selectApiEndpoint, formData);\n                    setSelectedAiModel(selected.name);\n                    alert(`${selected.name} AI 모델이 선택되었습니다.`);\n                  } catch (error) {\n                    console.error('Error selecting AI model:', error);\n                    alert('AI 모델 선택에 실패했습니다.');\n                  }\n                }\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"AI \\uBAA8\\uB378 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), aiModels.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: model.name,\n              children: [model.name, \" (\", model.type, \")\"]\n            }, model.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetChat,\n          disabled: !selectedDb,\n          className: \"btn btn-outline\",\n          title: \"\\uB300\\uD654 \\uCD08\\uAE30\\uD654\",\n          children: \"\\uD83D\\uDD04 \\uCD08\\uAE30\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      id: \"chat-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggest-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCA1 \\uCD94\\uCC9C \\uC9C8\\uBB38\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggest-cards\",\n            children: suggestedQuestions.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggest-category\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: category.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggest-cards-grid\",\n                children: category.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggest-card\",\n                  onClick: () => handleSuggestedQuestion(question),\n                  children: question\n                }, questionIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this)]\n            }, categoryIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-role\",\n                children: msg.role === 'user' ? '👤 사용자' : '🤖 AI'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: msg.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-body\",\n              children: msg.role === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-message\",\n                children: msg.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-message\",\n                children: [msg.content && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ai-response\",\n                  dangerouslySetInnerHTML: {\n                    __html: msg.content\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 25\n                }, this), msg.sql && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sql-result\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sql-header\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"sql-label\",\n                      children: \"\\uD83D\\uDD0D \\uC0DD\\uC131\\uB41C SQL\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 370,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sql-code\",\n                    children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                      children: /*#__PURE__*/_jsxDEV(\"code\", {\n                        children: msg.sql\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 373,\n                        columnNumber: 34\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 25\n                }, this), msg.result && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"query-result\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-header\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"result-label\",\n                      children: \"\\uD83D\\uDCCA \\uC2E4\\uD589 \\uACB0\\uACFC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-content\",\n                    children: msg.result.headers && msg.result.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"result-table\",\n                      children: /*#__PURE__*/_jsxDEV(\"table\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: msg.result.headers.map((header, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                              children: header\n                            }, i, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 389,\n                              columnNumber: 41\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 387,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 386,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: msg.result.data.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: cell\n                            }, j, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 397,\n                              columnNumber: 43\n                            }, this))\n                          }, i, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 395,\n                            columnNumber: 39\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 393,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 385,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 31\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"result-text\",\n                      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                        children: /*#__PURE__*/_jsxDEV(\"code\", {\n                          children: JSON.stringify(msg.result, null, 2)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 406,\n                          columnNumber: 38\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 25\n                }, this), msg.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"error-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-icon\",\n                    children: \"\\u26A0\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-text\",\n                    children: msg.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message message-ai\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-role\",\n                children: \"\\uD83E\\uDD16 AI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: new Date().toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-body\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-message\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-dots\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"AI\\uAC00 \\uC751\\uB2F5\\uC744 \\uC0DD\\uC131\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          value: input,\n          onChange: handleInputChange,\n          onKeyDown: handleKeyDown,\n          rows: textareaRows,\n          placeholder: \"\\uC790\\uC5F0\\uC5B4\\uB85C \\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694... (Shift+Enter\\uB85C \\uC904\\uBC14\\uAFC8)\",\n          disabled: !selectedDb || loading || !selectedAiModel // AI 모델 선택 여부로 disabled 제어\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          disabled: !input.trim() || !selectedDb || loading || !selectedAiModel // AI 모델 선택 여부로 disabled 제어\n          ,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"send-icon\",\n            children: \"\\uD83D\\uDCE4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), !selectedAiModel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-warning\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u26A0\\uFE0F \\uC0AC\\uC6A9\\uD560 AI \\uBAA8\\uB378\\uC744 \\uBA3C\\uC800 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"AkLXkTMkZY0S0BhTgwCAglHZg4Y=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatComponent","selectedDb","databases","onDbChange","_s","messages","setMessages","input","setInput","loading","setLoading","textareaRows","setTextareaRows","messagesEndRef","textareaRef","aiModels","setAiModels","selectedAiModel","setSelectedAiModel","suggestedQuestions","title","questions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchChatHistory","response","fetch","ok","data","json","history","console","error","fetchAiModels","openaiRes","get","azureOpenAIRes","geminiRes","claudeRes","allModels","keys","map","k","type","configs","c","currentSelected","find","m","is_selected","name","length","defaultModel","selectApiEndpoint","formData","FormData","append","post","then","log","catch","autoResizeTextarea","el","style","height","newHeight","Math","min","scrollHeight","ceil","handleSuggestedQuestion","question","_textareaRef$current","focus","handleSend","trim","alert","userMessage","role","content","timestamp","Date","toLocaleTimeString","prev","method","body","errorMessage","assistantMessage","message","sql","result","Error","handleKeyDown","e","key","shiftKey","preventDefault","handleInputChange","target","value","handleResetChat","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","db","modelName","selected","model","onClick","disabled","category","categoryIndex","questionIndex","msg","idx","dangerouslySetInnerHTML","__html","headers","header","i","row","cell","j","JSON","stringify","ref","onKeyDown","rows","placeholder","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/ChatComponent.js"],"sourcesContent":["// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios'; // axios 임포트 확인\n\nfunction ChatComponent({ selectedDb, databases, onDbChange }) { // openaiKeys, selectedOpenAIKey 제거\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  const [aiModels, setAiModels] = useState([]); // 모든 AI 모델 목록\n  const [selectedAiModel, setSelectedAiModel] = useState(''); // 현재 선택된 AI 모델의 이름\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [\n    {\n      title: '성능 분석',\n      questions: [\n        '오늘 가장 오래 걸린 쿼리 보여줘',\n        '슬로우 쿼리 10개만 보여줘',\n        '테이블별 row 수와 크기 알려줘'\n      ]\n    },\n    {\n      title: '데이터 탐색',\n      questions: [\n        '가장 row가 많은 테이블 알려줘',\n        '최근 7일간 생성된 데이터 보여줘',\n        '사용자 테이블의 구조를 설명해줘'\n      ]\n    },\n    {\n      title: '시스템 상태',\n      questions: [\n        '현재 활성 연결 수는?',\n        '데이터베이스 크기와 사용량 알려줘',\n        '인덱스 사용 현황을 분석해줘'\n      ]\n    }\n  ];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // DB 선택 변경 시 채팅 기록 불러오기 및 AI 모델 목록 불러오기\n  useEffect(() => {\n    const fetchChatHistory = async () => {\n      if (selectedDb) {\n        try {\n          const response = await fetch(`/api/nl2sql/history?db_name=${selectedDb}`);\n          if (response.ok) {\n            const data = await response.json();\n            setMessages(data.history || []);\n          } else {\n            console.error('채팅 기록을 불러오는데 실패했습니다.');\n            setMessages([]);\n          }\n        } catch (error) {\n          console.error('채팅 기록 불러오기 오류:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]); // DB가 선택되지 않으면 메시지 초기화\n      }\n    };\n\n    const fetchAiModels = async () => {\n      try {\n        const openaiRes = await axios.get('/api/openai/keys');\n        const azureOpenAIRes = await axios.get('/api/azure-openai/configs');\n        const geminiRes = await axios.get('/api/gemini/configs');\n        const claudeRes = await axios.get('/api/claude/configs');\n\n        const allModels = [\n          ...openaiRes.data.keys.map(k => ({ ...k, type: 'openai' })),\n          ...azureOpenAIRes.data.configs.map(c => ({ ...c, type: 'azure_openai' })),\n          ...geminiRes.data.configs.map(c => ({ ...c, type: 'gemini' })),\n          ...claudeRes.data.configs.map(c => ({ ...c, type: 'claude' })),\n        ];\n        setAiModels(allModels);\n\n        // 현재 선택된 모델 찾기\n        const currentSelected = allModels.find(m => m.is_selected);\n        if (currentSelected) {\n          setSelectedAiModel(currentSelected.name);\n        } else if (allModels.length > 0) {\n          // 선택된 모델이 없으면 첫 번째 모델을 기본으로 선택 (선택 API 호출)\n          const defaultModel = allModels[0];\n          let selectApiEndpoint = '';\n          if (defaultModel.type === 'openai') selectApiEndpoint = '/api/openai/select';\n          else if (defaultModel.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';\n          else if (defaultModel.type === 'gemini') selectApiEndpoint = '/api/gemini/select';\n          else if (defaultModel.type === 'claude') selectApiEndpoint = '/api/claude/select';\n\n          if (selectApiEndpoint) {\n            const formData = new FormData();\n            formData.append('name', defaultModel.name);\n            axios.post(selectApiEndpoint, formData)\n              .then(() => {\n                setSelectedAiModel(defaultModel.name);\n                console.log(`Default AI model selected: ${defaultModel.name}`);\n              })\n              .catch(error => {\n                console.error('Error selecting default AI model:', error);\n              });\n          }\n        }\n\n      } catch (error) {\n        console.error('Error fetching AI models:', error);\n      }\n    };\n\n    fetchChatHistory();\n    fetchAiModels();\n  }, [selectedDb]);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = (el) => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = (question) => {\n    setInput(question);\n    textareaRef.current?.focus();\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim() || !selectedDb) return;\n    \n    if (!selectedAiModel) { // 선택된 AI 모델이 없으면 경고\n      alert('먼저 사용할 AI 모델을 선택해주세요.');\n      return;\n    }\n    \n    const userMessage = { \n      role: 'user', \n      content: input,\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n    setTextareaRows(1);\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      formData.append('prompt', input);\n\n      const response = await fetch('/api/nl2sql', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.error) {\n          const errorMessage = {\n            role: 'assistant',\n            content: data.error,\n            error: true,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, errorMessage]);\n        } else {\n          const assistantMessage = {\n            role: 'assistant',\n            content: data.message.content || '',\n            sql: data.message.sql || '',\n            result: data.message.result || null,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      const errorMessage = {\n        role: 'assistant',\n        content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n        error: true,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화\n  const handleResetChat = async () => {\n    if (!selectedDb) return;\n    \n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n\n      const response = await fetch('/api/nl2sql/reset', {\n        method: 'POST',\n        body: formData\n      });\n      \n      if (response.ok) {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('채팅 초기화 오류:', error);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {/* 채팅 헤더 */}\n      <div className=\"chat-header\">\n        <div className=\"header-left\">\n          <div className=\"db-selector\">\n            <label htmlFor=\"db-select\" className=\"prompt-label\">DB 선택</label>\n            <select \n              id=\"db-select\" \n              value={selectedDb || ''} \n              onChange={(e) => onDbChange(e.target.value)}\n            >\n              <option value=\"\">DB를 선택하세요</option>\n              <option value=\"__ALL_DBS__\">모든 DB</option>\n              {databases?.map(db => (\n                <option key={db.name} value={db.name}>\n                  {db.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          {/* AI 모델 선택 드롭다운 추가 */}\n          <div className=\"ai-model-selector ms-3\">\n            <label htmlFor=\"ai-model-select\" className=\"prompt-label\">AI 모델 선택</label>\n            <select \n              id=\"ai-model-select\" \n              value={selectedAiModel} \n              onChange={async (e) => {\n                const modelName = e.target.value;\n                const selected = aiModels.find(m => m.name === modelName);\n                if (selected) {\n                  let selectApiEndpoint = '';\n                  if (selected.type === 'openai') selectApiEndpoint = '/api/openai/select';\n                  else if (selected.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';\n                  else if (selected.type === 'gemini') selectApiEndpoint = '/api/gemini/select';\n                  else if (selected.type === 'claude') selectApiEndpoint = '/api/claude/select';\n\n                  if (selectApiEndpoint) {\n                    try {\n                      const formData = new FormData();\n                      formData.append('name', selected.name);\n                      await axios.post(selectApiEndpoint, formData);\n                      setSelectedAiModel(selected.name);\n                      alert(`${selected.name} AI 모델이 선택되었습니다.`);\n                    } catch (error) {\n                      console.error('Error selecting AI model:', error);\n                      alert('AI 모델 선택에 실패했습니다.');\n                    }\n                  }\n                }\n              }}\n            >\n              <option value=\"\">AI 모델 선택</option>\n              {aiModels.map(model => (\n                <option key={model.name} value={model.name}>\n                  {model.name} ({model.type})\n                </option>\n              ))}\n            </select>\n          </div>\n\n        </div>\n        \n        <div className=\"header-actions\">\n          <button \n            onClick={handleResetChat} \n            disabled={!selectedDb}\n            className=\"btn btn-outline\"\n            title=\"대화 초기화\"\n          >\n            🔄 초기화\n          </button>\n        </div>\n      </div>\n\n      {/* 채팅 메시지 영역 */}\n      <div className=\"chat-messages\" id=\"chat-messages\">\n        <div className=\"chat-box\">\n          {/* 추천 질문 카드들 (첫 대화 전만 표시) */}\n          {messages.length === 0 && (\n            <div className=\"suggest-section\">\n              <h3>💡 추천 질문</h3>\n              <div className=\"suggest-cards\">\n                {suggestedQuestions.map((category, categoryIndex) => (\n                  <div key={categoryIndex} className=\"suggest-category\">\n                    <h4>{category.title}</h4>\n                    <div className=\"suggest-cards-grid\">\n                      {category.questions.map((question, questionIndex) => (\n                        <div \n                          key={questionIndex}\n                          className=\"suggest-card\" \n                          onClick={() => handleSuggestedQuestion(question)}\n                        >\n                          {question}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* 메시지들 */}\n          {messages.map((msg, idx) => (\n            <div key={idx} className={`message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`}>\n              <div className=\"message-content\">\n                <div className=\"message-header\">\n                  <span className=\"message-role\">\n                    {msg.role === 'user' ? '👤 사용자' : '🤖 AI'}\n                  </span>\n                  <span className=\"message-time\">{msg.timestamp}</span>\n                </div>\n                \n                <div className=\"message-body\">\n                  {msg.role === 'user' ? (\n                    <div className=\"user-message\">{msg.content}</div>\n                  ) : (\n                    <div className=\"ai-message\">\n                      {msg.content && (\n                        <div className=\"ai-response\" dangerouslySetInnerHTML={{ __html: msg.content }} />\n                      )}\n                      {msg.sql && (\n                        <div className=\"sql-result\">\n                          <div className=\"sql-header\">\n                            <span className=\"sql-label\">🔍 생성된 SQL</span>\n                          </div>\n                          <div className=\"sql-code\">\n                            <pre><code>{msg.sql}</code></pre>\n                          </div>\n                        </div>\n                      )}\n                      {msg.result && (\n                        <div className=\"query-result\">\n                          <div className=\"result-header\">\n                            <span className=\"result-label\">📊 실행 결과</span>\n                          </div>\n                          <div className=\"result-content\">\n                            {msg.result.headers && msg.result.data ? (\n                              <div className=\"result-table\">\n                                <table>\n                                  <thead>\n                                    <tr>\n                                      {msg.result.headers.map((header, i) => (\n                                        <th key={i}>{header}</th>\n                                      ))}\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {msg.result.data.map((row, i) => (\n                                      <tr key={i}>\n                                        {row.map((cell, j) => (\n                                          <td key={j}>{cell}</td>\n                                        ))}\n                                      </tr>\n                                    ))}\n                                  </tbody>\n                                </table>\n                              </div>\n                            ) : (\n                              <div className=\"result-text\">\n                                <pre><code>{JSON.stringify(msg.result, null, 2)}</code></pre>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                      {msg.error && (\n                        <div className=\"error-message\">\n                          <span className=\"error-icon\">⚠️</span>\n                          <span className=\"error-text\">{msg.content}</span>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n          \n          {/* 로딩 표시 */}\n          {loading && (\n            <div className=\"message message-ai\">\n              <div className=\"message-content\">\n                <div className=\"message-header\">\n                  <span className=\"message-role\">🤖 AI</span>\n                  <span className=\"message-time\">{new Date().toLocaleTimeString()}</span>\n                </div>\n                <div className=\"message-body\">\n                  <div className=\"loading-message\">\n                    <div className=\"loading-dots\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                    <span>AI가 응답을 생성하고 있습니다...</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* 입력 영역 */}\n      <div className=\"chat-input-area\">\n        <div className=\"input-container\">\n          <textarea\n            ref={textareaRef}\n            value={input}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            rows={textareaRows}\n            placeholder=\"자연어로 질문을 입력하세요... (Shift+Enter로 줄바꿈)\"\n            disabled={!selectedDb || loading || !selectedAiModel} // AI 모델 선택 여부로 disabled 제어\n          />\n          <button \n            onClick={handleSend} \n            disabled={!input.trim() || !selectedDb || loading || !selectedAiModel} // AI 모델 선택 여부로 disabled 제어\n            className=\"send-button\"\n          >\n            <span className=\"send-icon\">📤</span>\n          </button>\n        </div>\n        \n        {!selectedAiModel && (\n          <div className=\"input-warning\">\n            <span>⚠️ 사용할 AI 모델을 먼저 선택해주세요.</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,aAAaA,CAAC;EAAEC,UAAU;EAAEC,SAAS;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAAE;EAC9D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMmB,cAAc,GAAGjB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMkB,WAAW,GAAGlB,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMyB,kBAAkB,GAAG,CACzB;IACEC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,CACT,oBAAoB,EACpB,iBAAiB,EACjB,oBAAoB;EAExB,CAAC,EACD;IACED,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,CACT,oBAAoB,EACpB,oBAAoB,EACpB,mBAAmB;EAEvB,CAAC,EACD;IACED,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,CACT,cAAc,EACd,oBAAoB,EACpB,iBAAiB;EAErB,CAAC,CACF;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAV,cAAc,CAACW,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAED/B,SAAS,CAAC,MAAM;IACd2B,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACjB,QAAQ,CAAC,CAAC;;EAEd;EACAV,SAAS,CAAC,MAAM;IACd,MAAMgC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI1B,UAAU,EAAE;QACd,IAAI;UACF,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B5B,UAAU,EAAE,CAAC;UACzE,IAAI2B,QAAQ,CAACE,EAAE,EAAE;YACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;YAClC1B,WAAW,CAACyB,IAAI,CAACE,OAAO,IAAI,EAAE,CAAC;UACjC,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;YACrC7B,WAAW,CAAC,EAAE,CAAC;UACjB;QACF,CAAC,CAAC,OAAO6B,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;UACtC7B,WAAW,CAAC,EAAE,CAAC;QACjB;MACF,CAAC,MAAM;QACLA,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACnB;IACF,CAAC;IAED,MAAM8B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMxC,KAAK,CAACyC,GAAG,CAAC,kBAAkB,CAAC;QACrD,MAAMC,cAAc,GAAG,MAAM1C,KAAK,CAACyC,GAAG,CAAC,2BAA2B,CAAC;QACnE,MAAME,SAAS,GAAG,MAAM3C,KAAK,CAACyC,GAAG,CAAC,qBAAqB,CAAC;QACxD,MAAMG,SAAS,GAAG,MAAM5C,KAAK,CAACyC,GAAG,CAAC,qBAAqB,CAAC;QAExD,MAAMI,SAAS,GAAG,CAChB,GAAGL,SAAS,CAACN,IAAI,CAACY,IAAI,CAACC,GAAG,CAACC,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEC,IAAI,EAAE;QAAS,CAAC,CAAC,CAAC,EAC3D,GAAGP,cAAc,CAACR,IAAI,CAACgB,OAAO,CAACH,GAAG,CAACI,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEF,IAAI,EAAE;QAAe,CAAC,CAAC,CAAC,EACzE,GAAGN,SAAS,CAACT,IAAI,CAACgB,OAAO,CAACH,GAAG,CAACI,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEF,IAAI,EAAE;QAAS,CAAC,CAAC,CAAC,EAC9D,GAAGL,SAAS,CAACV,IAAI,CAACgB,OAAO,CAACH,GAAG,CAACI,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEF,IAAI,EAAE;QAAS,CAAC,CAAC,CAAC,CAC/D;QACD9B,WAAW,CAAC0B,SAAS,CAAC;;QAEtB;QACA,MAAMO,eAAe,GAAGP,SAAS,CAACQ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC;QAC1D,IAAIH,eAAe,EAAE;UACnB/B,kBAAkB,CAAC+B,eAAe,CAACI,IAAI,CAAC;QAC1C,CAAC,MAAM,IAAIX,SAAS,CAACY,MAAM,GAAG,CAAC,EAAE;UAC/B;UACA,MAAMC,YAAY,GAAGb,SAAS,CAAC,CAAC,CAAC;UACjC,IAAIc,iBAAiB,GAAG,EAAE;UAC1B,IAAID,YAAY,CAACT,IAAI,KAAK,QAAQ,EAAEU,iBAAiB,GAAG,oBAAoB,CAAC,KACxE,IAAID,YAAY,CAACT,IAAI,KAAK,cAAc,EAAEU,iBAAiB,GAAG,0BAA0B,CAAC,KACzF,IAAID,YAAY,CAACT,IAAI,KAAK,QAAQ,EAAEU,iBAAiB,GAAG,oBAAoB,CAAC,KAC7E,IAAID,YAAY,CAACT,IAAI,KAAK,QAAQ,EAAEU,iBAAiB,GAAG,oBAAoB;UAEjF,IAAIA,iBAAiB,EAAE;YACrB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;YAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,YAAY,CAACF,IAAI,CAAC;YAC1CxD,KAAK,CAAC+D,IAAI,CAACJ,iBAAiB,EAAEC,QAAQ,CAAC,CACpCI,IAAI,CAAC,MAAM;cACV3C,kBAAkB,CAACqC,YAAY,CAACF,IAAI,CAAC;cACrCnB,OAAO,CAAC4B,GAAG,CAAC,8BAA8BP,YAAY,CAACF,IAAI,EAAE,CAAC;YAChE,CAAC,CAAC,CACDU,KAAK,CAAC5B,KAAK,IAAI;cACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;YAC3D,CAAC,CAAC;UACN;QACF;MAEF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDR,gBAAgB,CAAC,CAAC;IAClBS,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACnC,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAM+D,kBAAkB,GAAIC,EAAE,IAAK;IACjCA,EAAE,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;IACxB,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACL,EAAE,CAACM,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;IAClDN,EAAE,CAACC,KAAK,CAACC,MAAM,GAAGC,SAAS,GAAG,IAAI;IAClCxD,eAAe,CAACyD,IAAI,CAACG,IAAI,CAACJ,SAAS,GAAG,EAAE,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMK,uBAAuB,GAAIC,QAAQ,IAAK;IAAA,IAAAC,oBAAA;IAC5CnE,QAAQ,CAACkE,QAAQ,CAAC;IAClB,CAAAC,oBAAA,GAAA7D,WAAW,CAACU,OAAO,cAAAmD,oBAAA,uBAAnBA,oBAAA,CAAqBC,KAAK,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACtE,KAAK,CAACuE,IAAI,CAAC,CAAC,IAAI,CAAC7E,UAAU,EAAE;IAElC,IAAI,CAACgB,eAAe,EAAE;MAAE;MACtB8D,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE3E,KAAK;MACd4E,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;IAC3C,CAAC;IACD/E,WAAW,CAACgF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEN,WAAW,CAAC,CAAC;IAC3CtE,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,EAAE,CAAC;IACZI,eAAe,CAAC,CAAC,CAAC;IAClB,IAAIE,WAAW,CAACU,OAAO,EAAE;MACvBV,WAAW,CAACU,OAAO,CAAC0C,KAAK,CAACC,MAAM,GAAG,MAAM;IAC3C;IAEA,IAAI;MACF,MAAMV,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE1D,UAAU,CAAC;MACtCwD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEpD,KAAK,CAAC;MAEhC,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAC1C0D,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE/B;MACR,CAAC,CAAC;MAEF,IAAI7B,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,CAACI,KAAK,EAAE;UACd,MAAMsD,YAAY,GAAG;YACnBR,IAAI,EAAE,WAAW;YACjBC,OAAO,EAAEnD,IAAI,CAACI,KAAK;YACnBA,KAAK,EAAE,IAAI;YACXgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAC3C,CAAC;UACD/E,WAAW,CAACgF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEG,YAAY,CAAC,CAAC;QAC9C,CAAC,MAAM;UACL,MAAMC,gBAAgB,GAAG;YACvBT,IAAI,EAAE,WAAW;YACjBC,OAAO,EAAEnD,IAAI,CAAC4D,OAAO,CAACT,OAAO,IAAI,EAAE;YACnCU,GAAG,EAAE7D,IAAI,CAAC4D,OAAO,CAACC,GAAG,IAAI,EAAE;YAC3BC,MAAM,EAAE9D,IAAI,CAAC4D,OAAO,CAACE,MAAM,IAAI,IAAI;YACnCV,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAC3C,CAAC;UACD/E,WAAW,CAACgF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEI,gBAAgB,CAAC,CAAC;QAClD;MACF,CAAC,MAAM;QACL,MAAM,IAAII,KAAK,CAAC,OAAO,CAAC;MAC1B;IACF,CAAC,CAAC,OAAO3D,KAAK,EAAE;MACd,MAAMsD,YAAY,GAAG;QACnBR,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE,4BAA4B;QACrC/C,KAAK,EAAE,IAAI;QACXgD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAC3C,CAAC;MACD/E,WAAW,CAACgF,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEG,YAAY,CAAC,CAAC;IAC9C,CAAC,SAAS;MACR/E,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMqF,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBtB,UAAU,CAAC,CAAC;IACd;EACF,CAAC;;EAED;EACA,MAAMuB,iBAAiB,GAAIJ,CAAC,IAAK;IAC/BxF,QAAQ,CAACwF,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;IACxBtC,kBAAkB,CAACgC,CAAC,CAACK,MAAM,CAAC;EAC9B,CAAC;;EAED;EACA,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAACtG,UAAU,EAAE;IAEjB,IAAI;MACF,MAAMwD,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE1D,UAAU,CAAC;MAEtC,MAAM2B,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;QAChD0D,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE/B;MACR,CAAC,CAAC;MAEF,IAAI7B,QAAQ,CAACE,EAAE,EAAE;QACfxB,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC;EACF,CAAC;EAED,oBACEpC,OAAA;IAAKyG,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7B1G,OAAA;MAAKyG,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B1G,OAAA;QAAKyG,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B1G,OAAA;UAAKyG,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1G,OAAA;YAAO2G,OAAO,EAAC,WAAW;YAACF,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjE/G,OAAA;YACEgH,EAAE,EAAC,WAAW;YACdT,KAAK,EAAErG,UAAU,IAAI,EAAG;YACxB+G,QAAQ,EAAGhB,CAAC,IAAK7F,UAAU,CAAC6F,CAAC,CAACK,MAAM,CAACC,KAAK,CAAE;YAAAG,QAAA,gBAE5C1G,OAAA;cAAQuG,KAAK,EAAC,EAAE;cAAAG,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnC/G,OAAA;cAAQuG,KAAK,EAAC,aAAa;cAAAG,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACzC5G,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE0C,GAAG,CAACqE,EAAE,iBAChBlH,OAAA;cAAsBuG,KAAK,EAAEW,EAAE,CAAC5D,IAAK;cAAAoD,QAAA,EAClCQ,EAAE,CAAC5D;YAAI,GADG4D,EAAE,CAAC5D,IAAI;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEZ,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGN/G,OAAA;UAAKyG,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrC1G,OAAA;YAAO2G,OAAO,EAAC,iBAAiB;YAACF,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1E/G,OAAA;YACEgH,EAAE,EAAC,iBAAiB;YACpBT,KAAK,EAAErF,eAAgB;YACvB+F,QAAQ,EAAE,MAAOhB,CAAC,IAAK;cACrB,MAAMkB,SAAS,GAAGlB,CAAC,CAACK,MAAM,CAACC,KAAK;cAChC,MAAMa,QAAQ,GAAGpG,QAAQ,CAACmC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,IAAI,KAAK6D,SAAS,CAAC;cACzD,IAAIC,QAAQ,EAAE;gBACZ,IAAI3D,iBAAiB,GAAG,EAAE;gBAC1B,IAAI2D,QAAQ,CAACrE,IAAI,KAAK,QAAQ,EAAEU,iBAAiB,GAAG,oBAAoB,CAAC,KACpE,IAAI2D,QAAQ,CAACrE,IAAI,KAAK,cAAc,EAAEU,iBAAiB,GAAG,0BAA0B,CAAC,KACrF,IAAI2D,QAAQ,CAACrE,IAAI,KAAK,QAAQ,EAAEU,iBAAiB,GAAG,oBAAoB,CAAC,KACzE,IAAI2D,QAAQ,CAACrE,IAAI,KAAK,QAAQ,EAAEU,iBAAiB,GAAG,oBAAoB;gBAE7E,IAAIA,iBAAiB,EAAE;kBACrB,IAAI;oBACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;oBAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEwD,QAAQ,CAAC9D,IAAI,CAAC;oBACtC,MAAMxD,KAAK,CAAC+D,IAAI,CAACJ,iBAAiB,EAAEC,QAAQ,CAAC;oBAC7CvC,kBAAkB,CAACiG,QAAQ,CAAC9D,IAAI,CAAC;oBACjC0B,KAAK,CAAC,GAAGoC,QAAQ,CAAC9D,IAAI,kBAAkB,CAAC;kBAC3C,CAAC,CAAC,OAAOlB,KAAK,EAAE;oBACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;oBACjD4C,KAAK,CAAC,mBAAmB,CAAC;kBAC5B;gBACF;cACF;YACF,CAAE;YAAA0B,QAAA,gBAEF1G,OAAA;cAAQuG,KAAK,EAAC,EAAE;cAAAG,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACjC/F,QAAQ,CAAC6B,GAAG,CAACwE,KAAK,iBACjBrH,OAAA;cAAyBuG,KAAK,EAAEc,KAAK,CAAC/D,IAAK;cAAAoD,QAAA,GACxCW,KAAK,CAAC/D,IAAI,EAAC,IAAE,EAAC+D,KAAK,CAACtE,IAAI,EAAC,GAC5B;YAAA,GAFasE,KAAK,CAAC/D,IAAI;cAAAsD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEf,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH,CAAC,eAEN/G,OAAA;QAAKyG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7B1G,OAAA;UACEsH,OAAO,EAAEd,eAAgB;UACzBe,QAAQ,EAAE,CAACrH,UAAW;UACtBuG,SAAS,EAAC,iBAAiB;UAC3BpF,KAAK,EAAC,iCAAQ;UAAAqF,QAAA,EACf;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN/G,OAAA;MAAKyG,SAAS,EAAC,eAAe;MAACO,EAAE,EAAC,eAAe;MAAAN,QAAA,gBAC/C1G,OAAA;QAAKyG,SAAS,EAAC,UAAU;QAAAC,QAAA,GAEtBpG,QAAQ,CAACiD,MAAM,KAAK,CAAC,iBACpBvD,OAAA;UAAKyG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B1G,OAAA;YAAA0G,QAAA,EAAI;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB/G,OAAA;YAAKyG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC3BtF,kBAAkB,CAACyB,GAAG,CAAC,CAAC2E,QAAQ,EAAEC,aAAa,kBAC9CzH,OAAA;cAAyByG,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBACnD1G,OAAA;gBAAA0G,QAAA,EAAKc,QAAQ,CAACnG;cAAK;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzB/G,OAAA;gBAAKyG,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAChCc,QAAQ,CAAClG,SAAS,CAACuB,GAAG,CAAC,CAAC8B,QAAQ,EAAE+C,aAAa,kBAC9C1H,OAAA;kBAEEyG,SAAS,EAAC,cAAc;kBACxBa,OAAO,EAAEA,CAAA,KAAM5C,uBAAuB,CAACC,QAAQ,CAAE;kBAAA+B,QAAA,EAEhD/B;gBAAQ,GAJJ+C,aAAa;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAKf,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA,GAZEU,aAAa;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAalB,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAGAzG,QAAQ,CAACuC,GAAG,CAAC,CAAC8E,GAAG,EAAEC,GAAG,kBACrB5H,OAAA;UAAeyG,SAAS,EAAE,WAAWkB,GAAG,CAACzC,IAAI,KAAK,MAAM,GAAG,cAAc,GAAG,YAAY,EAAG;UAAAwB,QAAA,eACzF1G,OAAA;YAAKyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9B1G,OAAA;cAAKyG,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B1G,OAAA;gBAAMyG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAC3BiB,GAAG,CAACzC,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG;cAAO;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC,eACP/G,OAAA;gBAAMyG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEiB,GAAG,CAACvC;cAAS;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eAEN/G,OAAA;cAAKyG,SAAS,EAAC,cAAc;cAAAC,QAAA,EAC1BiB,GAAG,CAACzC,IAAI,KAAK,MAAM,gBAClBlF,OAAA;gBAAKyG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAEiB,GAAG,CAACxC;cAAO;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,gBAEjD/G,OAAA;gBAAKyG,SAAS,EAAC,YAAY;gBAAAC,QAAA,GACxBiB,GAAG,CAACxC,OAAO,iBACVnF,OAAA;kBAAKyG,SAAS,EAAC,aAAa;kBAACoB,uBAAuB,EAAE;oBAAEC,MAAM,EAAEH,GAAG,CAACxC;kBAAQ;gBAAE;kBAAAyB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CACjF,EACAY,GAAG,CAAC9B,GAAG,iBACN7F,OAAA;kBAAKyG,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBACzB1G,OAAA;oBAAKyG,SAAS,EAAC,YAAY;oBAAAC,QAAA,eACzB1G,OAAA;sBAAMyG,SAAS,EAAC,WAAW;sBAAAC,QAAA,EAAC;oBAAU;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC1C,CAAC,eACN/G,OAAA;oBAAKyG,SAAS,EAAC,UAAU;oBAAAC,QAAA,eACvB1G,OAAA;sBAAA0G,QAAA,eAAK1G,OAAA;wBAAA0G,QAAA,EAAOiB,GAAG,CAAC9B;sBAAG;wBAAAe,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAO;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9B,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CACN,EACAY,GAAG,CAAC7B,MAAM,iBACT9F,OAAA;kBAAKyG,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B1G,OAAA;oBAAKyG,SAAS,EAAC,eAAe;oBAAAC,QAAA,eAC5B1G,OAAA;sBAAMyG,SAAS,EAAC,cAAc;sBAAAC,QAAA,EAAC;oBAAQ;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC3C,CAAC,eACN/G,OAAA;oBAAKyG,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,EAC5BiB,GAAG,CAAC7B,MAAM,CAACiC,OAAO,IAAIJ,GAAG,CAAC7B,MAAM,CAAC9D,IAAI,gBACpChC,OAAA;sBAAKyG,SAAS,EAAC,cAAc;sBAAAC,QAAA,eAC3B1G,OAAA;wBAAA0G,QAAA,gBACE1G,OAAA;0BAAA0G,QAAA,eACE1G,OAAA;4BAAA0G,QAAA,EACGiB,GAAG,CAAC7B,MAAM,CAACiC,OAAO,CAAClF,GAAG,CAAC,CAACmF,MAAM,EAAEC,CAAC,kBAChCjI,OAAA;8BAAA0G,QAAA,EAAasB;4BAAM,GAAVC,CAAC;8BAAArB,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAc,CACzB;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACA;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACA,CAAC,eACR/G,OAAA;0BAAA0G,QAAA,EACGiB,GAAG,CAAC7B,MAAM,CAAC9D,IAAI,CAACa,GAAG,CAAC,CAACqF,GAAG,EAAED,CAAC,kBAC1BjI,OAAA;4BAAA0G,QAAA,EACGwB,GAAG,CAACrF,GAAG,CAAC,CAACsF,IAAI,EAAEC,CAAC,kBACfpI,OAAA;8BAAA0G,QAAA,EAAayB;4BAAI,GAARC,CAAC;8BAAAxB,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAAY,CACvB;0BAAC,GAHKkB,CAAC;4BAAArB,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAIN,CACL;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACG,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACL,CAAC,gBAEN/G,OAAA;sBAAKyG,SAAS,EAAC,aAAa;sBAAAC,QAAA,eAC1B1G,OAAA;wBAAA0G,QAAA,eAAK1G,OAAA;0BAAA0G,QAAA,EAAO2B,IAAI,CAACC,SAAS,CAACX,GAAG,CAAC7B,MAAM,EAAE,IAAI,EAAE,CAAC;wBAAC;0BAAAc,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO;sBAAC;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC1D;kBACN;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CACN,EACAY,GAAG,CAACvF,KAAK,iBACRpC,OAAA;kBAAKyG,SAAS,EAAC,eAAe;kBAAAC,QAAA,gBAC5B1G,OAAA;oBAAMyG,SAAS,EAAC,YAAY;oBAAAC,QAAA,EAAC;kBAAE;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACtC/G,OAAA;oBAAMyG,SAAS,EAAC,YAAY;oBAAAC,QAAA,EAAEiB,GAAG,CAACxC;kBAAO;oBAAAyB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9C,CACN;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAvEEa,GAAG;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwER,CACN,CAAC,EAGDrG,OAAO,iBACNV,OAAA;UAAKyG,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjC1G,OAAA;YAAKyG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9B1G,OAAA;cAAKyG,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7B1G,OAAA;gBAAMyG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC3C/G,OAAA;gBAAMyG,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAE,IAAIrB,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;cAAC;gBAAAsB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpE,CAAC,eACN/G,OAAA;cAAKyG,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3B1G,OAAA;gBAAKyG,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,gBAC9B1G,OAAA;kBAAKyG,SAAS,EAAC,cAAc;kBAAAC,QAAA,gBAC3B1G,OAAA;oBAAA4G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACb/G,OAAA;oBAAA4G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC,eACb/G,OAAA;oBAAA4G,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAY,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,eACN/G,OAAA;kBAAA0G,QAAA,EAAM;gBAAoB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN/G,OAAA;QAAKuI,GAAG,EAAEzH;MAAe;QAAA8F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eAGN/G,OAAA;MAAKyG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B1G,OAAA;QAAKyG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B1G,OAAA;UACEuI,GAAG,EAAExH,WAAY;UACjBwF,KAAK,EAAE/F,KAAM;UACbyG,QAAQ,EAAEZ,iBAAkB;UAC5BmC,SAAS,EAAExC,aAAc;UACzByC,IAAI,EAAE7H,YAAa;UACnB8H,WAAW,EAAC,sHAAsC;UAClDnB,QAAQ,EAAE,CAACrH,UAAU,IAAIQ,OAAO,IAAI,CAACQ,eAAgB,CAAC;QAAA;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACF/G,OAAA;UACEsH,OAAO,EAAExC,UAAW;UACpByC,QAAQ,EAAE,CAAC/G,KAAK,CAACuE,IAAI,CAAC,CAAC,IAAI,CAAC7E,UAAU,IAAIQ,OAAO,IAAI,CAACQ,eAAgB,CAAC;UAAA;UACvEuF,SAAS,EAAC,aAAa;UAAAC,QAAA,eAEvB1G,OAAA;YAAMyG,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEL,CAAC7F,eAAe,iBACflB,OAAA;QAAKyG,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B1G,OAAA;UAAA0G,QAAA,EAAM;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1G,EAAA,CAzdQJ,aAAa;AAAA0I,EAAA,GAAb1I,aAAa;AA2dtB,eAAeA,aAAa;AAAC,IAAA0I,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}