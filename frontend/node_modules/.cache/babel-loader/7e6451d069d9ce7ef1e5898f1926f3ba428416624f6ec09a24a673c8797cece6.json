{"ast":null,"code":"import React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OpenAIManager=()=>{const[openaiKeys,setOpenaiKeys]=useState([]);const[selectedKey,setSelectedKey]=useState('');const[newKeyName,setNewKeyName]=useState('');const[newKeyValue,setNewKeyValue]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');// OpenAI 키 목록 가져오기\nconst fetchOpenAIKeys=async()=>{setLoading(true);try{const response=await fetch('/api/openai/keys',{credentials:'include'});if(response.ok){const data=await response.json();setOpenaiKeys(data.keys||[]);setSelectedKey(data.selected||'');}else{console.error('OpenAI 키 목록 가져오기 실패');}}catch(error){console.error('OpenAI 키 목록 요청 오류:',error);}finally{setLoading(false);}};// 키 추가\nconst handleAddKey=async e=>{e.preventDefault();if(!newKeyName.trim()||!newKeyValue.trim()){setError('키 이름과 값은 필수입니다.');return;}setLoading(true);try{const formData=new FormData();formData.append('name',newKeyName);formData.append('key',newKeyValue);const response=await fetch('/api/openai/keys',{method:'POST',body:formData,credentials:'include'});if(response.ok){const data=await response.json();setOpenaiKeys(data.keys);setNewKeyName('');setNewKeyValue('');setSuccess('OpenAI API 키가 성공적으로 추가되었습니다.');setError('');}else{setError('키 추가에 실패했습니다.');}}catch(error){setError('키 추가 중 오류가 발생했습니다.');}finally{setLoading(false);}};// 키 선택\nconst handleSelectKey=async keyName=>{setLoading(true);try{const formData=new FormData();formData.append('name',keyName);const response=await fetch('/api/openai/select',{method:'POST',body:formData,credentials:'include'});if(response.ok){setSelectedKey(keyName);setSuccess('OpenAI API 키가 선택되었습니다.');setError('');}else{setError('키 선택에 실패했습니다.');}}catch(error){setError('키 선택 중 오류가 발생했습니다.');}finally{setLoading(false);}};// 키 삭제\nconst handleDeleteKey=async keyName=>{if(!window.confirm(\"\\uC815\\uB9D0\\uB85C \\\"\".concat(keyName,\"\\\" \\uD0A4\\uB97C \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){return;}setLoading(true);try{const response=await fetch(\"/api/openai/keys/\".concat(keyName),{method:'DELETE',credentials:'include'});if(response.ok){const data=await response.json();setOpenaiKeys(data.keys);if(selectedKey===keyName){setSelectedKey('');}setSuccess('OpenAI API 키가 삭제되었습니다.');setError('');}else{setError('키 삭제에 실패했습니다.');}}catch(error){setError('키 삭제 중 오류가 발생했습니다.');}finally{setLoading(false);}};// 키 마스킹 함수 (앞 3글자 + ... + 뒤 4글자만 보이게)\nconst maskKey=key=>{if(!key)return'';if(key.length<=8)return'*'.repeat(key.length);return key.substring(0,3)+'***...***'+key.substring(key.length-4);};useEffect(()=>{fetchOpenAIKeys();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"openai-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDD11 OpenAI API \\uD0A4 \\uAD00\\uB9AC\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC790\\uC5F0\\uC5B4\\u2192SQL \\uBCC0\\uD658\\uC744 \\uC704\\uD55C OpenAI API \\uD0A4\\uB97C \\uB4F1\\uB85D\\uD558\\uACE0 \\uAD00\\uB9AC\\uD558\\uC138\\uC694.\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-error\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u26A0\\uFE0F \",error]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setError(''),className:\"close-btn\",children:\"\\u2715\"})]}),success&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-success\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u2705 \",success]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSuccess(''),className:\"close-btn\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uC0C8 API \\uD0A4 \\uCD94\\uAC00\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddKey,className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"key-name\",children:\"\\uD0A4 \\uC774\\uB984:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"key-name\",value:newKeyName,onChange:e=>setNewKeyName(e.target.value),placeholder:\"\\uC608: Production Key, Development Key\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"key-value\",children:\"API \\uD0A4:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"key-value\",value:newKeyValue,onChange:e=>setNewKeyValue(e.target.value),placeholder:\"sk-...\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:loading?'추가 중...':'키 추가'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uB4F1\\uB85D\\uB41C API \\uD0A4\"}),openaiKeys.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uB4F1\\uB85D\\uB41C OpenAI API \\uD0A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC704\\uC5D0\\uC11C \\uC0C8 \\uD0A4\\uB97C \\uCD94\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"key-list\",children:openaiKeys.map((key,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"key-item \".concat(selectedKey===key.name?'selected':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"key-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"key-name\",children:[/*#__PURE__*/_jsx(\"strong\",{children:key.name}),selectedKey===key.name&&/*#__PURE__*/_jsx(\"span\",{className:\"selected-badge\",children:\"\\uC120\\uD0DD\\uB428\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"key-value\",children:maskKey(key.key)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"key-actions\",children:[selectedKey!==key.name&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSelectKey(key.name),className:\"btn btn-sm btn-outline\",disabled:loading,children:\"\\uC120\\uD0DD\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteKey(key.name),className:\"btn btn-sm btn-danger\",disabled:loading,children:\"\\uC0AD\\uC81C\"})]})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCD6 \\uC0AC\\uC6A9\\uBC95\"}),/*#__PURE__*/_jsx(\"div\",{className:\"usage-guide\",children:/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"OpenAI\\uC5D0\\uC11C API \\uD0A4\\uB97C \\uBC1C\\uAE09\\uBC1B\\uC73C\\uC138\\uC694 (\",/*#__PURE__*/_jsx(\"a\",{href:\"https://platform.openai.com/api-keys\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"https://platform.openai.com/api-keys\"}),\")\"]}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uC704 \\uD3FC\\uC5D0\\uC11C \\uD0A4 \\uC774\\uB984\\uACFC API \\uD0A4\\uB97C \\uC785\\uB825\\uD558\\uACE0 \\uCD94\\uAC00\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uC0AC\\uC6A9\\uD560 \\uD0A4\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"li\",{children:\"AI \\uCC44\\uD305\\uC5D0\\uC11C \\uC790\\uC5F0\\uC5B4\\uB85C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uB97C \\uC9C8\\uC758\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"})]})})]})]});};export default OpenAIManager;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","OpenAIManager","openaiKeys","setOpenaiKeys","selectedKey","setSelectedKey","newKeyName","setNewKeyName","newKeyValue","setNewKeyValue","loading","setLoading","error","setError","success","setSuccess","fetchOpenAIKeys","response","fetch","credentials","ok","data","json","keys","selected","console","handleAddKey","e","preventDefault","trim","formData","FormData","append","method","body","handleSelectKey","keyName","handleDeleteKey","window","confirm","concat","maskKey","key","length","repeat","substring","className","children","onClick","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","disabled","map","index","name","href","rel"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/OpenAIManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst OpenAIManager = () => {\n  const [openaiKeys, setOpenaiKeys] = useState([]);\n  const [selectedKey, setSelectedKey] = useState('');\n  const [newKeyName, setNewKeyName] = useState('');\n  const [newKeyValue, setNewKeyValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // OpenAI 키 목록 가져오기\n  const fetchOpenAIKeys = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/openai/keys', { credentials: 'include' });\n      if (response.ok) {\n        const data = await response.json();\n        setOpenaiKeys(data.keys || []);\n        setSelectedKey(data.selected || '');\n      } else {\n        console.error('OpenAI 키 목록 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('OpenAI 키 목록 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 추가\n  const handleAddKey = async (e) => {\n    e.preventDefault();\n    if (!newKeyName.trim() || !newKeyValue.trim()) {\n      setError('키 이름과 값은 필수입니다.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('name', newKeyName);\n      formData.append('key', newKeyValue);\n\n      const response = await fetch('/api/openai/keys', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setOpenaiKeys(data.keys);\n        \n        setNewKeyName('');\n        setNewKeyValue('');\n        setSuccess('OpenAI API 키가 성공적으로 추가되었습니다.');\n        setError('');\n      } else {\n        setError('키 추가에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 추가 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 선택\n  const handleSelectKey = async (keyName) => {\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('name', keyName);\n\n      const response = await fetch('/api/openai/select', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n\n      if (response.ok) {\n        setSelectedKey(keyName);\n        setSuccess('OpenAI API 키가 선택되었습니다.');\n        setError('');\n      } else {\n        setError('키 선택에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 선택 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 삭제\n  const handleDeleteKey = async (keyName) => {\n    if (!window.confirm(`정말로 \"${keyName}\" 키를 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/openai/keys/${keyName}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setOpenaiKeys(data.keys);\n        \n        if (selectedKey === keyName) {\n          setSelectedKey('');\n        }\n        \n        setSuccess('OpenAI API 키가 삭제되었습니다.');\n        setError('');\n      } else {\n        setError('키 삭제에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 삭제 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 마스킹 함수 (앞 3글자 + ... + 뒤 4글자만 보이게)\n  const maskKey = (key) => {\n    if (!key) return '';\n    if (key.length <= 8) return '*'.repeat(key.length);\n    return key.substring(0, 3) + '***...***' + key.substring(key.length - 4);\n  };\n\n  useEffect(() => {\n    fetchOpenAIKeys();\n  }, []);\n\n  return (\n    <div className=\"openai-manager\">\n      <div className=\"section-header\">\n        <h2>🔑 OpenAI API 키 관리</h2>\n        <p>자연어→SQL 변환을 위한 OpenAI API 키를 등록하고 관리하세요.</p>\n      </div>\n\n      {/* 상태 메시지 */}\n      {error && (\n        <div className=\"alert alert-error\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError('')} className=\"close-btn\">✕</button>\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"alert alert-success\">\n          <span>✅ {success}</span>\n          <button onClick={() => setSuccess('')} className=\"close-btn\">✕</button>\n        </div>\n      )}\n\n      {/* 키 추가 폼 */}\n      <div className=\"card\">\n        <h3>새 API 키 추가</h3>\n        <form onSubmit={handleAddKey} className=\"form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"key-name\">키 이름:</label>\n            <input\n              type=\"text\"\n              id=\"key-name\"\n              value={newKeyName}\n              onChange={(e) => setNewKeyName(e.target.value)}\n              placeholder=\"예: Production Key, Development Key\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"key-value\">API 키:</label>\n            <input\n              type=\"password\"\n              id=\"key-value\"\n              value={newKeyValue}\n              onChange={(e) => setNewKeyValue(e.target.value)}\n              placeholder=\"sk-...\"\n              required\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={loading}\n          >\n            {loading ? '추가 중...' : '키 추가'}\n          </button>\n        </form>\n      </div>\n\n      {/* 등록된 키 목록 */}\n      <div className=\"card\">\n        <h3>등록된 API 키</h3>\n        {openaiKeys.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>등록된 OpenAI API 키가 없습니다.</p>\n            <p>위에서 새 키를 추가해주세요.</p>\n          </div>\n        ) : (\n          <div className=\"key-list\">\n            {openaiKeys.map((key, index) => (\n              <div \n                key={index} \n                className={`key-item ${selectedKey === key.name ? 'selected' : ''}`}\n              >\n                <div className=\"key-info\">\n                  <div className=\"key-name\">\n                    <strong>{key.name}</strong>\n                    {selectedKey === key.name && (\n                      <span className=\"selected-badge\">선택됨</span>\n                    )}\n                  </div>\n                  <div className=\"key-value\">\n                    {maskKey(key.key)}\n                  </div>\n                </div>\n                <div className=\"key-actions\">\n                  {selectedKey !== key.name && (\n                    <button\n                      onClick={() => handleSelectKey(key.name)}\n                      className=\"btn btn-sm btn-outline\"\n                      disabled={loading}\n                    >\n                      선택\n                    </button>\n                  )}\n                  <button\n                    onClick={() => handleDeleteKey(key.name)}\n                    className=\"btn btn-sm btn-danger\"\n                    disabled={loading}\n                  >\n                    삭제\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* 사용법 안내 */}\n      <div className=\"card\">\n        <h3>📖 사용법</h3>\n        <div className=\"usage-guide\">\n          <ol>\n            <li>OpenAI에서 API 키를 발급받으세요 (<a href=\"https://platform.openai.com/api-keys\" target=\"_blank\" rel=\"noopener noreferrer\">https://platform.openai.com/api-keys</a>)</li>\n            <li>위 폼에서 키 이름과 API 키를 입력하고 추가하세요</li>\n            <li>사용할 키를 선택하세요</li>\n            <li>AI 채팅에서 자연어로 데이터베이스를 질의할 수 있습니다</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenAIManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}