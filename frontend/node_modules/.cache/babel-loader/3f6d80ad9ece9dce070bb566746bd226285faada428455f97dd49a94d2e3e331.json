{"ast":null,"code":"// App.js\n// 전체 앱 엔트리포인트\nimport React,{useState,useEffect,useCallback}from'react';import{BrowserRouter as Router,Routes,Route,useNavigate,useLocation}from'react-router-dom';import ChatComponent from'./components/ChatComponent';import DatabaseManager from'./components/DatabaseManager';import MonitoringComponent from'./components/MonitoringComponent';import SlowQueryComponent from'./components/SlowQueryComponent';import AwsIntegrationComponent from'./components/AwsIntegrationComponent';import AIManager from'./components/AIManager';// OpenAIManager 대신 AIManager 임포트\nimport PlaybookComponent from'./components/PlaybookComponent';import AwsRdsResource from'./components/AwsRdsResource';import AwsCloudwatchResource from'./components/AwsCloudwatchResource';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[databases,setDatabases]=useState([]);const[selectedDb,setSelectedDb]=useState('');// OpenAI 키 관련 상태는 AIManager에서 관리하므로 여기서는 제거하거나 필요에 따라 변경\n// const [openaiKeys, setOpenaiKeys] = useState([]);\n// const [selectedOpenAIKey, setSelectedOpenAIKey] = useState('');\nconst[loading,setLoading]=useState(true);const[showAwsSubMenu,setShowAwsSubMenu]=useState(false);// 네비게이션 메뉴\nconst menuItems=[{id:'chat',label:'💬 AI 채팅',icon:'💬',path:'/chat'},{id:'databases',label:'🗄️ DB 관리',icon:'🗄️',path:'/databases'},{id:'ai-manager',label:'🤖 AI 등록',icon:'🤖',path:'/ai-manager'},// 메뉴 텍스트 및 경로 변경\n{id:'playbooks',label:'📖 플레이북',icon:'📖',path:'/playbooks'},{id:'monitoring',label:'📊 모니터링',icon:'📊',path:'/monitoring'},{id:'slowquery',label:'🐌 슬로우 쿼리',icon:'🐌',path:'/slowquery'},{id:'aws',label:'☁️ AWS 통합',icon:'☁️',path:'/aws'},{id:'aws-resources',label:'☁️ AWS 리소스 조회',icon:'☁️',children:[{id:'aws-rds',label:'RDS 조회',icon:'🗄️',path:'/aws-rds'},{id:'aws-cloudwatch',label:'CloudWatch 조회',icon:'📊',path:'/aws-cloudwatch'}]}];// DB 목록 가져오기\nconst fetchDatabases=useCallback(async()=>{setLoading(true);try{const response=await fetch('/api/databases');if(response.ok){const data=await response.json();setDatabases(data.databases||[]);if(data.databases&&data.databases.length>0&&!selectedDb){setSelectedDb(data.databases[0].name);}}else{console.error('DB 목록 가져오기 실패');}}catch(error){console.error('DB 목록 요청 오류:',error);}finally{setLoading(false);}},[selectedDb]);// OpenAI 키 목록 가져오기 (이제 AIManager에서 관리하므로 필요없거나 변경될 수 있음)\n// const fetchOpenAIKeys = async () => {\n//   try {\n//     const response = await fetch('/api/openai/keys');\n//     if (response.ok) {\n//       const data = await response.json();\n//       setOpenaiKeys(data.keys || []);\n//       setSelectedOpenAIKey(data.selected || '');\n//     }\n//   } catch (error) {\n//     console.error('OpenAI 키 목록 가져오기 실패:', error);\n//   }\n// };\n// DB 변경 처리\nconst handleDatabaseChange=()=>{fetchDatabases();};// DB 삭제 처리\nconst handleDatabaseDelete=dbName=>{setDatabases(prev=>prev.filter(db=>db.name!==dbName));if(selectedDb===dbName){setSelectedDb('');}};// DB 추가 처리\nconst handleDatabaseAdd=()=>{fetchDatabases();};// OpenAI 키 변경 처리 (이제 AIManager에서 관리하므로 필요없거나 변경될 수 있음)\n// const handleOpenAIKeyChange = () => {\n//   fetchOpenAIKeys();\n// };\nuseEffect(()=>{fetchDatabases();// fetchOpenAIKeys(); // 이제 AIManager에서 관리\n},[fetchDatabases]);// 라우터 네비게이션 헬퍼\nfunction SidebarNav(){const navigate=useNavigate();const location=useLocation();return/*#__PURE__*/_jsx(\"nav\",{className:\"sidebar-nav\",children:menuItems.map(item=>item.children?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowAwsSubMenu(!showAwsSubMenu),className:\"nav-item \".concat(location.pathname.startsWith('/aws-')?'active':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"nav-icon\",children:item.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"nav-label\",children:item.label})]}),showAwsSubMenu&&/*#__PURE__*/_jsx(\"div\",{className:\"submenu\",children:item.children.map(sub=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>navigate(sub.path),className:\"nav-item sub \".concat(location.pathname===sub.path?'active':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"nav-icon\",children:sub.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"nav-label\",children:sub.label})]},sub.id))})]},item.id):/*#__PURE__*/_jsxs(\"button\",{onClick:()=>navigate(item.path),className:\"nav-item \".concat(location.pathname===item.path?'active':''),children:[/*#__PURE__*/_jsx(\"span\",{className:\"nav-icon\",children:item.icon}),/*#__PURE__*/_jsx(\"span\",{className:\"nav-label\",children:item.label})]},item.id))});}if(loading&&databases.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"app-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})]});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDE80 DB Agent\"}),/*#__PURE__*/_jsx(\"p\",{children:\"SRE/DBA\\uC6A9 AI \\uB3C4\\uAD6C\"})]}),/*#__PURE__*/_jsx(SidebarNav,{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/chat\",element:/*#__PURE__*/_jsx(ChatComponent,{selectedDb:selectedDb,databases:databases,onDbChange:setSelectedDb})}),/*#__PURE__*/_jsx(Route,{path:\"/databases\",element:/*#__PURE__*/_jsx(DatabaseManager,{databases:databases,onDatabaseDelete:handleDatabaseDelete,onDatabaseChange:handleDatabaseChange})}),/*#__PURE__*/_jsx(Route,{path:\"/ai-manager\",element:/*#__PURE__*/_jsx(AIManager,{})}),/*#__PURE__*/_jsx(Route,{path:\"/playbooks\",element:/*#__PURE__*/_jsx(PlaybookComponent,{selectedDb:selectedDb,databases:databases})}),/*#__PURE__*/_jsx(Route,{path:\"/monitoring\",element:/*#__PURE__*/_jsx(MonitoringComponent,{selectedDb:selectedDb,databases:databases})}),/*#__PURE__*/_jsx(Route,{path:\"/slowquery\",element:/*#__PURE__*/_jsx(SlowQueryComponent,{selectedDb:selectedDb,databases:databases})}),/*#__PURE__*/_jsx(Route,{path:\"/aws\",element:/*#__PURE__*/_jsx(AwsIntegrationComponent,{selectedDb:selectedDb,databases:databases})}),/*#__PURE__*/_jsx(Route,{path:\"/aws-rds\",element:/*#__PURE__*/_jsx(AwsRdsResource,{onDatabaseAdd:handleDatabaseAdd})}),/*#__PURE__*/_jsx(Route,{path:\"/aws-cloudwatch\",element:/*#__PURE__*/_jsx(AwsCloudwatchResource,{})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(ChatComponent,{selectedDb:selectedDb,databases:databases,onDbChange:setSelectedDb})})]})})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","BrowserRouter","Router","Routes","Route","useNavigate","useLocation","ChatComponent","DatabaseManager","MonitoringComponent","SlowQueryComponent","AwsIntegrationComponent","AIManager","PlaybookComponent","AwsRdsResource","AwsCloudwatchResource","jsx","_jsx","jsxs","_jsxs","App","databases","setDatabases","selectedDb","setSelectedDb","loading","setLoading","showAwsSubMenu","setShowAwsSubMenu","menuItems","id","label","icon","path","children","fetchDatabases","response","fetch","ok","data","json","length","name","console","error","handleDatabaseChange","handleDatabaseDelete","dbName","prev","filter","db","handleDatabaseAdd","SidebarNav","navigate","location","className","map","item","onClick","concat","pathname","startsWith","sub","element","onDbChange","onDatabaseDelete","onDatabaseChange","onDatabaseAdd"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/App.js"],"sourcesContent":["// App.js\n// 전체 앱 엔트리포인트\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport ChatComponent from './components/ChatComponent';\nimport DatabaseManager from './components/DatabaseManager';\nimport MonitoringComponent from './components/MonitoringComponent';\nimport SlowQueryComponent from './components/SlowQueryComponent';\nimport AwsIntegrationComponent from './components/AwsIntegrationComponent';\nimport AIManager from './components/AIManager'; // OpenAIManager 대신 AIManager 임포트\nimport PlaybookComponent from './components/PlaybookComponent';\nimport AwsRdsResource from './components/AwsRdsResource';\nimport AwsCloudwatchResource from './components/AwsCloudwatchResource';\n\nfunction App() {\n  const [databases, setDatabases] = useState([]);\n  const [selectedDb, setSelectedDb] = useState('');\n  // OpenAI 키 관련 상태는 AIManager에서 관리하므로 여기서는 제거하거나 필요에 따라 변경\n  // const [openaiKeys, setOpenaiKeys] = useState([]);\n  // const [selectedOpenAIKey, setSelectedOpenAIKey] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [showAwsSubMenu, setShowAwsSubMenu] = useState(false);\n\n  // 네비게이션 메뉴\n  const menuItems = [\n    { id: 'chat', label: '💬 AI 채팅', icon: '💬', path: '/chat' },\n    { id: 'databases', label: '🗄️ DB 관리', icon: '🗄️', path: '/databases' },\n    { id: 'ai-manager', label: '🤖 AI 등록', icon: '🤖', path: '/ai-manager' }, // 메뉴 텍스트 및 경로 변경\n    { id: 'playbooks', label: '📖 플레이북', icon: '📖', path: '/playbooks' },\n    { id: 'monitoring', label: '📊 모니터링', icon: '📊', path: '/monitoring' },\n    { id: 'slowquery', label: '🐌 슬로우 쿼리', icon: '🐌', path: '/slowquery' },\n    { id: 'aws', label: '☁️ AWS 통합', icon: '☁️', path: '/aws' },\n    { id: 'aws-resources', label: '☁️ AWS 리소스 조회', icon: '☁️',\n      children: [\n        { id: 'aws-rds', label: 'RDS 조회', icon: '🗄️', path: '/aws-rds' },\n        { id: 'aws-cloudwatch', label: 'CloudWatch 조회', icon: '📊', path: '/aws-cloudwatch' }\n      ]\n    }\n  ];\n\n  // DB 목록 가져오기\n  const fetchDatabases = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/databases');\n      if (response.ok) {\n        const data = await response.json();\n        setDatabases(data.databases || []);\n        if (data.databases && data.databases.length > 0 && !selectedDb) {\n          setSelectedDb(data.databases[0].name);\n        }\n      } else {\n        console.error('DB 목록 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('DB 목록 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedDb]);\n\n  // OpenAI 키 목록 가져오기 (이제 AIManager에서 관리하므로 필요없거나 변경될 수 있음)\n  // const fetchOpenAIKeys = async () => {\n  //   try {\n  //     const response = await fetch('/api/openai/keys');\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       setOpenaiKeys(data.keys || []);\n  //       setSelectedOpenAIKey(data.selected || '');\n  //     }\n  //   } catch (error) {\n  //     console.error('OpenAI 키 목록 가져오기 실패:', error);\n  //   }\n  // };\n\n  // DB 변경 처리\n  const handleDatabaseChange = () => {\n    fetchDatabases();\n  };\n\n  // DB 삭제 처리\n  const handleDatabaseDelete = (dbName) => {\n    setDatabases(prev => prev.filter(db => db.name !== dbName));\n    if (selectedDb === dbName) {\n      setSelectedDb('');\n    }\n  };\n\n  // DB 추가 처리\n  const handleDatabaseAdd = () => {\n    fetchDatabases();\n  };\n\n  // OpenAI 키 변경 처리 (이제 AIManager에서 관리하므로 필요없거나 변경될 수 있음)\n  // const handleOpenAIKeyChange = () => {\n  //   fetchOpenAIKeys();\n  // };\n\n  useEffect(() => {\n    fetchDatabases();\n    // fetchOpenAIKeys(); // 이제 AIManager에서 관리\n  }, [fetchDatabases]);\n\n  // 라우터 네비게이션 헬퍼\n  function SidebarNav() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    return (\n      <nav className=\"sidebar-nav\">\n        {menuItems.map(item => (\n          item.children ? (\n            <div key={item.id}>\n              <button\n                onClick={() => setShowAwsSubMenu(!showAwsSubMenu)}\n                className={`nav-item ${location.pathname.startsWith('/aws-') ? 'active' : ''}`}\n              >\n                <span className=\"nav-icon\">{item.icon}</span>\n                <span className=\"nav-label\">{item.label}</span>\n              </button>\n              {showAwsSubMenu && (\n                <div className=\"submenu\">\n                  {item.children.map(sub => (\n                    <button\n                      key={sub.id}\n                      onClick={() => navigate(sub.path)}\n                      className={`nav-item sub ${location.pathname === sub.path ? 'active' : ''}`}\n                    >\n                      <span className=\"nav-icon\">{sub.icon}</span>\n                      <span className=\"nav-label\">{sub.label}</span>\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          ) : (\n            <button\n              key={item.id}\n              onClick={() => navigate(item.path)}\n              className={`nav-item ${location.pathname === item.path ? 'active' : ''}`}\n            >\n              <span className=\"nav-icon\">{item.icon}</span>\n              <span className=\"nav-label\">{item.label}</span>\n            </button>\n          )\n        ))}\n      </nav>\n    );\n  }\n\n  if (loading && databases.length === 0) {\n    return (\n      <div className=\"app-loading\">\n        <div className=\"loading-spinner\"></div>\n        <p>데이터베이스 정보를 불러오는 중...</p>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"app wrapper\">\n        {/* 사이드바 네비게이션 */}\n        <div className=\"sidebar\">\n          <div className=\"sidebar-header\">\n            <h1>🚀 DB Agent</h1>\n            <p>SRE/DBA용 AI 도구</p>\n          </div>\n          <SidebarNav />\n        </div>\n        <div className=\"main-content\">\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/chat\" element={<ChatComponent selectedDb={selectedDb} databases={databases} onDbChange={setSelectedDb} />} />\n              <Route path=\"/databases\" element={<DatabaseManager databases={databases} onDatabaseDelete={handleDatabaseDelete} onDatabaseChange={handleDatabaseChange} />} />\n              <Route path=\"/ai-manager\" element={<AIManager />} />\n              <Route path=\"/playbooks\" element={<PlaybookComponent selectedDb={selectedDb} databases={databases} />} />\n              <Route path=\"/monitoring\" element={<MonitoringComponent selectedDb={selectedDb} databases={databases} />} />\n              <Route path=\"/slowquery\" element={<SlowQueryComponent selectedDb={selectedDb} databases={databases} />} />\n              <Route path=\"/aws\" element={<AwsIntegrationComponent selectedDb={selectedDb} databases={databases} />} />\n              <Route path=\"/aws-rds\" element={<AwsRdsResource onDatabaseAdd={handleDatabaseAdd} />} />\n              <Route path=\"/aws-cloudwatch\" element={<AwsCloudwatchResource />} />\n              <Route path=\"*\" element={<ChatComponent selectedDb={selectedDb} databases={databases} onDbChange={setSelectedDb} />} />\n            </Routes>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}