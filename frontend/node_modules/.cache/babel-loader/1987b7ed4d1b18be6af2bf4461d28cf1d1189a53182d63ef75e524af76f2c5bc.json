{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsRdsResource.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AwsRdsResource = ({\n  onDatabaseAdd\n}) => {\n  _s();\n  const [instances, setInstances] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [expandedClusters, setExpandedClusters] = useState({});\n  useEffect(() => {\n    fetchRdsInstances();\n  }, []);\n  const fetchRdsInstances = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setInstances(data.instances || []);\n      } else {\n        setError('RDS 인스턴스 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 인스턴스 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 클러스터 기준 그룹핑\n  const groupByCluster = instances => {\n    const clusters = {};\n    const singles = [];\n    instances.forEach(inst => {\n      if (inst.DBClusterIdentifier) {\n        if (!clusters[inst.DBClusterIdentifier]) clusters[inst.DBClusterIdentifier] = [];\n        clusters[inst.DBClusterIdentifier].push(inst);\n      } else {\n        singles.push(inst);\n      }\n    });\n    return {\n      clusters,\n      singles\n    };\n  };\n  const {\n    clusters,\n    singles\n  } = groupByCluster(instances);\n  const toggleCluster = clusterId => {\n    setExpandedClusters(prev => ({\n      ...prev,\n      [clusterId]: !prev[clusterId]\n    }));\n  };\n\n  // 클러스터 RO 엔드포인트 추출\n  const getClusterRoEndpoint = clusterInstances => {\n    var _clusterInstances$, _clusterInstances$$En;\n    // RO 주소 우선, 없으면 일반 클러스터 주소\n    const ro = clusterInstances.find(inst => {\n      var _inst$Endpoint, _inst$Endpoint$Addres;\n      return (_inst$Endpoint = inst.Endpoint) === null || _inst$Endpoint === void 0 ? void 0 : (_inst$Endpoint$Addres = _inst$Endpoint.Address) === null || _inst$Endpoint$Addres === void 0 ? void 0 : _inst$Endpoint$Addres.includes('cluster-ro-');\n    });\n    if (ro) return ro.Endpoint.Address;\n    const rw = clusterInstances.find(inst => {\n      var _inst$Endpoint2, _inst$Endpoint2$Addre;\n      return (_inst$Endpoint2 = inst.Endpoint) === null || _inst$Endpoint2 === void 0 ? void 0 : (_inst$Endpoint2$Addre = _inst$Endpoint2.Address) === null || _inst$Endpoint2$Addre === void 0 ? void 0 : _inst$Endpoint2$Addre.includes('cluster-');\n    });\n    if (rw) return rw.Endpoint.Address;\n    // fallback: 첫 인스턴스 주소\n    return ((_clusterInstances$ = clusterInstances[0]) === null || _clusterInstances$ === void 0 ? void 0 : (_clusterInstances$$En = _clusterInstances$.Endpoint) === null || _clusterInstances$$En === void 0 ? void 0 : _clusterInstances$$En.Address) || '-';\n  };\n\n  // 클러스터 등록 핸들러(RO 주소)\n  const handleRegisterCluster = async clusterId => {\n    var _clusterInstances$2;\n    setSuccess('');\n    setError('');\n    const clusterInstances = clusters[clusterId];\n    const endpoint = getClusterRoEndpoint(clusterInstances);\n    const engine = ((_clusterInstances$2 = clusterInstances[0]) === null || _clusterInstances$2 === void 0 ? void 0 : _clusterInstances$2.Engine) || '';\n    try {\n      const formData = new FormData();\n      formData.append('name', clusterId);\n      formData.append('host', endpoint);\n      formData.append('port', '');\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', '');\n      formData.append('engine', engine);\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('클러스터(RO)로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n  const handleRegisterDb = async instance => {\n    setSuccess('');\n    setError('');\n    try {\n      const formData = new FormData();\n      formData.append('name', instance.DBInstanceIdentifier);\n      formData.append('host', instance.Endpoint.Address);\n      formData.append('port', instance.Endpoint.Port);\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', instance.DBName || '');\n      formData.append('engine', instance.Engine || '');\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('DB로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aws-rds-resource\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"RDS \\uC778\\uC2A4\\uD134\\uC2A4 \\uC870\\uD68C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px',\n        color: '#888',\n        marginBottom: '8px'\n      },\n      children: [\"\\u203B \\uD074\\uB7EC\\uC2A4\\uD130\\uB294 \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uC77D\\uAE30\\uC804\\uC6A9(RO) \\uC5D4\\uB4DC\\uD3EC\\uC778\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 78\n      }, this), \"\\uB85C\\uB9CC \\uB4F1\\uB85D\\uB429\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"db-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD074\\uB7EC\\uC2A4\\uD130/\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC5D4\\uC9C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD638\\uC2A4\\uD2B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uB4F1\\uB85D\\uC0C1\\uD0DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC561\\uC158\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [Object.keys(clusters).map(clusterId => {\n          var _clusterInstances$3;\n          const clusterInstances = clusters[clusterId];\n          const roEndpoint = getClusterRoEndpoint(clusterInstances);\n          const engine = ((_clusterInstances$3 = clusterInstances[0]) === null || _clusterInstances$3 === void 0 ? void 0 : _clusterInstances$3.Engine) || '';\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"cluster-row\",\n              onClick: () => toggleCluster(clusterId),\n              style: {\n                cursor: 'pointer',\n                background: '#f7f8fa'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: 8\n                  },\n                  children: expandedClusters[clusterId] ? '▼' : '▶'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: clusterId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this), \" (\\uD074\\uB7EC\\uC2A4\\uD130)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: engine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: roEndpoint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleRegisterCluster(clusterId);\n                  },\n                  className: \"btn btn-primary btn-sm\",\n                  children: \"DB\\uB85C \\uB4F1\\uB85D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), expandedClusters[clusterId] && clusterInstances.map(inst => {\n              var _inst$Endpoint3;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"instance-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    paddingLeft: 32\n                  },\n                  children: inst.DBInstanceIdentifier\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: inst.Engine\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_inst$Endpoint3 = inst.Endpoint) === null || _inst$Endpoint3 === void 0 ? void 0 : _inst$Endpoint3.Address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)]\n              }, inst.DBInstanceIdentifier, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this);\n            })]\n          }, clusterId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this);\n        }), singles.map(inst => {\n          var _inst$Endpoint4;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"instance-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: inst.DBInstanceIdentifier\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: inst.Engine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_inst$Endpoint4 = inst.Endpoint) === null || _inst$Endpoint4 === void 0 ? void 0 : _inst$Endpoint4.Address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRegisterDb(inst),\n                className: \"btn btn-primary btn-sm\",\n                children: \"DB\\uB85C \\uB4F1\\uB85D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, inst.DBInstanceIdentifier, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(AwsRdsResource, \"V9OjZZSfvPFuRkn5QHaq9tF7dIU=\");\n_c = AwsRdsResource;\nexport default AwsRdsResource;\nvar _c;\n$RefreshReg$(_c, \"AwsRdsResource\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AwsRdsResource","onDatabaseAdd","_s","instances","setInstances","loading","setLoading","error","setError","success","setSuccess","expandedClusters","setExpandedClusters","fetchRdsInstances","response","fetch","credentials","ok","data","json","e","groupByCluster","clusters","singles","forEach","inst","DBClusterIdentifier","push","toggleCluster","clusterId","prev","getClusterRoEndpoint","clusterInstances","_clusterInstances$","_clusterInstances$$En","ro","find","_inst$Endpoint","_inst$Endpoint$Addres","Endpoint","Address","includes","rw","_inst$Endpoint2","_inst$Endpoint2$Addre","handleRegisterCluster","_clusterInstances$2","endpoint","engine","Engine","formData","FormData","append","method","body","handleRegisterDb","instance","DBInstanceIdentifier","Port","DBName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","color","marginBottom","Object","keys","map","_clusterInstances$3","roEndpoint","Fragment","onClick","cursor","background","marginRight","stopPropagation","_inst$Endpoint3","paddingLeft","_inst$Endpoint4","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsRdsResource.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AwsRdsResource = ({ onDatabaseAdd }) => {\n  const [instances, setInstances] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [expandedClusters, setExpandedClusters] = useState({});\n\n  useEffect(() => {\n    fetchRdsInstances();\n  }, []);\n\n  const fetchRdsInstances = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', { credentials: 'include' });\n      if (response.ok) {\n        const data = await response.json();\n        setInstances(data.instances || []);\n      } else {\n        setError('RDS 인스턴스 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 인스턴스 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 클러스터 기준 그룹핑\n  const groupByCluster = (instances) => {\n    const clusters = {};\n    const singles = [];\n    instances.forEach(inst => {\n      if (inst.DBClusterIdentifier) {\n        if (!clusters[inst.DBClusterIdentifier]) clusters[inst.DBClusterIdentifier] = [];\n        clusters[inst.DBClusterIdentifier].push(inst);\n      } else {\n        singles.push(inst);\n      }\n    });\n    return { clusters, singles };\n  };\n\n  const { clusters, singles } = groupByCluster(instances);\n\n  const toggleCluster = (clusterId) => {\n    setExpandedClusters(prev => ({ ...prev, [clusterId]: !prev[clusterId] }));\n  };\n\n  // 클러스터 RO 엔드포인트 추출\n  const getClusterRoEndpoint = (clusterInstances) => {\n    // RO 주소 우선, 없으면 일반 클러스터 주소\n    const ro = clusterInstances.find(inst => inst.Endpoint?.Address?.includes('cluster-ro-'));\n    if (ro) return ro.Endpoint.Address;\n    const rw = clusterInstances.find(inst => inst.Endpoint?.Address?.includes('cluster-'));\n    if (rw) return rw.Endpoint.Address;\n    // fallback: 첫 인스턴스 주소\n    return clusterInstances[0]?.Endpoint?.Address || '-';\n  };\n\n  // 클러스터 등록 핸들러(RO 주소)\n  const handleRegisterCluster = async (clusterId) => {\n    setSuccess('');\n    setError('');\n    const clusterInstances = clusters[clusterId];\n    const endpoint = getClusterRoEndpoint(clusterInstances);\n    const engine = clusterInstances[0]?.Engine || '';\n    try {\n      const formData = new FormData();\n      formData.append('name', clusterId);\n      formData.append('host', endpoint);\n      formData.append('port', '');\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', '');\n      formData.append('engine', engine);\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('클러스터(RO)로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleRegisterDb = async (instance) => {\n    setSuccess('');\n    setError('');\n    try {\n      const formData = new FormData();\n      formData.append('name', instance.DBInstanceIdentifier);\n      formData.append('host', instance.Endpoint.Address);\n      formData.append('port', instance.Endpoint.Port);\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', instance.DBName || '');\n      formData.append('engine', instance.Engine || '');\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('DB로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"aws-rds-resource\">\n      <h2>RDS 인스턴스 조회</h2>\n      <div style={{fontSize:'14px',color:'#888',marginBottom:'8px'}}>※ 클러스터는 <b>읽기전용(RO) 엔드포인트</b>로만 등록됩니다.</div>\n      {loading && <div>불러오는 중...</div>}\n      {error && <div className=\"alert alert-error\">{error}</div>}\n      {success && <div className=\"alert alert-success\">{success}</div>}\n      <table className=\"db-table\">\n        <thead>\n          <tr>\n            <th>클러스터/이름</th>\n            <th>엔진</th>\n            <th>호스트</th>\n            <th>등록상태</th>\n            <th>액션</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/* 클러스터 그룹 */}\n          {Object.keys(clusters).map(clusterId => {\n            const clusterInstances = clusters[clusterId];\n            const roEndpoint = getClusterRoEndpoint(clusterInstances);\n            const engine = clusterInstances[0]?.Engine || '';\n            return (\n              <React.Fragment key={clusterId}>\n                <tr className=\"cluster-row\" onClick={() => toggleCluster(clusterId)} style={{ cursor: 'pointer', background: '#f7f8fa' }}>\n                  <td>\n                    <span style={{ marginRight: 8 }}>{expandedClusters[clusterId] ? '▼' : '▶'}</span>\n                    <strong>{clusterId}</strong> (클러스터)\n                  </td>\n                  <td>{engine}</td>\n                  <td>{roEndpoint}</td>\n                  <td>-</td>\n                  <td>\n                    <button onClick={e => { e.stopPropagation(); handleRegisterCluster(clusterId); }} className=\"btn btn-primary btn-sm\">DB로 등록</button>\n                  </td>\n                </tr>\n                {expandedClusters[clusterId] && clusterInstances.map(inst => (\n                  <tr key={inst.DBInstanceIdentifier} className=\"instance-row\">\n                    <td style={{ paddingLeft: 32 }}>{inst.DBInstanceIdentifier}</td>\n                    <td>{inst.Engine}</td>\n                    <td>{inst.Endpoint?.Address}</td>\n                    <td>-</td>\n                    <td></td>\n                  </tr>\n                ))}\n              </React.Fragment>\n            );\n          })}\n          {/* 단일 인스턴스 */}\n          {singles.map(inst => (\n            <tr key={inst.DBInstanceIdentifier} className=\"instance-row\">\n              <td>{inst.DBInstanceIdentifier}</td>\n              <td>{inst.Engine}</td>\n              <td>{inst.Endpoint?.Address}</td>\n              <td>-</td>\n              <td>\n                <button onClick={() => handleRegisterDb(inst)} className=\"btn btn-primary btn-sm\">DB로 등록</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AwsRdsResource; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}