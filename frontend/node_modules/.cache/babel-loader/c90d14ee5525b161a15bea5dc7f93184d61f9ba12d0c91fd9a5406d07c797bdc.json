{"ast":null,"code":"import _objectSpread from\"/Users/bskong/Repository/test/db-agent/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DatabaseManager(_ref){let{databases,onDatabaseChange,onDatabaseDelete,onDatabaseAdd}=_ref;const[showForm,setShowForm]=useState(false);const[editingDb,setEditingDb]=useState(null);const[formData,setFormData]=useState({name:'',host:'',port:'',database:'',username:'',password:''});const[errors,setErrors]=useState({});// 연결 상태 관리 (localStorage 연동)\nconst[connectionStatus,setConnectionStatus]=useState(()=>{try{const saved=localStorage.getItem('db-connection-status');return saved?JSON.parse(saved):{};}catch(_unused){return{};}});// connectionStatus가 바뀔 때마다 localStorage에 저장\nuseEffect(()=>{localStorage.setItem('db-connection-status',JSON.stringify(connectionStatus));},[connectionStatus]);// 1분마다 자동 연결 상태 갱신\nuseEffect(()=>{let timer;const pollConnections=async()=>{if(databases&&databases.length>0){for(const db of databases){try{const response=await fetch('/api/databases/test',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(db),credentials:'include'});const result=await response.json();setConnectionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[db.name]:result.success?'success':'fail'}));}catch(_unused2){setConnectionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[db.name]:'fail'}));}}}timer=setTimeout(pollConnections,60000);// 1분마다 반복\n};pollConnections();return()=>clearTimeout(timer);},[databases]);const[showBrowseForm,setShowBrowseForm]=useState(false);const[browseFormData,setBrowseFormData]=useState({host:'',port:'',username:'',password:''});const[browsedDatabases,setBrowsedDatabases]=useState([]);const[browseError,setBrowseError]=useState('');// 폼 초기화\nconst resetForm=()=>{setFormData({name:'',host:'',port:'',database:'',username:'',password:''});setErrors({});setEditingDb(null);};// 폼 표시/숨김 토글\nconst toggleForm=()=>{if(showForm){resetForm();}setShowForm(!showForm);setShowBrowseForm(false);// Hide browse form when toggling add/edit form\n};// DB Browse 폼 표시/숨김 토글\nconst toggleBrowseForm=()=>{setShowBrowseForm(!showBrowseForm);setShowForm(false);// Hide add/edit form when toggling browse form\nsetBrowsedDatabases([]);// Clear browsed results\nsetBrowseError('');setBrowseFormData({host:formData.host||'',port:formData.port||'',username:formData.username||'',password:formData.password||''});};// 편집 모드 시작\nconst startEdit=db=>{setFormData({name:db.name,host:db.host,port:db.port||'',database:db.dbname||'',// Use dbname from backend\nusername:db.user||'',// Use user from backend\npassword:db.password});setEditingDb(db);setShowForm(true);setShowBrowseForm(false);// Hide browse form\nsetErrors({});};// 입력 필드 변경 처리\nconst handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// 에러 클리어\nif(errors[name]){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:''}));}};// DB Browse 폼 입력 필드 변경 처리\nconst handleBrowseInputChange=e=>{const{name,value}=e.target;setBrowseFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};// 조회된 DB 선택\nconst handleSelectBrowsedDb=dbName=>{setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{database:dbName}));setShowBrowseForm(false);setShowForm(true);};// 폼 유효성 검사\nconst validateForm=()=>{const newErrors={};if(!formData.name.trim()){newErrors.name='DB 이름을 입력하세요';}if(!formData.host.trim()){newErrors.host='호스트를 입력하세요';}if(!formData.database.trim()){newErrors.database='데이터베이스명을 입력하세요';}if(!formData.username.trim()){newErrors.username='사용자명을 입력하세요';}if(!formData.password.trim()){newErrors.password='비밀번호를 입력하세요';}// 포트 번호 검증\nif(formData.port&&(isNaN(formData.port)||formData.port<1||formData.port>65535)){newErrors.port='유효한 포트 번호를 입력하세요 (1-65535)';}setErrors(newErrors);return Object.keys(newErrors).length===0;};// DB 목록 조회 처리\nconst handleBrowseDatabases=async e=>{e.preventDefault();setBrowseError('');setBrowsedDatabases([]);if(!browseFormData.host.trim()||!browseFormData.username.trim()||!browseFormData.password.trim()){setBrowseError('호스트, 사용자명, 비밀번호는 필수입니다.');return;}try{const formDataToSend=new FormData();formDataToSend.append('host',browseFormData.host);formDataToSend.append('port',browseFormData.port||5432);formDataToSend.append('user',browseFormData.username);formDataToSend.append('password',browseFormData.password);const response=await fetch('/api/databases/browse',{method:'POST',body:formDataToSend});const result=await response.json();if(result.status==='success'){setBrowsedDatabases(result.databases);}else{setBrowseError(result.message||'데이터베이스 목록 조회에 실패했습니다.');}}catch(error){setBrowseError('데이터베이스 목록 조회 중 오류가 발생했습니다.');console.error('Browse DBs error:',error);}};// 폼 제출 처리\nconst handleSubmit=async e=>{e.preventDefault();if(!validateForm()){return;}try{const formDataToSend=new FormData();formDataToSend.append('name',formData.name);formDataToSend.append('host',formData.host);formDataToSend.append('port',formData.port);formDataToSend.append('user',formData.username);formDataToSend.append('password',formData.password);formDataToSend.append('dbname',formData.database);const response=await fetch('/api/databases',{method:'POST',body:formDataToSend});if(response.ok){const result=await response.json();if(result.status==='success'){onDatabaseChange();// 부모 컴포넌트에 변경 알림\nresetForm();setShowForm(false);}else{setErrors({general:'저장에 실패했습니다.'});}}else{throw new Error('요청 실패');}}catch(error){setErrors({general:'연결 오류가 발생했습니다.'});}};// DB 삭제 처리\nconst handleDelete=async dbName=>{if(!window.confirm(\"\\uC815\\uB9D0\\uB85C \\\"\".concat(dbName,\"\\\" \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0\\uC744 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){return;}try{const response=await fetch(\"/api/databases/\".concat(dbName),{method:'DELETE'});if(response.ok){const result=await response.json();if(result.status==='success'){onDatabaseDelete(dbName);}else{alert('삭제에 실패했습니다.');}}else{throw new Error('요청 실패');}}catch(error){alert('삭제 중 오류가 발생했습니다.');}};// 연결 테스트\nconst testConnection=async db=>{try{setConnectionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[db.name]:'loading'}));const response=await fetch('/api/databases/test',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(db),credentials:'include'});const result=await response.json();if(result.success){setConnectionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[db.name]:'success'}));alert('연결 테스트 성공!');}else{setConnectionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[db.name]:'fail'}));alert(\"\\uC5F0\\uACB0 \\uD14C\\uC2A4\\uD2B8 \\uC2E4\\uD328: \".concat(result.message));}}catch(error){setConnectionStatus(prev=>_objectSpread(_objectSpread({},prev),{},{[db.name]:'fail'}));alert('연결 테스트 중 오류가 발생했습니다.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"database-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"manager-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0 \\uAD00\\uB9AC\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleForm,className:\"btn \".concat(showForm?'btn-secondary':'btn-primary'),children:showForm?'취소':'새 DB 추가'}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleBrowseForm,className:\"btn \".concat(showBrowseForm?'btn-secondary':'btn-info'),children:showBrowseForm?'취소':'DB 목록 조회'})]}),showForm&&/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"db-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:editingDb?'DB 연결 수정':'새 DB 연결 추가'}),errors.general&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.general}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"DB \\uC774\\uB984 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleInputChange,placeholder:\"\\uC608: production_db\",className:errors.name?'error':''}),errors.name&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.name})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"host\",children:\"\\uD638\\uC2A4\\uD2B8 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"host\",name:\"host\",value:formData.host,onChange:handleInputChange,placeholder:\"\\uC608: localhost \\uB610\\uB294 192.168.1.100\",className:errors.host?'error':''}),errors.host&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.host})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"port\",children:\"\\uD3EC\\uD2B8\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"port\",name:\"port\",value:formData.port,onChange:handleInputChange,placeholder:\"\\uAE30\\uBCF8\\uAC12 \\uC0AC\\uC6A9\",className:errors.port?'error':''}),errors.port&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.port})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"database\",children:\"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uBA85 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"database\",name:\"database\",value:formData.database,onChange:handleInputChange,placeholder:\"\\uC608: myapp_production\",className:errors.database?'error':''}),errors.database&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.database})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"\\uC0AC\\uC6A9\\uC790\\uBA85 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",name:\"username\",value:formData.username,onChange:handleInputChange,placeholder:\"\\uC608: dbuser\",className:errors.username?'error':''}),errors.username&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",className:errors.password?'error':''}),errors.password&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.password})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:editingDb?'수정':'추가'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleForm,className:\"btn btn-secondary\",children:\"\\uCDE8\\uC18C\"})]})]})}),showBrowseForm&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleBrowseDatabases,className:\"db-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"DB \\uC778\\uC2A4\\uD134\\uC2A4\\uC5D0\\uC11C \\uBAA9\\uB85D \\uC870\\uD68C\"}),browseError&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:browseError}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"browse-host\",children:\"\\uD638\\uC2A4\\uD2B8 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"browse-host\",name:\"host\",value:browseFormData.host,onChange:handleBrowseInputChange,placeholder:\"\\uC608: localhost \\uB610\\uB294 RDS \\uC5D4\\uB4DC\\uD3EC\\uC778\\uD2B8\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"browse-port\",children:\"\\uD3EC\\uD2B8\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"browse-port\",name:\"port\",value:browseFormData.port,onChange:handleBrowseInputChange,placeholder:\"\\uAE30\\uBCF8\\uAC12 5432\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"browse-username\",children:\"\\uC0AC\\uC6A9\\uC790\\uBA85 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"browse-username\",name:\"username\",value:browseFormData.username,onChange:handleBrowseInputChange,placeholder:\"\\uC608: postgres\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"browse-password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"browse-password\",name:\"password\",value:browseFormData.password,onChange:handleBrowseInputChange,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-info\",children:\"DB \\uBAA9\\uB85D \\uC870\\uD68C\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleBrowseForm,className:\"btn btn-secondary\",children:\"\\uCDE8\\uC18C\"})]})]}),browsedDatabases.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"browsed-databases-list\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\uC870\\uD68C\\uB41C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 (\",browsedDatabases.length,\"\\uAC1C)\"]}),/*#__PURE__*/_jsx(\"ul\",{children:browsedDatabases.map((dbName,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[dbName,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSelectBrowsedDb(dbName),className:\"btn btn-sm btn-outline\",children:\"\\uC120\\uD0DD\"})]},index))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"database-list\",children:databases&&databases.length>0?/*#__PURE__*/_jsxs(\"table\",{className:\"db-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uD638\\uC2A4\\uD2B8\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uD3EC\\uD2B8\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DB\\uBA85\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC0AC\\uC6A9\\uC790\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Connection\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC561\\uC158\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:databases.map(db=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:db.name}),/*#__PURE__*/_jsx(\"td\",{children:db.host}),/*#__PURE__*/_jsx(\"td\",{children:db.port||'기본값'}),/*#__PURE__*/_jsx(\"td\",{children:db.dbname||'모든 DB'}),/*#__PURE__*/_jsx(\"td\",{children:db.user}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"conn-indicator \".concat(connectionStatus[db.name])}),connectionStatus[db.name]==='loading'&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:4},children:\"\\u23F3\"})]}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>testConnection(db),className:\"btn btn-sm btn-outline\",title:\"\\uC5F0\\uACB0 \\uD14C\\uC2A4\\uD2B8\",children:\"\\uD83D\\uDD17 \\uD14C\\uC2A4\\uD2B8\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>startEdit(db),className:\"btn btn-sm btn-outline\",title:\"\\uC218\\uC815\",children:\"\\u270F\\uFE0F \\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(db.name),className:\"btn btn-sm btn-danger\",title:\"\\uC0AD\\uC81C\",children:\"\\uD83D\\uDDD1\\uFE0F \\uC0AD\\uC81C\"})]})]},db.name))})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uB4F1\\uB85D\\uB41C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C8 DB \\uC5F0\\uACB0\\uC744 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694!\"})]})})]});}export default DatabaseManager;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","DatabaseManager","_ref","databases","onDatabaseChange","onDatabaseDelete","onDatabaseAdd","showForm","setShowForm","editingDb","setEditingDb","formData","setFormData","name","host","port","database","username","password","errors","setErrors","connectionStatus","setConnectionStatus","saved","localStorage","getItem","JSON","parse","_unused","setItem","stringify","timer","pollConnections","length","db","response","fetch","method","headers","body","credentials","result","json","prev","_objectSpread","success","_unused2","setTimeout","clearTimeout","showBrowseForm","setShowBrowseForm","browseFormData","setBrowseFormData","browsedDatabases","setBrowsedDatabases","browseError","setBrowseError","resetForm","toggleForm","toggleBrowseForm","startEdit","dbname","user","handleInputChange","e","value","target","handleBrowseInputChange","handleSelectBrowsedDb","dbName","validateForm","newErrors","trim","isNaN","Object","keys","handleBrowseDatabases","preventDefault","formDataToSend","FormData","append","status","message","error","console","handleSubmit","ok","general","Error","handleDelete","window","confirm","concat","alert","testConnection","className","children","onClick","onSubmit","htmlFor","type","id","onChange","placeholder","required","map","index","style","marginLeft","title"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/DatabaseManager.js"],"sourcesContent":["// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React, { useState, useEffect } from 'react';\n\nfunction DatabaseManager({ databases, onDatabaseChange, onDatabaseDelete, onDatabaseAdd }) {\n  const [showForm, setShowForm] = useState(false);\n  const [editingDb, setEditingDb] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState({});\n\n  // 연결 상태 관리 (localStorage 연동)\n  const [connectionStatus, setConnectionStatus] = useState(() => {\n    try {\n      const saved = localStorage.getItem('db-connection-status');\n      return saved ? JSON.parse(saved) : {};\n    } catch {\n      return {};\n    }\n  });\n\n  // connectionStatus가 바뀔 때마다 localStorage에 저장\n  useEffect(() => {\n    localStorage.setItem('db-connection-status', JSON.stringify(connectionStatus));\n  }, [connectionStatus]);\n\n  // 1분마다 자동 연결 상태 갱신\n  useEffect(() => {\n    let timer;\n    const pollConnections = async () => {\n      if (databases && databases.length > 0) {\n        for (const db of databases) {\n          try {\n            const response = await fetch('/api/databases/test', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(db),\n              credentials: 'include'\n            });\n            const result = await response.json();\n            setConnectionStatus(prev => ({\n              ...prev,\n              [db.name]: result.success ? 'success' : 'fail'\n            }));\n          } catch {\n            setConnectionStatus(prev => ({\n              ...prev,\n              [db.name]: 'fail'\n            }));\n          }\n        }\n      }\n      timer = setTimeout(pollConnections, 60000); // 1분마다 반복\n    };\n    pollConnections();\n    return () => clearTimeout(timer);\n  }, [databases]);\n\n  const [showBrowseForm, setShowBrowseForm] = useState(false);\n  const [browseFormData, setBrowseFormData] = useState({\n    host: '',\n    port: '',\n    username: '',\n    password: '',\n  });\n  const [browsedDatabases, setBrowsedDatabases] = useState([]);\n  const [browseError, setBrowseError] = useState('');\n\n  // 폼 초기화\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      host: '',\n      port: '',\n      database: '',\n      username: '',\n      password: '',\n    });\n    setErrors({});\n    setEditingDb(null);\n  };\n\n  // 폼 표시/숨김 토글\n  const toggleForm = () => {\n    if (showForm) {\n      resetForm();\n    }\n    setShowForm(!showForm);\n    setShowBrowseForm(false); // Hide browse form when toggling add/edit form\n  };\n\n  // DB Browse 폼 표시/숨김 토글\n  const toggleBrowseForm = () => {\n    setShowBrowseForm(!showBrowseForm);\n    setShowForm(false); // Hide add/edit form when toggling browse form\n    setBrowsedDatabases([]); // Clear browsed results\n    setBrowseError('');\n    setBrowseFormData({\n      host: formData.host || '',\n      port: formData.port || '',\n      username: formData.username || '',\n      password: formData.password || '',\n    });\n  };\n\n  // 편집 모드 시작\n  const startEdit = (db) => {\n    setFormData({\n      name: db.name,\n      host: db.host,\n      port: db.port || '',\n      database: db.dbname || '', // Use dbname from backend\n      username: db.user || '',   // Use user from backend\n      password: db.password,\n    });\n    setEditingDb(db);\n    setShowForm(true);\n    setShowBrowseForm(false); // Hide browse form\n    setErrors({});\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // 에러 클리어\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // DB Browse 폼 입력 필드 변경 처리\n  const handleBrowseInputChange = (e) => {\n    const { name, value } = e.target;\n    setBrowseFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // 조회된 DB 선택\n  const handleSelectBrowsedDb = (dbName) => {\n    setFormData(prev => ({\n      ...prev,\n      database: dbName\n    }));\n    setShowBrowseForm(false);\n    setShowForm(true);\n  };\n\n  // 폼 유효성 검사\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'DB 이름을 입력하세요';\n    }\n    \n    if (!formData.host.trim()) {\n      newErrors.host = '호스트를 입력하세요';\n    }\n    \n    if (!formData.database.trim()) {\n      newErrors.database = '데이터베이스명을 입력하세요';\n    }\n    \n    if (!formData.username.trim()) {\n      newErrors.username = '사용자명을 입력하세요';\n    }\n    \n    if (!formData.password.trim()) {\n      newErrors.password = '비밀번호를 입력하세요';\n    }\n\n    // 포트 번호 검증\n    if (formData.port && (isNaN(formData.port) || formData.port < 1 || formData.port > 65535)) {\n      newErrors.port = '유효한 포트 번호를 입력하세요 (1-65535)';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // DB 목록 조회 처리\n  const handleBrowseDatabases = async (e) => {\n    e.preventDefault();\n    setBrowseError('');\n    setBrowsedDatabases([]);\n\n    if (!browseFormData.host.trim() || !browseFormData.username.trim() || !browseFormData.password.trim()) {\n      setBrowseError('호스트, 사용자명, 비밀번호는 필수입니다.');\n      return;\n    }\n\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('host', browseFormData.host);\n      formDataToSend.append('port', browseFormData.port || 5432);\n      formDataToSend.append('user', browseFormData.username);\n      formDataToSend.append('password', browseFormData.password);\n\n      const response = await fetch('/api/databases/browse', {\n        method: 'POST',\n        body: formDataToSend,\n      });\n\n      const result = await response.json();\n      if (result.status === 'success') {\n        setBrowsedDatabases(result.databases);\n      } else {\n        setBrowseError(result.message || '데이터베이스 목록 조회에 실패했습니다.');\n      }\n    } catch (error) {\n      setBrowseError('데이터베이스 목록 조회 중 오류가 발생했습니다.');\n      console.error('Browse DBs error:', error);\n    }\n  };\n\n  // 폼 제출 처리\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('name', formData.name);\n      formDataToSend.append('host', formData.host);\n      formDataToSend.append('port', formData.port);\n      formDataToSend.append('user', formData.username);\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('dbname', formData.database);\n      \n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseChange(); // 부모 컴포넌트에 변경 알림\n          resetForm();\n          setShowForm(false);\n        } else {\n          setErrors({ general: '저장에 실패했습니다.' });\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      setErrors({ general: '연결 오류가 발생했습니다.' });\n    }\n  };\n\n  // DB 삭제 처리\n  const handleDelete = async (dbName) => {\n    if (!window.confirm(`정말로 \"${dbName}\" 데이터베이스 연결을 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/databases/${dbName}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseDelete(dbName);\n        } else {\n          alert('삭제에 실패했습니다.');\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      alert('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 연결 테스트\n  const testConnection = async (db) => {\n    try {\n      setConnectionStatus(prev => ({ ...prev, [db.name]: 'loading' }));\n      const response = await fetch('/api/databases/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(db),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (result.success) {\n        setConnectionStatus(prev => ({ ...prev, [db.name]: 'success' }));\n        alert('연결 테스트 성공!');\n      } else {\n        setConnectionStatus(prev => ({ ...prev, [db.name]: 'fail' }));\n        alert(`연결 테스트 실패: ${result.message}`);\n      }\n    } catch (error) {\n      setConnectionStatus(prev => ({ ...prev, [db.name]: 'fail' }));\n      alert('연결 테스트 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"database-manager\">\n      {/* 헤더 */}\n      <div className=\"manager-header\">\n        <h2>데이터베이스 연결 관리</h2>\n        <button \n          onClick={toggleForm} \n          className={`btn ${showForm ? 'btn-secondary' : 'btn-primary'}`}\n        >\n          {showForm ? '취소' : '새 DB 추가'}\n        </button>\n        <button \n          onClick={toggleBrowseForm} \n          className={`btn ${showBrowseForm ? 'btn-secondary' : 'btn-info'}`}\n        >\n          {showBrowseForm ? '취소' : 'DB 목록 조회'}\n        </button>\n      </div>\n\n      {/* DB 추가/편집 폼 */}\n      {showForm && (\n        <div className=\"form-container\">\n          <form onSubmit={handleSubmit} className=\"db-form\">\n            <h3>{editingDb ? 'DB 연결 수정' : '새 DB 연결 추가'}</h3>\n            \n            {errors.general && (\n              <div className=\"error-message\">{errors.general}</div>\n            )}\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">DB 이름 *</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"예: production_db\"\n                  className={errors.name ? 'error' : ''}\n                />\n                {errors.name && <span className=\"error-text\">{errors.name}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"host\">호스트 *</label>\n                <input\n                  type=\"text\"\n                  id=\"host\"\n                  name=\"host\"\n                  value={formData.host}\n                  onChange={handleInputChange}\n                  placeholder=\"예: localhost 또는 192.168.1.100\"\n                  className={errors.host ? 'error' : ''}\n                />\n                {errors.host && <span className=\"error-text\">{errors.host}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"port\">포트</label>\n                <input\n                  type=\"number\"\n                  id=\"port\"\n                  name=\"port\"\n                  value={formData.port}\n                  onChange={handleInputChange}\n                  placeholder=\"기본값 사용\"\n                  className={errors.port ? 'error' : ''}\n                />\n                {errors.port && <span className=\"error-text\">{errors.port}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"database\">데이터베이스명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"database\"\n                  name=\"database\"\n                  value={formData.database}\n                  onChange={handleInputChange}\n                  placeholder=\"예: myapp_production\"\n                  className={errors.database ? 'error' : ''}\n                />\n                {errors.database && <span className=\"error-text\">{errors.database}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">사용자명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  placeholder=\"예: dbuser\"\n                  className={errors.username ? 'error' : ''}\n                />\n                {errors.username && <span className=\"error-text\">{errors.username}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"password\">비밀번호 *</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  placeholder=\"비밀번호 입력\"\n                  className={errors.password ? 'error' : ''}\n                />\n                {errors.password && <span className=\"error-text\">{errors.password}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {editingDb ? '수정' : '추가'}\n              </button>\n              <button type=\"button\" onClick={toggleForm} className=\"btn btn-secondary\">\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* DB 목록 조회 폼 */}\n      {showBrowseForm && (\n        <div className=\"form-container\">\n          <form onSubmit={handleBrowseDatabases} className=\"db-form\">\n            <h3>DB 인스턴스에서 목록 조회</h3>\n            {browseError && (\n              <div className=\"error-message\">{browseError}</div>\n            )}\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"browse-host\">호스트 *</label>\n                <input\n                  type=\"text\"\n                  id=\"browse-host\"\n                  name=\"host\"\n                  value={browseFormData.host}\n                  onChange={handleBrowseInputChange}\n                  placeholder=\"예: localhost 또는 RDS 엔드포인트\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"browse-port\">포트</label>\n                <input\n                  type=\"number\"\n                  id=\"browse-port\"\n                  name=\"port\"\n                  value={browseFormData.port}\n                  onChange={handleBrowseInputChange}\n                  placeholder=\"기본값 5432\"\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"browse-username\">사용자명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"browse-username\"\n                  name=\"username\"\n                  value={browseFormData.username}\n                  onChange={handleBrowseInputChange}\n                  placeholder=\"예: postgres\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"browse-password\">비밀번호 *</label>\n                <input\n                  type=\"password\"\n                  id=\"browse-password\"\n                  name=\"password\"\n                  value={browseFormData.password}\n                  onChange={handleBrowseInputChange}\n                  placeholder=\"비밀번호 입력\"\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn btn-info\">\n                DB 목록 조회\n              </button>\n              <button type=\"button\" onClick={toggleBrowseForm} className=\"btn btn-secondary\">\n                취소\n              </button>\n            </div>\n          </form>\n\n          {browsedDatabases.length > 0 && (\n            <div className=\"browsed-databases-list\">\n              <h4>조회된 데이터베이스 ({browsedDatabases.length}개)</h4>\n              <ul>\n                {browsedDatabases.map((dbName, index) => (\n                  <li key={index}>\n                    {dbName}\n                    <button \n                      onClick={() => handleSelectBrowsedDb(dbName)}\n                      className=\"btn btn-sm btn-outline\"\n                    >\n                      선택\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* DB 목록 */}\n      <div className=\"database-list\">\n        {databases && databases.length > 0 ? (\n          <table className=\"db-table\">\n            <thead>\n              <tr>\n                <th>이름</th>\n                <th>호스트</th>\n                <th>포트</th>\n                <th>DB명</th>\n                <th>사용자</th>\n                <th>Connection</th>\n                <th>액션</th>\n              </tr>\n            </thead>\n            <tbody>\n              {databases.map(db => (\n                <tr key={db.name}>\n                  <td>{db.name}</td>\n                  <td>{db.host}</td>\n                  <td>{db.port || '기본값'}</td>\n                  <td>{db.dbname || '모든 DB'}</td>\n                  <td>{db.user}</td>\n                  <td>\n                    <span className={`conn-indicator ${connectionStatus[db.name]}`}></span>\n                    {connectionStatus[db.name] === 'loading' && <span style={{marginLeft:4}}>⏳</span>}\n                  </td>\n                  <td>\n                    <button \n                      onClick={() => testConnection(db)}\n                      className=\"btn btn-sm btn-outline\"\n                      title=\"연결 테스트\"\n                    >\n                      🔗 테스트\n                    </button>\n                    <button \n                      onClick={() => startEdit(db)}\n                      className=\"btn btn-sm btn-outline\"\n                      title=\"수정\"\n                    >\n                      ✏️ 수정\n                    </button>\n                    <button \n                      onClick={() => handleDelete(db.name)}\n                      className=\"btn btn-sm btn-danger\"\n                      title=\"삭제\"\n                    >\n                      🗑️ 삭제\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div className=\"empty-state\">\n            <p>등록된 데이터베이스 연결이 없습니다.</p>\n            <p>새 DB 연결을 추가해보세요!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DatabaseManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}