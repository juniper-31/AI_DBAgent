{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsIntegrationComponent.js\",\n  _s = $RefreshSig$();\n// AwsIntegrationComponent.js\n// AWS 인증, RDS/CloudWatch 연동, 상태 표시\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AwsIntegrationComponent({\n  selectedDb,\n  databases\n}) {\n  _s();\n  const [credentialsList, setCredentialsList] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [authType, setAuthType] = useState('accessKey');\n  const [accessKey, setAccessKey] = useState('');\n  const [secretKey, setSecretKey] = useState('');\n  const [sessionToken, setSessionToken] = useState('');\n  const [ssoStartUrl, setSsoStartUrl] = useState('');\n  const [ssoRegion, setSsoRegion] = useState('ap-northeast-2');\n  const [ssoAccountId, setSsoAccountId] = useState('');\n  const [ssoRoleName, setSsoRoleName] = useState('');\n  const [awsRegion, setAwsRegion] = useState('ap-northeast-2');\n  const [cloudwatchNamespace, setCloudwatchNamespace] = useState('AWS/RDS');\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [rdsInstances, setRdsInstances] = useState([]);\n  const [cloudwatchMetrics, setCloudwatchMetrics] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const awsRegions = [{\n    value: 'us-east-1',\n    label: 'US East (N. Virginia)'\n  }, {\n    value: 'us-east-2',\n    label: 'US East (Ohio)'\n  }, {\n    value: 'us-west-1',\n    label: 'US West (N. California)'\n  }, {\n    value: 'us-west-2',\n    label: 'US West (Oregon)'\n  }, {\n    value: 'ap-northeast-1',\n    label: 'Asia Pacific (Tokyo)'\n  }, {\n    value: 'ap-northeast-2',\n    label: 'Asia Pacific (Seoul)'\n  }, {\n    value: 'ap-southeast-1',\n    label: 'Asia Pacific (Singapore)'\n  }, {\n    value: 'ap-southeast-2',\n    label: 'Asia Pacific (Sydney)'\n  }, {\n    value: 'eu-west-1',\n    label: 'Europe (Ireland)'\n  }, {\n    value: 'eu-central-1',\n    label: 'Europe (Frankfurt)'\n  }];\n\n  // 인증 방식 옵션\n  const authTypes = [{\n    value: 'accessKey',\n    label: 'Access Key'\n  }, {\n    value: 'iamRole',\n    label: 'IAM Role (EC2/ECS/EKS)'\n  }, {\n    value: 'sso',\n    label: 'AWS SSO'\n  }];\n\n  // 리스트 불러오기\n  const loadCredentials = async () => {\n    const res = await fetch('/aws/credentials');\n    if (res.ok) {\n      const list = await res.json();\n      setCredentialsList(list);\n      const active = list.find(c => c.is_active);\n      if (active) {\n        setSelectedId(active.id);\n        setAccessKey(active.access_key);\n        setSecretKey('********');\n        setSessionToken('');\n        setAwsRegion(active.region || 'ap-northeast-2');\n        setConnectionStatus('connected');\n        setIsConnected(true);\n      } else {\n        setSelectedId(null);\n        setConnectionStatus('disconnected');\n        setIsConnected(false);\n      }\n    }\n  };\n  useEffect(() => {\n    loadCredentials();\n  }, []);\n\n  // RDS 인스턴스 목록 가져오기\n  const fetchRdsInstances = useCallback(async () => {\n    if (!isConnected) return;\n    setLoading(true);\n    try {\n      const response = await fetch('/aws/rds-instances');\n      if (response.ok) {\n        const data = await response.json();\n        setRdsInstances(data.instances || []);\n      } else {\n        console.error('RDS 인스턴스 목록 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('RDS 인스턴스 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [isConnected]);\n\n  // 연결 성공 시 RDS 인스턴스 자동 조회\n  useEffect(() => {\n    if (isConnected) {\n      fetchRdsInstances();\n    }\n  }, [isConnected, fetchRdsInstances]);\n\n  // 등록\n  const handleSave = async () => {\n    setError('');\n    setSuccess('');\n    setLoading(true);\n    const payload = {\n      name: accessKey.slice(0, 8) + '...',\n      access_key: accessKey,\n      secret_key: secretKey,\n      session_token: sessionToken,\n      region: awsRegion,\n      is_active: true\n    };\n    const res = await fetch('/aws/credentials', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    if (res.ok) {\n      setSuccess('설정이 저장되었습니다!');\n      await loadCredentials();\n    } else {\n      setError('저장 실패');\n    }\n    setLoading(false);\n  };\n\n  // 연결 테스트\n  const handleTest = async () => {\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    const cred = credentialsList.find(c => c.id === selectedId);\n    if (!cred) {\n      setError('선택된 인증정보가 없습니다.');\n      setLoading(false);\n      return;\n    }\n    const payload = {\n      accessKey: cred.access_key,\n      secretKey: secretKey === '********' ? '' : secretKey,\n      sessionToken: sessionToken,\n      awsRegion: cred.region\n    };\n    const res = await fetch('/aws/auth/test', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    const data = await res.json();\n    if (data.success) {\n      setSuccess('연결 성공!');\n      setConnectionStatus('connected');\n      setIsConnected(true);\n    } else {\n      setError('연결 실패: ' + (data.message || '오류'));\n      setConnectionStatus('disconnected');\n      setIsConnected(false);\n    }\n    setLoading(false);\n  };\n\n  // CloudWatch 메트릭 가져오기\n  const fetchCloudWatchMetrics = async () => {\n    if (!isConnected || !awsRegion) return;\n    setLoading(true);\n    try {\n      const params = new URLSearchParams({\n        region: awsRegion,\n        namespace: cloudwatchNamespace\n      });\n      const response = await fetch(`/aws/cloudwatch/metrics?${params}`);\n      if (response.ok) {\n        const data = await response.json();\n        setCloudwatchMetrics(data.metrics || {});\n      } else {\n        console.error('CloudWatch 메트릭 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('CloudWatch 메트릭 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = (key, value) => {\n    if (key === 'accessKey') setAccessKey(value);else if (key === 'secretKey') setSecretKey(value);else if (key === 'sessionToken') setSessionToken(value);else if (key === 'ssoStartUrl') setSsoStartUrl(value);else if (key === 'ssoRegion') setSsoRegion(value);else if (key === 'ssoAccountId') setSsoAccountId(value);else if (key === 'ssoRoleName') setSsoRoleName(value);else if (key === 'awsRegion') setAwsRegion(value);else if (key === 'cloudwatchNamespace') setCloudwatchNamespace(value);\n  };\n\n  // RDS 인스턴스 선택\n  const handleRdsInstanceSelect = instanceId => {\n    handleInputChange('rds_instance_id', instanceId);\n  };\n\n  // 연결 상태에 따른 색상\n  const getStatusColor = status => {\n    switch (status) {\n      case 'connected':\n        return '#28a745';\n      case 'connecting':\n        return '#ffc107';\n      case 'error':\n        return '#dc3545';\n      default:\n        return '#6c757d';\n    }\n  };\n\n  // 메트릭 카드 렌더링\n  const renderMetricCard = (title, value, unit = '', status = null) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status-badge\",\n        style: {\n          backgroundColor: getStatusColor(status)\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-value\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), unit && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aws-integration-component\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AWS \\uD1B5\\uD569\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connection-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-indicator\",\n            style: {\n              backgroundColor: getStatusColor(connectionStatus)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: [connectionStatus === 'connected' && '연결됨', connectionStatus === 'connecting' && '연결 중...', connectionStatus === 'error' && '연결 오류', connectionStatus === 'disconnected' && '연결 안됨']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aws-config-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AWS \\uC778\\uC99D \\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-config-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD604\\uC7AC \\uC5F0\\uACB0 \\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Access Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [accessKey.substring(0, 4), \"...\", accessKey.slice(-4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"AWS Region:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: awsRegion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC0C8\\uB85C\\uC6B4 \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD558\\uACE0 \\uC800\\uC7A5\\uD558\\uBA74 \\uD604\\uC7AC \\uC5F0\\uACB0\\uC774 \\uBCC0\\uACBD\\uB429\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [\"\\u2705 \", success]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"auth-type\",\n          children: \"\\uC778\\uC99D \\uBC29\\uC2DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"auth-type\",\n          value: authType,\n          onChange: e => setAuthType(e.target.value),\n          className: \"form-control wide-input\",\n          children: authTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type.value,\n            children: type.label\n          }, type.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), authType === 'accessKey' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"access-key\",\n            children: \"Access Key *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"access-key\",\n            value: accessKey,\n            onChange: e => setAccessKey(e.target.value),\n            placeholder: \"AKIA...\",\n            className: \"form-control wide-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"secret-key\",\n            children: \"Secret Key *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"secret-key\",\n            value: secretKey,\n            onChange: e => setSecretKey(e.target.value),\n            placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n            className: \"form-control wide-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"session-token\",\n            children: \"Session Token (\\uC635\\uC158)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"session-token\",\n            value: sessionToken,\n            onChange: e => setSessionToken(e.target.value),\n            placeholder: \"\\uC138\\uC158 \\uD1A0\\uD070 (\\uD544\\uC694\\uC2DC)\",\n            className: \"form-control wide-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), authType === 'iamRole' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"IAM Role \\uAE30\\uBC18 \\uC778\\uC99D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#888',\n            fontSize: '14px'\n          },\n          children: [\"EC2/ECS/EKS \\uC778\\uC2A4\\uD134\\uC2A4\\uC5D0 \\uD560\\uB2F9\\uB41C IAM Role\\uC744 \\uC790\\uB3D9\\uC73C\\uB85C \\uC0AC\\uC6A9\\uD569\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 58\n          }, this), \"\\uBCC4\\uB3C4\\uC758 \\uD0A4 \\uC785\\uB825 \\uC5C6\\uC774 \\uC9C4\\uD589\\uD558\\uC138\\uC694.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), authType === 'sso' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"config-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sso-start-url\",\n              children: \"SSO Start URL *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"sso-start-url\",\n              value: ssoStartUrl,\n              onChange: e => handleInputChange('sso-start-url', e.target.value),\n              placeholder: \"https://your-sso-portal.awsapps.com/start\",\n              className: \"form-control wide-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sso-region\",\n              children: \"SSO Region *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"sso-region\",\n              value: ssoRegion,\n              onChange: e => handleInputChange('sso-region', e.target.value),\n              placeholder: \"ap-northeast-2\",\n              className: \"form-control wide-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sso-account-id\",\n              children: \"SSO Account ID *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"sso-account-id\",\n              value: ssoAccountId,\n              onChange: e => handleInputChange('sso-account-id', e.target.value),\n              placeholder: \"123456789012\",\n              className: \"form-control wide-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sso-role-name\",\n              children: \"SSO Role Name *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"sso-role-name\",\n              value: ssoRoleName,\n              onChange: e => handleInputChange('sso-role-name', e.target.value),\n              placeholder: \"AWSAdministratorAccess\",\n              className: \"form-control wide-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"aws-region\",\n            children: \"AWS \\uB9AC\\uC804\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"aws-region\",\n            value: awsRegion,\n            onChange: e => setAwsRegion(e.target.value),\n            className: \"form-control wide-input\",\n            children: awsRegions.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: region.value,\n              children: region.label\n            }, region.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTest,\n          disabled: loading || !selectedId,\n          className: \"btn btn-outline\",\n          children: loading ? '테스트 중...' : '🔗 연결 테스트'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          disabled: loading,\n          className: \"btn btn-primary\",\n          children: loading ? '저장 중...' : '💾 설정 저장'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"security-notice\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDD12 \\uBCF4\\uC548 \\uC8FC\\uC758\\uC0AC\\uD56D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"AWS \\uC790\\uACA9 \\uC99D\\uBA85\\uC740 \\uC548\\uC804\\uD558\\uAC8C \\uC554\\uD638\\uD654\\uB418\\uC5B4 \\uC800\\uC7A5\\uB429\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\uCD5C\\uC18C \\uAD8C\\uD55C \\uC6D0\\uCE59\\uC5D0 \\uB530\\uB77C \\uD544\\uC694\\uD55C \\uAD8C\\uD55C\\uB9CC \\uBD80\\uC5EC\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\uC815\\uAE30\\uC801\\uC73C\\uB85C \\uC561\\uC138\\uC2A4 \\uD0A4\\uB97C \\uAD50\\uCCB4\\uD558\\uB294 \\uAC83\\uC744 \\uAD8C\\uC7A5\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\uD504\\uB85C\\uB355\\uC158 \\uD658\\uACBD\\uC5D0\\uC11C\\uB294 IAM \\uC5ED\\uD560 \\uC0AC\\uC6A9\\uC744 \\uACE0\\uB824\\uD558\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n\n// 메트릭 단위 반환\n_s(AwsIntegrationComponent, \"QoXXPzRVQSFRZB2+Eg8kSnL/0Y0=\");\n_c = AwsIntegrationComponent;\nconst getMetricUnit = metricName => {\n  const units = {\n    cpu_utilization: '%',\n    freeable_memory: 'MB',\n    database_connections: '개',\n    read_iops: 'IOPS',\n    write_iops: 'IOPS',\n    network_receive_throughput: 'MB/s',\n    network_transmit_throughput: 'MB/s'\n  };\n  return units[metricName] || '';\n};\n\n// 메트릭 상태 색상 반환\nconst getMetricStatusColor = (metricName, value) => {\n  if (metricName === 'cpu_utilization' && value > 80) return '#ffc107';\n  if (metricName === 'freeable_memory' && value < 1000) return '#ffc107';\n  if (metricName === 'database_connections' && value > 100) return '#ffc107';\n  return '#28a745';\n};\n\n// 메트릭 상태 반환\nconst getMetricStatus = (metricName, value) => {\n  if (metricName === 'cpu_utilization' && value > 80) return 'warning';\n  if (metricName === 'freeable_memory' && value < 1000) return 'warning';\n  if (metricName === 'database_connections' && value > 100) return 'warning';\n  return 'ok';\n};\nexport default AwsIntegrationComponent;\nvar _c;\n$RefreshReg$(_c, \"AwsIntegrationComponent\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","AwsIntegrationComponent","selectedDb","databases","_s","credentialsList","setCredentialsList","selectedId","setSelectedId","authType","setAuthType","accessKey","setAccessKey","secretKey","setSecretKey","sessionToken","setSessionToken","ssoStartUrl","setSsoStartUrl","ssoRegion","setSsoRegion","ssoAccountId","setSsoAccountId","ssoRoleName","setSsoRoleName","awsRegion","setAwsRegion","cloudwatchNamespace","setCloudwatchNamespace","isConnected","setIsConnected","connectionStatus","setConnectionStatus","rdsInstances","setRdsInstances","cloudwatchMetrics","setCloudwatchMetrics","loading","setLoading","error","setError","success","setSuccess","awsRegions","value","label","authTypes","loadCredentials","res","fetch","ok","list","json","active","find","c","is_active","id","access_key","region","fetchRdsInstances","response","data","instances","console","handleSave","payload","name","slice","secret_key","session_token","method","headers","body","JSON","stringify","handleTest","cred","message","fetchCloudWatchMetrics","params","URLSearchParams","namespace","metrics","handleInputChange","key","handleRdsInstanceSelect","instanceId","getStatusColor","status","renderMetricCard","title","unit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","substring","htmlFor","onChange","e","target","map","type","placeholder","color","fontSize","onClick","disabled","_c","getMetricUnit","metricName","units","cpu_utilization","freeable_memory","database_connections","read_iops","write_iops","network_receive_throughput","network_transmit_throughput","getMetricStatusColor","getMetricStatus","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsIntegrationComponent.js"],"sourcesContent":["// AwsIntegrationComponent.js\n// AWS 인증, RDS/CloudWatch 연동, 상태 표시\nimport React, { useState, useEffect, useCallback } from 'react';\n\nfunction AwsIntegrationComponent({ selectedDb, databases }) {\n  const [credentialsList, setCredentialsList] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [authType, setAuthType] = useState('accessKey');\n  const [accessKey, setAccessKey] = useState('');\n  const [secretKey, setSecretKey] = useState('');\n  const [sessionToken, setSessionToken] = useState('');\n  const [ssoStartUrl, setSsoStartUrl] = useState('');\n  const [ssoRegion, setSsoRegion] = useState('ap-northeast-2');\n  const [ssoAccountId, setSsoAccountId] = useState('');\n  const [ssoRoleName, setSsoRoleName] = useState('');\n  const [awsRegion, setAwsRegion] = useState('ap-northeast-2');\n  const [cloudwatchNamespace, setCloudwatchNamespace] = useState('AWS/RDS');\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [rdsInstances, setRdsInstances] = useState([]);\n  const [cloudwatchMetrics, setCloudwatchMetrics] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const awsRegions = [\n    { value: 'us-east-1', label: 'US East (N. Virginia)' },\n    { value: 'us-east-2', label: 'US East (Ohio)' },\n    { value: 'us-west-1', label: 'US West (N. California)' },\n    { value: 'us-west-2', label: 'US West (Oregon)' },\n    { value: 'ap-northeast-1', label: 'Asia Pacific (Tokyo)' },\n    { value: 'ap-northeast-2', label: 'Asia Pacific (Seoul)' },\n    { value: 'ap-southeast-1', label: 'Asia Pacific (Singapore)' },\n    { value: 'ap-southeast-2', label: 'Asia Pacific (Sydney)' },\n    { value: 'eu-west-1', label: 'Europe (Ireland)' },\n    { value: 'eu-central-1', label: 'Europe (Frankfurt)' }\n  ];\n\n  // 인증 방식 옵션\n  const authTypes = [\n    { value: 'accessKey', label: 'Access Key' },\n    { value: 'iamRole', label: 'IAM Role (EC2/ECS/EKS)' },\n    { value: 'sso', label: 'AWS SSO' }\n  ];\n\n  // 리스트 불러오기\n  const loadCredentials = async () => {\n    const res = await fetch('/aws/credentials');\n    if (res.ok) {\n      const list = await res.json();\n      setCredentialsList(list);\n      const active = list.find(c => c.is_active);\n      if (active) {\n        setSelectedId(active.id);\n        setAccessKey(active.access_key);\n        setSecretKey('********');\n        setSessionToken('');\n        setAwsRegion(active.region || 'ap-northeast-2');\n        setConnectionStatus('connected');\n        setIsConnected(true);\n      } else {\n        setSelectedId(null);\n        setConnectionStatus('disconnected');\n        setIsConnected(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadCredentials();\n  }, []);\n\n  // RDS 인스턴스 목록 가져오기\n  const fetchRdsInstances = useCallback(async () => {\n    if (!isConnected) return;\n\n    setLoading(true);\n    try {\n      const response = await fetch('/aws/rds-instances');\n      if (response.ok) {\n        const data = await response.json();\n        setRdsInstances(data.instances || []);\n      } else {\n        console.error('RDS 인스턴스 목록 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('RDS 인스턴스 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [isConnected]);\n\n  // 연결 성공 시 RDS 인스턴스 자동 조회\n  useEffect(() => {\n    if (isConnected) {\n      fetchRdsInstances();\n    }\n  }, [isConnected, fetchRdsInstances]);\n\n  // 등록\n  const handleSave = async () => {\n    setError(''); setSuccess(''); setLoading(true);\n    const payload = {\n      name: accessKey.slice(0, 8) + '...',\n      access_key: accessKey,\n      secret_key: secretKey,\n      session_token: sessionToken,\n      region: awsRegion,\n      is_active: true\n    };\n    const res = await fetch('/aws/credentials', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n    if (res.ok) {\n      setSuccess('설정이 저장되었습니다!');\n      await loadCredentials();\n    } else {\n      setError('저장 실패');\n    }\n    setLoading(false);\n  };\n\n  // 연결 테스트\n  const handleTest = async () => {\n    setLoading(true); setError(''); setSuccess('');\n    const cred = credentialsList.find(c => c.id === selectedId);\n    if (!cred) { setError('선택된 인증정보가 없습니다.'); setLoading(false); return; }\n    const payload = {\n      accessKey: cred.access_key,\n      secretKey: secretKey === '********' ? '' : secretKey,\n      sessionToken: sessionToken,\n      awsRegion: cred.region\n    };\n    const res = await fetch('/aws/auth/test', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n    const data = await res.json();\n    if (data.success) {\n      setSuccess('연결 성공!');\n      setConnectionStatus('connected');\n      setIsConnected(true);\n    } else {\n      setError('연결 실패: ' + (data.message || '오류'));\n      setConnectionStatus('disconnected');\n      setIsConnected(false);\n    }\n    setLoading(false);\n  };\n\n  // CloudWatch 메트릭 가져오기\n  const fetchCloudWatchMetrics = async () => {\n    if (!isConnected || !awsRegion) return;\n\n    setLoading(true);\n    try {\n      const params = new URLSearchParams({\n        region: awsRegion,\n        namespace: cloudwatchNamespace\n      });\n\n      const response = await fetch(`/aws/cloudwatch/metrics?${params}`);\n      if (response.ok) {\n        const data = await response.json();\n        setCloudwatchMetrics(data.metrics || {});\n      } else {\n        console.error('CloudWatch 메트릭 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('CloudWatch 메트릭 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = (key, value) => {\n    if (key === 'accessKey') setAccessKey(value);\n    else if (key === 'secretKey') setSecretKey(value);\n    else if (key === 'sessionToken') setSessionToken(value);\n    else if (key === 'ssoStartUrl') setSsoStartUrl(value);\n    else if (key === 'ssoRegion') setSsoRegion(value);\n    else if (key === 'ssoAccountId') setSsoAccountId(value);\n    else if (key === 'ssoRoleName') setSsoRoleName(value);\n    else if (key === 'awsRegion') setAwsRegion(value);\n    else if (key === 'cloudwatchNamespace') setCloudwatchNamespace(value);\n  };\n\n  // RDS 인스턴스 선택\n  const handleRdsInstanceSelect = (instanceId) => {\n    handleInputChange('rds_instance_id', instanceId);\n  };\n\n  // 연결 상태에 따른 색상\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'connected':\n        return '#28a745';\n      case 'connecting':\n        return '#ffc107';\n      case 'error':\n        return '#dc3545';\n      default:\n        return '#6c757d';\n    }\n  };\n\n  // 메트릭 카드 렌더링\n  const renderMetricCard = (title, value, unit = '', status = null) => (\n    <div className=\"metric-card\">\n      <div className=\"metric-header\">\n        <h4>{title}</h4>\n        {status && (\n          <span \n            className=\"status-badge\"\n            style={{ backgroundColor: getStatusColor(status) }}\n          >\n            {status}\n          </span>\n        )}\n      </div>\n      <div className=\"metric-value\">\n        <span className=\"value\">{value}</span>\n        {unit && <span className=\"unit\">{unit}</span>}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"aws-integration-component\">\n      {/* 헤더 */}\n      <div className=\"component-header\">\n        <div className=\"header-left\">\n          <h2>AWS 통합</h2>\n          <div className=\"connection-status\">\n            <span \n              className=\"status-indicator\"\n              style={{ backgroundColor: getStatusColor(connectionStatus) }}\n            ></span>\n            <span className=\"status-text\">\n              {connectionStatus === 'connected' && '연결됨'}\n              {connectionStatus === 'connecting' && '연결 중...'}\n              {connectionStatus === 'error' && '연결 오류'}\n              {connectionStatus === 'disconnected' && '연결 안됨'}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* AWS 설정 */}\n      <div className=\"aws-config-section\">\n        <h3>AWS 인증 설정</h3>\n\n        {/* -- 추가된 UI -- */}\n        {isConnected && (\n          <div className=\"current-config-info\">\n            <h4>현재 연결 정보</h4>\n            <ul>\n              <li>\n                <strong>Access Key:</strong> \n                <span>{accessKey.substring(0, 4)}...{accessKey.slice(-4)}</span>\n              </li>\n              <li>\n                <strong>AWS Region:</strong> \n                <span>{awsRegion}</span>\n              </li>\n            </ul>\n            <p>새로운 정보를 입력하고 저장하면 현재 연결이 변경됩니다.</p>\n          </div>\n        )}\n        {/* -- 여기까지 -- */}\n\n        {error && (\n          <div className=\"error-message\">{error}</div>\n        )}\n\n        {success && (\n          <div className=\"success-message\">✅ {success}</div>\n        )}\n        <div className=\"form-group\">\n          <label htmlFor=\"auth-type\">인증 방식</label>\n          <select\n            id=\"auth-type\"\n            value={authType}\n            onChange={(e) => setAuthType(e.target.value)}\n            className=\"form-control wide-input\"\n          >\n            {authTypes.map(type => (\n              <option key={type.value} value={type.value}>{type.label}</option>\n            ))}\n          </select>\n        </div>\n\n        {authType === 'accessKey' && (\n          <>\n            <div className=\"form-group\">\n              <label htmlFor=\"access-key\">Access Key *</label>\n              <input\n                type=\"text\"\n                id=\"access-key\"\n                value={accessKey}\n                onChange={e => setAccessKey(e.target.value)}\n                placeholder=\"AKIA...\"\n                className=\"form-control wide-input\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"secret-key\">Secret Key *</label>\n              <input\n                type=\"password\"\n                id=\"secret-key\"\n                value={secretKey}\n                onChange={e => setSecretKey(e.target.value)}\n                placeholder=\"••••••••••••••••••••••••••••••••\"\n                className=\"form-control wide-input\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"session-token\">Session Token (옵션)</label>\n              <input\n                type=\"text\"\n                id=\"session-token\"\n                value={sessionToken}\n                onChange={e => setSessionToken(e.target.value)}\n                placeholder=\"세션 토큰 (필요시)\"\n                className=\"form-control wide-input\"\n              />\n            </div>\n          </>\n        )}\n\n        {authType === 'iamRole' && (\n          <div className=\"form-group\">\n            <label>IAM Role 기반 인증</label>\n            <div style={{ color: '#888', fontSize: '14px' }}>\n              EC2/ECS/EKS 인스턴스에 할당된 IAM Role을 자동으로 사용합니다.<br />\n              별도의 키 입력 없이 진행하세요.\n            </div>\n          </div>\n        )}\n\n        {authType === 'sso' && (\n          <div className=\"config-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"sso-start-url\">SSO Start URL *</label>\n                <input\n                  type=\"text\"\n                  id=\"sso-start-url\"\n                  value={ssoStartUrl}\n                  onChange={(e) => handleInputChange('sso-start-url', e.target.value)}\n                  placeholder=\"https://your-sso-portal.awsapps.com/start\"\n                  className=\"form-control wide-input\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"sso-region\">SSO Region *</label>\n                <input\n                  type=\"text\"\n                  id=\"sso-region\"\n                  value={ssoRegion}\n                  onChange={(e) => handleInputChange('sso-region', e.target.value)}\n                  placeholder=\"ap-northeast-2\"\n                  className=\"form-control wide-input\"\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"sso-account-id\">SSO Account ID *</label>\n                <input\n                  type=\"text\"\n                  id=\"sso-account-id\"\n                  value={ssoAccountId}\n                  onChange={(e) => handleInputChange('sso-account-id', e.target.value)}\n                  placeholder=\"123456789012\"\n                  className=\"form-control wide-input\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"sso-role-name\">SSO Role Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"sso-role-name\"\n                  value={ssoRoleName}\n                  onChange={(e) => handleInputChange('sso-role-name', e.target.value)}\n                  placeholder=\"AWSAdministratorAccess\"\n                  className=\"form-control wide-input\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"aws-region\">AWS 리전</label>\n            <select\n              id=\"aws-region\"\n              value={awsRegion}\n              onChange={(e) => setAwsRegion(e.target.value)}\n              className=\"form-control wide-input\"\n            >\n              {awsRegions.map(region => (\n                <option key={region.value} value={region.value}>\n                  {region.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"form-actions\">\n          <button \n            onClick={handleTest}\n            disabled={loading || !selectedId}\n            className=\"btn btn-outline\"\n          >\n            {loading ? '테스트 중...' : '🔗 연결 테스트'}\n          </button>\n          \n          <button \n            onClick={handleSave}\n            disabled={loading}\n            className=\"btn btn-primary\"\n          >\n            {loading ? '저장 중...' : '💾 설정 저장'}\n          </button>\n        </div>\n      </div>\n\n      {/* RDS 인스턴스 관리 */}\n      {/* 이 부분 전체 삭제 */}\n      {/* CloudWatch 메트릭 */}\n      {/* 이 부분도 AWS 통합에서는 삭제, 별도 메뉴에서 조회 */}\n\n      {/* 보안 주의사항 */}\n      <div className=\"security-notice\">\n        <h4>🔒 보안 주의사항</h4>\n        <ul>\n          <li>AWS 자격 증명은 안전하게 암호화되어 저장됩니다.</li>\n          <li>최소 권한 원칙에 따라 필요한 권한만 부여하세요.</li>\n          <li>정기적으로 액세스 키를 교체하는 것을 권장합니다.</li>\n          <li>프로덕션 환경에서는 IAM 역할 사용을 고려하세요.</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n// 메트릭 단위 반환\nconst getMetricUnit = (metricName) => {\n  const units = {\n    cpu_utilization: '%',\n    freeable_memory: 'MB',\n    database_connections: '개',\n    read_iops: 'IOPS',\n    write_iops: 'IOPS',\n    network_receive_throughput: 'MB/s',\n    network_transmit_throughput: 'MB/s'\n  };\n  return units[metricName] || '';\n};\n\n// 메트릭 상태 색상 반환\nconst getMetricStatusColor = (metricName, value) => {\n  if (metricName === 'cpu_utilization' && value > 80) return '#ffc107';\n  if (metricName === 'freeable_memory' && value < 1000) return '#ffc107';\n  if (metricName === 'database_connections' && value > 100) return '#ffc107';\n  return '#28a745';\n};\n\n// 메트릭 상태 반환\nconst getMetricStatus = (metricName, value) => {\n  if (metricName === 'cpu_utilization' && value > 80) return 'warning';\n  if (metricName === 'freeable_memory' && value < 1000) return 'warning';\n  if (metricName === 'database_connections' && value > 100) return 'warning';\n  return 'ok';\n};\n\nexport default AwsIntegrationComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}