{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/DatabaseManager.js\",\n  _s = $RefreshSig$();\n// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DatabaseManager({\n  databases,\n  onDatabaseChange,\n  onDatabaseDelete,\n  onDatabaseAdd\n}) {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [editingDb, setEditingDb] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n    db_type: 'mysql'\n  });\n  const [errors, setErrors] = useState({});\n  const dbTypes = [{\n    value: 'mysql',\n    label: 'MySQL'\n  }, {\n    value: 'postgresql',\n    label: 'PostgreSQL'\n  }, {\n    value: 'sqlite',\n    label: 'SQLite'\n  }, {\n    value: 'oracle',\n    label: 'Oracle'\n  }, {\n    value: 'sqlserver',\n    label: 'SQL Server'\n  }];\n\n  // 폼 초기화\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      host: '',\n      port: '',\n      database: '',\n      username: '',\n      password: '',\n      db_type: 'mysql'\n    });\n    setErrors({});\n    setEditingDb(null);\n  };\n\n  // 폼 표시/숨김 토글\n  const toggleForm = () => {\n    if (showForm) {\n      resetForm();\n    }\n    setShowForm(!showForm);\n  };\n\n  // 편집 모드 시작\n  const startEdit = db => {\n    setFormData({\n      name: db.name,\n      host: db.host,\n      port: db.port || '',\n      database: db.database,\n      username: db.username,\n      password: db.password,\n      db_type: db.db_type || 'mysql'\n    });\n    setEditingDb(db);\n    setShowForm(true);\n    setErrors({});\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // 에러 클리어\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // 폼 유효성 검사\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'DB 이름을 입력하세요';\n    }\n    if (!formData.host.trim()) {\n      newErrors.host = '호스트를 입력하세요';\n    }\n    if (!formData.database.trim()) {\n      newErrors.database = '데이터베이스명을 입력하세요';\n    }\n    if (!formData.username.trim()) {\n      newErrors.username = '사용자명을 입력하세요';\n    }\n    if (!formData.password.trim()) {\n      newErrors.password = '비밀번호를 입력하세요';\n    }\n\n    // 포트 번호 검증\n    if (formData.port && (isNaN(formData.port) || formData.port < 1 || formData.port > 65535)) {\n      newErrors.port = '유효한 포트 번호를 입력하세요 (1-65535)';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // 폼 제출 처리\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('name', formData.name);\n      formDataToSend.append('host', formData.host);\n      formDataToSend.append('port', formData.port);\n      formDataToSend.append('user', formData.username);\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('dbname', formData.database);\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formDataToSend\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseChange(); // 부모 컴포넌트에 변경 알림\n          resetForm();\n          setShowForm(false);\n        } else {\n          setErrors({\n            general: '저장에 실패했습니다.'\n          });\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      setErrors({\n        general: '연결 오류가 발생했습니다.'\n      });\n    }\n  };\n\n  // DB 삭제 처리\n  const handleDelete = async dbName => {\n    if (!window.confirm(`정말로 \"${dbName}\" 데이터베이스 연결을 삭제하시겠습니까?`)) {\n      return;\n    }\n    try {\n      const response = await fetch(`/api/databases/${dbName}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseDelete(dbName);\n        } else {\n          alert('삭제에 실패했습니다.');\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      alert('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 연결 테스트\n  const testConnection = async db => {\n    try {\n      const response = await fetch('/api/databases/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(db),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert('연결 테스트 성공!');\n      } else {\n        alert(`연결 테스트 실패: ${result.message}`);\n      }\n    } catch (error) {\n      alert('연결 테스트 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"database-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manager-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForm,\n        className: `btn ${showForm ? 'btn-secondary' : 'btn-primary'}`,\n        children: showForm ? '취소' : '새 DB 추가'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"db-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editingDb ? 'DB 연결 수정' : '새 DB 연결 추가'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"DB \\uC774\\uB984 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: production_db\",\n              className: errors.name ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"db_type\",\n              children: \"DB \\uD0C0\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"db_type\",\n              name: \"db_type\",\n              value: formData.db_type,\n              onChange: handleInputChange,\n              children: dbTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type.value,\n                children: type.label\n              }, type.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"host\",\n              children: \"\\uD638\\uC2A4\\uD2B8 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"host\",\n              name: \"host\",\n              value: formData.host,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: localhost \\uB610\\uB294 192.168.1.100\",\n              className: errors.host ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), errors.host && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.host\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"port\",\n              children: \"\\uD3EC\\uD2B8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"port\",\n              name: \"port\",\n              value: formData.port,\n              onChange: handleInputChange,\n              placeholder: \"\\uAE30\\uBCF8\\uAC12 \\uC0AC\\uC6A9\",\n              className: errors.port ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), errors.port && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.port\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"database\",\n              children: \"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uBA85 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"database\",\n              name: \"database\",\n              value: formData.database,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: myapp_production\",\n              className: errors.database ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), errors.database && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.database\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"\\uC0AC\\uC6A9\\uC790\\uBA85 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: dbuser\",\n              className: errors.username ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n              className: errors.password ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: editingDb ? '수정' : '추가'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleForm,\n            className: \"btn btn-secondary\",\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database-list\",\n      children: databases && databases.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"db-grid\",\n        children: databases.map(db => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"db-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: db.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"db-type-badge\",\n              children: db.db_type || 'mysql'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"db-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD638\\uC2A4\\uD2B8:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 26\n                }, this), \" \", db.host]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD3EC\\uD2B8:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 26\n                }, this), \" \", db.port || '기본값']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"DB:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 26\n                }, this), \" \", db.database]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uC0AC\\uC6A9\\uC790:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 26\n                }, this), \" \", db.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-card-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => testConnection(db),\n              className: \"btn btn-sm btn-outline\",\n              title: \"\\uC5F0\\uACB0 \\uD14C\\uC2A4\\uD2B8\",\n              children: \"\\uD83D\\uDD17 \\uD14C\\uC2A4\\uD2B8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEdit(db),\n              className: \"btn btn-sm btn-outline\",\n              title: \"\\uC218\\uC815\",\n              children: \"\\u270F\\uFE0F \\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(db.name),\n              className: \"btn btn-sm btn-danger\",\n              title: \"\\uC0AD\\uC81C\",\n              children: \"\\uD83D\\uDDD1\\uFE0F \\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this)]\n        }, db.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB4F1\\uB85D\\uB41C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC0C8 DB \\uC5F0\\uACB0\\uC744 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(DatabaseManager, \"pQ/iXCHLqMRAAQSLrAMSf9MmUfE=\");\n_c = DatabaseManager;\nexport default DatabaseManager;\nvar _c;\n$RefreshReg$(_c, \"DatabaseManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DatabaseManager","databases","onDatabaseChange","onDatabaseDelete","onDatabaseAdd","_s","showForm","setShowForm","editingDb","setEditingDb","formData","setFormData","name","host","port","database","username","password","db_type","errors","setErrors","dbTypes","value","label","resetForm","toggleForm","startEdit","db","handleInputChange","e","target","prev","validateForm","newErrors","trim","isNaN","Object","keys","length","handleSubmit","preventDefault","formDataToSend","FormData","append","response","fetch","method","body","ok","result","json","status","general","Error","error","handleDelete","dbName","window","confirm","alert","testConnection","headers","JSON","stringify","credentials","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","onChange","placeholder","map","title","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/DatabaseManager.js"],"sourcesContent":["// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React, { useState, useEffect } from 'react';\n\nfunction DatabaseManager({ databases, onDatabaseChange, onDatabaseDelete, onDatabaseAdd }) {\n  const [showForm, setShowForm] = useState(false);\n  const [editingDb, setEditingDb] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n    db_type: 'mysql'\n  });\n  const [errors, setErrors] = useState({});\n\n  const dbTypes = [\n    { value: 'mysql', label: 'MySQL' },\n    { value: 'postgresql', label: 'PostgreSQL' },\n    { value: 'sqlite', label: 'SQLite' },\n    { value: 'oracle', label: 'Oracle' },\n    { value: 'sqlserver', label: 'SQL Server' }\n  ];\n\n  // 폼 초기화\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      host: '',\n      port: '',\n      database: '',\n      username: '',\n      password: '',\n      db_type: 'mysql'\n    });\n    setErrors({});\n    setEditingDb(null);\n  };\n\n  // 폼 표시/숨김 토글\n  const toggleForm = () => {\n    if (showForm) {\n      resetForm();\n    }\n    setShowForm(!showForm);\n  };\n\n  // 편집 모드 시작\n  const startEdit = (db) => {\n    setFormData({\n      name: db.name,\n      host: db.host,\n      port: db.port || '',\n      database: db.database,\n      username: db.username,\n      password: db.password,\n      db_type: db.db_type || 'mysql'\n    });\n    setEditingDb(db);\n    setShowForm(true);\n    setErrors({});\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // 에러 클리어\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // 폼 유효성 검사\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'DB 이름을 입력하세요';\n    }\n    \n    if (!formData.host.trim()) {\n      newErrors.host = '호스트를 입력하세요';\n    }\n    \n    if (!formData.database.trim()) {\n      newErrors.database = '데이터베이스명을 입력하세요';\n    }\n    \n    if (!formData.username.trim()) {\n      newErrors.username = '사용자명을 입력하세요';\n    }\n    \n    if (!formData.password.trim()) {\n      newErrors.password = '비밀번호를 입력하세요';\n    }\n\n    // 포트 번호 검증\n    if (formData.port && (isNaN(formData.port) || formData.port < 1 || formData.port > 65535)) {\n      newErrors.port = '유효한 포트 번호를 입력하세요 (1-65535)';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // 폼 제출 처리\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('name', formData.name);\n      formDataToSend.append('host', formData.host);\n      formDataToSend.append('port', formData.port);\n      formDataToSend.append('user', formData.username);\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('dbname', formData.database);\n      \n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseChange(); // 부모 컴포넌트에 변경 알림\n          resetForm();\n          setShowForm(false);\n        } else {\n          setErrors({ general: '저장에 실패했습니다.' });\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      setErrors({ general: '연결 오류가 발생했습니다.' });\n    }\n  };\n\n  // DB 삭제 처리\n  const handleDelete = async (dbName) => {\n    if (!window.confirm(`정말로 \"${dbName}\" 데이터베이스 연결을 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/databases/${dbName}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseDelete(dbName);\n        } else {\n          alert('삭제에 실패했습니다.');\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      alert('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 연결 테스트\n  const testConnection = async (db) => {\n    try {\n      const response = await fetch('/api/databases/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(db),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert('연결 테스트 성공!');\n      } else {\n        alert(`연결 테스트 실패: ${result.message}`);\n      }\n    } catch (error) {\n      alert('연결 테스트 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"database-manager\">\n      {/* 헤더 */}\n      <div className=\"manager-header\">\n        <h2>데이터베이스 연결 관리</h2>\n        <button \n          onClick={toggleForm} \n          className={`btn ${showForm ? 'btn-secondary' : 'btn-primary'}`}\n        >\n          {showForm ? '취소' : '새 DB 추가'}\n        </button>\n      </div>\n\n      {/* DB 추가/편집 폼 */}\n      {showForm && (\n        <div className=\"form-container\">\n          <form onSubmit={handleSubmit} className=\"db-form\">\n            <h3>{editingDb ? 'DB 연결 수정' : '새 DB 연결 추가'}</h3>\n            \n            {errors.general && (\n              <div className=\"error-message\">{errors.general}</div>\n            )}\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">DB 이름 *</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"예: production_db\"\n                  className={errors.name ? 'error' : ''}\n                />\n                {errors.name && <span className=\"error-text\">{errors.name}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"db_type\">DB 타입</label>\n                <select\n                  id=\"db_type\"\n                  name=\"db_type\"\n                  value={formData.db_type}\n                  onChange={handleInputChange}\n                >\n                  {dbTypes.map(type => (\n                    <option key={type.value} value={type.value}>\n                      {type.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"host\">호스트 *</label>\n                <input\n                  type=\"text\"\n                  id=\"host\"\n                  name=\"host\"\n                  value={formData.host}\n                  onChange={handleInputChange}\n                  placeholder=\"예: localhost 또는 192.168.1.100\"\n                  className={errors.host ? 'error' : ''}\n                />\n                {errors.host && <span className=\"error-text\">{errors.host}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"port\">포트</label>\n                <input\n                  type=\"number\"\n                  id=\"port\"\n                  name=\"port\"\n                  value={formData.port}\n                  onChange={handleInputChange}\n                  placeholder=\"기본값 사용\"\n                  className={errors.port ? 'error' : ''}\n                />\n                {errors.port && <span className=\"error-text\">{errors.port}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"database\">데이터베이스명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"database\"\n                  name=\"database\"\n                  value={formData.database}\n                  onChange={handleInputChange}\n                  placeholder=\"예: myapp_production\"\n                  className={errors.database ? 'error' : ''}\n                />\n                {errors.database && <span className=\"error-text\">{errors.database}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">사용자명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  placeholder=\"예: dbuser\"\n                  className={errors.username ? 'error' : ''}\n                />\n                {errors.username && <span className=\"error-text\">{errors.username}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"password\">비밀번호 *</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  placeholder=\"비밀번호 입력\"\n                  className={errors.password ? 'error' : ''}\n                />\n                {errors.password && <span className=\"error-text\">{errors.password}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {editingDb ? '수정' : '추가'}\n              </button>\n              <button type=\"button\" onClick={toggleForm} className=\"btn btn-secondary\">\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* DB 목록 */}\n      <div className=\"database-list\">\n        {databases && databases.length > 0 ? (\n          <div className=\"db-grid\">\n            {databases.map(db => (\n              <div key={db.name} className=\"db-card\">\n                <div className=\"db-card-header\">\n                  <h4>{db.name}</h4>\n                  <div className=\"db-type-badge\">{db.db_type || 'mysql'}</div>\n                </div>\n                \n                <div className=\"db-card-body\">\n                  <div className=\"db-info\">\n                    <div><strong>호스트:</strong> {db.host}</div>\n                    <div><strong>포트:</strong> {db.port || '기본값'}</div>\n                    <div><strong>DB:</strong> {db.database}</div>\n                    <div><strong>사용자:</strong> {db.username}</div>\n                  </div>\n                </div>\n                \n                <div className=\"db-card-actions\">\n                  <button \n                    onClick={() => testConnection(db)}\n                    className=\"btn btn-sm btn-outline\"\n                    title=\"연결 테스트\"\n                  >\n                    🔗 테스트\n                  </button>\n                  <button \n                    onClick={() => startEdit(db)}\n                    className=\"btn btn-sm btn-outline\"\n                    title=\"수정\"\n                  >\n                    ✏️ 수정\n                  </button>\n                  <button \n                    onClick={() => handleDelete(db.name)}\n                    className=\"btn btn-sm btn-danger\"\n                    title=\"삭제\"\n                  >\n                    🗑️ 삭제\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"empty-state\">\n            <p>등록된 데이터베이스 연결이 없습니다.</p>\n            <p>새 DB 연결을 추가해보세요!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DatabaseManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}