{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/DatabaseManager.js\",\n  _s = $RefreshSig$();\n// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DatabaseManager({\n  databases,\n  onDatabaseChange,\n  onDatabaseDelete,\n  onDatabaseAdd\n}) {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [editingDb, setEditingDb] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [showBrowseForm, setShowBrowseForm] = useState(false);\n  const [browseFormData, setBrowseFormData] = useState({\n    host: '',\n    port: '',\n    username: '',\n    password: ''\n  });\n  const [browsedDatabases, setBrowsedDatabases] = useState([]);\n  const [browseError, setBrowseError] = useState('');\n\n  // 폼 초기화\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      host: '',\n      port: '',\n      database: '',\n      username: '',\n      password: ''\n    });\n    setErrors({});\n    setEditingDb(null);\n  };\n\n  // 폼 표시/숨김 토글\n  const toggleForm = () => {\n    if (showForm) {\n      resetForm();\n    }\n    setShowForm(!showForm);\n    setShowBrowseForm(false); // Hide browse form when toggling add/edit form\n  };\n\n  // DB Browse 폼 표시/숨김 토글\n  const toggleBrowseForm = () => {\n    setShowBrowseForm(!showBrowseForm);\n    setShowForm(false); // Hide add/edit form when toggling browse form\n    setBrowsedDatabases([]); // Clear browsed results\n    setBrowseError('');\n    setBrowseFormData({\n      host: formData.host || '',\n      port: formData.port || '',\n      username: formData.username || '',\n      password: formData.password || ''\n    });\n  };\n\n  // 편집 모드 시작\n  const startEdit = db => {\n    setFormData({\n      name: db.name,\n      host: db.host,\n      port: db.port || '',\n      database: db.dbname || '',\n      // Use dbname from backend\n      username: db.user || '',\n      // Use user from backend\n      password: db.password\n    });\n    setEditingDb(db);\n    setShowForm(true);\n    setShowBrowseForm(false); // Hide browse form\n    setErrors({});\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // 에러 클리어\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // DB Browse 폼 입력 필드 변경 처리\n  const handleBrowseInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBrowseFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // 조회된 DB 선택\n  const handleSelectBrowsedDb = dbName => {\n    setFormData(prev => ({\n      ...prev,\n      database: dbName\n    }));\n    setShowBrowseForm(false);\n    setShowForm(true);\n  };\n\n  // 폼 유효성 검사\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'DB 이름을 입력하세요';\n    }\n    if (!formData.host.trim()) {\n      newErrors.host = '호스트를 입력하세요';\n    }\n    if (!formData.database.trim()) {\n      newErrors.database = '데이터베이스명을 입력하세요';\n    }\n    if (!formData.username.trim()) {\n      newErrors.username = '사용자명을 입력하세요';\n    }\n    if (!formData.password.trim()) {\n      newErrors.password = '비밀번호를 입력하세요';\n    }\n\n    // 포트 번호 검증\n    if (formData.port && (isNaN(formData.port) || formData.port < 1 || formData.port > 65535)) {\n      newErrors.port = '유효한 포트 번호를 입력하세요 (1-65535)';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // 폼 제출 처리\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('name', formData.name);\n      formDataToSend.append('host', formData.host);\n      formDataToSend.append('port', formData.port);\n      formDataToSend.append('user', formData.username);\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('dbname', formData.database);\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formDataToSend\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseChange(); // 부모 컴포넌트에 변경 알림\n          resetForm();\n          setShowForm(false);\n        } else {\n          setErrors({\n            general: '저장에 실패했습니다.'\n          });\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      setErrors({\n        general: '연결 오류가 발생했습니다.'\n      });\n    }\n  };\n\n  // DB 삭제 처리\n  const handleDelete = async dbName => {\n    if (!window.confirm(`정말로 \"${dbName}\" 데이터베이스 연결을 삭제하시겠습니까?`)) {\n      return;\n    }\n    try {\n      const response = await fetch(`/api/databases/${dbName}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseDelete(dbName);\n        } else {\n          alert('삭제에 실패했습니다.');\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      alert('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 연결 테스트\n  const testConnection = async db => {\n    try {\n      const response = await fetch('/api/databases/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(db),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert('연결 테스트 성공!');\n      } else {\n        alert(`연결 테스트 실패: ${result.message}`);\n      }\n    } catch (error) {\n      alert('연결 테스트 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"database-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manager-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForm,\n        className: `btn ${showForm ? 'btn-secondary' : 'btn-primary'}`,\n        children: showForm ? '취소' : '새 DB 추가'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"db-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editingDb ? 'DB 연결 수정' : '새 DB 연결 추가'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"DB \\uC774\\uB984 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: production_db\",\n              className: errors.name ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"host\",\n              children: \"\\uD638\\uC2A4\\uD2B8 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"host\",\n              name: \"host\",\n              value: formData.host,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: localhost \\uB610\\uB294 192.168.1.100\",\n              className: errors.host ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), errors.host && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.host\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"port\",\n              children: \"\\uD3EC\\uD2B8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"port\",\n              name: \"port\",\n              value: formData.port,\n              onChange: handleInputChange,\n              placeholder: \"\\uAE30\\uBCF8\\uAC12 \\uC0AC\\uC6A9\",\n              className: errors.port ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), errors.port && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.port\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"database\",\n              children: \"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uBA85 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"database\",\n              name: \"database\",\n              value: formData.database,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: myapp_production\",\n              className: errors.database ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), errors.database && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.database\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"\\uC0AC\\uC6A9\\uC790\\uBA85 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: dbuser\",\n              className: errors.username ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n              className: errors.password ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: editingDb ? '수정' : '추가'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleForm,\n            className: \"btn btn-secondary\",\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database-list\",\n      children: databases && databases.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"db-grid\",\n        children: databases.map(db => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"db-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: db.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"db-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD638\\uC2A4\\uD2B8:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 26\n                }, this), \" \", db.host]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD3EC\\uD2B8:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 26\n                }, this), \" \", db.port || '기본값']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"DB:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 26\n                }, this), \" \", db.dbname || '모든 DB']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uC0AC\\uC6A9\\uC790:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 26\n                }, this), \" \", db.user]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-card-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => testConnection(db),\n              className: \"btn btn-sm btn-outline\",\n              title: \"\\uC5F0\\uACB0 \\uD14C\\uC2A4\\uD2B8\",\n              children: \"\\uD83D\\uDD17 \\uD14C\\uC2A4\\uD2B8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEdit(db),\n              className: \"btn btn-sm btn-outline\",\n              title: \"\\uC218\\uC815\",\n              children: \"\\u270F\\uFE0F \\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(db.name),\n              className: \"btn btn-sm btn-danger\",\n              title: \"\\uC0AD\\uC81C\",\n              children: \"\\uD83D\\uDDD1\\uFE0F \\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this)]\n        }, db.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB4F1\\uB85D\\uB41C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC0C8 DB \\uC5F0\\uACB0\\uC744 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(DatabaseManager, \"Vrt5pBshusmP1jNJCGPW+Zrruak=\");\n_c = DatabaseManager;\nexport default DatabaseManager;\nvar _c;\n$RefreshReg$(_c, \"DatabaseManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DatabaseManager","databases","onDatabaseChange","onDatabaseDelete","onDatabaseAdd","_s","showForm","setShowForm","editingDb","setEditingDb","formData","setFormData","name","host","port","database","username","password","errors","setErrors","showBrowseForm","setShowBrowseForm","browseFormData","setBrowseFormData","browsedDatabases","setBrowsedDatabases","browseError","setBrowseError","resetForm","toggleForm","toggleBrowseForm","startEdit","db","dbname","user","handleInputChange","e","value","target","prev","handleBrowseInputChange","handleSelectBrowsedDb","dbName","validateForm","newErrors","trim","isNaN","Object","keys","length","handleSubmit","preventDefault","formDataToSend","FormData","append","response","fetch","method","body","ok","result","json","status","general","Error","error","handleDelete","window","confirm","alert","testConnection","headers","JSON","stringify","credentials","success","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","onChange","placeholder","map","title","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/DatabaseManager.js"],"sourcesContent":["// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React, { useState, useEffect } from 'react';\n\nfunction DatabaseManager({ databases, onDatabaseChange, onDatabaseDelete, onDatabaseAdd }) {\n  const [showForm, setShowForm] = useState(false);\n  const [editingDb, setEditingDb] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState({});\n\n  const [showBrowseForm, setShowBrowseForm] = useState(false);\n  const [browseFormData, setBrowseFormData] = useState({\n    host: '',\n    port: '',\n    username: '',\n    password: '',\n  });\n  const [browsedDatabases, setBrowsedDatabases] = useState([]);\n  const [browseError, setBrowseError] = useState('');\n\n  // 폼 초기화\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      host: '',\n      port: '',\n      database: '',\n      username: '',\n      password: '',\n    });\n    setErrors({});\n    setEditingDb(null);\n  };\n\n  // 폼 표시/숨김 토글\n  const toggleForm = () => {\n    if (showForm) {\n      resetForm();\n    }\n    setShowForm(!showForm);\n    setShowBrowseForm(false); // Hide browse form when toggling add/edit form\n  };\n\n  // DB Browse 폼 표시/숨김 토글\n  const toggleBrowseForm = () => {\n    setShowBrowseForm(!showBrowseForm);\n    setShowForm(false); // Hide add/edit form when toggling browse form\n    setBrowsedDatabases([]); // Clear browsed results\n    setBrowseError('');\n    setBrowseFormData({\n      host: formData.host || '',\n      port: formData.port || '',\n      username: formData.username || '',\n      password: formData.password || '',\n    });\n  };\n\n  // 편집 모드 시작\n  const startEdit = (db) => {\n    setFormData({\n      name: db.name,\n      host: db.host,\n      port: db.port || '',\n      database: db.dbname || '', // Use dbname from backend\n      username: db.user || '',   // Use user from backend\n      password: db.password,\n    });\n    setEditingDb(db);\n    setShowForm(true);\n    setShowBrowseForm(false); // Hide browse form\n    setErrors({});\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // 에러 클리어\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // DB Browse 폼 입력 필드 변경 처리\n  const handleBrowseInputChange = (e) => {\n    const { name, value } = e.target;\n    setBrowseFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // 조회된 DB 선택\n  const handleSelectBrowsedDb = (dbName) => {\n    setFormData(prev => ({\n      ...prev,\n      database: dbName\n    }));\n    setShowBrowseForm(false);\n    setShowForm(true);\n  };\n\n  // 폼 유효성 검사\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'DB 이름을 입력하세요';\n    }\n    \n    if (!formData.host.trim()) {\n      newErrors.host = '호스트를 입력하세요';\n    }\n    \n    if (!formData.database.trim()) {\n      newErrors.database = '데이터베이스명을 입력하세요';\n    }\n    \n    if (!formData.username.trim()) {\n      newErrors.username = '사용자명을 입력하세요';\n    }\n    \n    if (!formData.password.trim()) {\n      newErrors.password = '비밀번호를 입력하세요';\n    }\n\n    // 포트 번호 검증\n    if (formData.port && (isNaN(formData.port) || formData.port < 1 || formData.port > 65535)) {\n      newErrors.port = '유효한 포트 번호를 입력하세요 (1-65535)';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // 폼 제출 처리\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('name', formData.name);\n      formDataToSend.append('host', formData.host);\n      formDataToSend.append('port', formData.port);\n      formDataToSend.append('user', formData.username);\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('dbname', formData.database);\n      \n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseChange(); // 부모 컴포넌트에 변경 알림\n          resetForm();\n          setShowForm(false);\n        } else {\n          setErrors({ general: '저장에 실패했습니다.' });\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      setErrors({ general: '연결 오류가 발생했습니다.' });\n    }\n  };\n\n  // DB 삭제 처리\n  const handleDelete = async (dbName) => {\n    if (!window.confirm(`정말로 \"${dbName}\" 데이터베이스 연결을 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/databases/${dbName}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseDelete(dbName);\n        } else {\n          alert('삭제에 실패했습니다.');\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      alert('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 연결 테스트\n  const testConnection = async (db) => {\n    try {\n      const response = await fetch('/api/databases/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(db),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert('연결 테스트 성공!');\n      } else {\n        alert(`연결 테스트 실패: ${result.message}`);\n      }\n    } catch (error) {\n      alert('연결 테스트 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"database-manager\">\n      {/* 헤더 */}\n      <div className=\"manager-header\">\n        <h2>데이터베이스 연결 관리</h2>\n        <button \n          onClick={toggleForm} \n          className={`btn ${showForm ? 'btn-secondary' : 'btn-primary'}`}\n        >\n          {showForm ? '취소' : '새 DB 추가'}\n        </button>\n      </div>\n\n      {/* DB 추가/편집 폼 */}\n      {showForm && (\n        <div className=\"form-container\">\n          <form onSubmit={handleSubmit} className=\"db-form\">\n            <h3>{editingDb ? 'DB 연결 수정' : '새 DB 연결 추가'}</h3>\n            \n            {errors.general && (\n              <div className=\"error-message\">{errors.general}</div>\n            )}\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">DB 이름 *</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"예: production_db\"\n                  className={errors.name ? 'error' : ''}\n                />\n                {errors.name && <span className=\"error-text\">{errors.name}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"host\">호스트 *</label>\n                <input\n                  type=\"text\"\n                  id=\"host\"\n                  name=\"host\"\n                  value={formData.host}\n                  onChange={handleInputChange}\n                  placeholder=\"예: localhost 또는 192.168.1.100\"\n                  className={errors.host ? 'error' : ''}\n                />\n                {errors.host && <span className=\"error-text\">{errors.host}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"port\">포트</label>\n                <input\n                  type=\"number\"\n                  id=\"port\"\n                  name=\"port\"\n                  value={formData.port}\n                  onChange={handleInputChange}\n                  placeholder=\"기본값 사용\"\n                  className={errors.port ? 'error' : ''}\n                />\n                {errors.port && <span className=\"error-text\">{errors.port}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"database\">데이터베이스명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"database\"\n                  name=\"database\"\n                  value={formData.database}\n                  onChange={handleInputChange}\n                  placeholder=\"예: myapp_production\"\n                  className={errors.database ? 'error' : ''}\n                />\n                {errors.database && <span className=\"error-text\">{errors.database}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">사용자명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  placeholder=\"예: dbuser\"\n                  className={errors.username ? 'error' : ''}\n                />\n                {errors.username && <span className=\"error-text\">{errors.username}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"password\">비밀번호 *</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  placeholder=\"비밀번호 입력\"\n                  className={errors.password ? 'error' : ''}\n                />\n                {errors.password && <span className=\"error-text\">{errors.password}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {editingDb ? '수정' : '추가'}\n              </button>\n              <button type=\"button\" onClick={toggleForm} className=\"btn btn-secondary\">\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* DB 목록 */}\n      <div className=\"database-list\">\n        {databases && databases.length > 0 ? (\n          <div className=\"db-grid\">\n            {databases.map(db => (\n              <div key={db.name} className=\"db-card\">\n                <div className=\"db-card-header\">\n                  <h4>{db.name}</h4>\n                </div>\n                \n                <div className=\"db-card-body\">\n                  <div className=\"db-info\">\n                    <div><strong>호스트:</strong> {db.host}</div>\n                    <div><strong>포트:</strong> {db.port || '기본값'}</div>\n                    <div><strong>DB:</strong> {db.dbname || '모든 DB'}</div>\n                    <div><strong>사용자:</strong> {db.user}</div>\n                  </div>\n                </div>\n                \n                <div className=\"db-card-actions\">\n                  <button \n                    onClick={() => testConnection(db)}\n                    className=\"btn btn-sm btn-outline\"\n                    title=\"연결 테스트\"\n                  >\n                    🔗 테스트\n                  </button>\n                  <button \n                    onClick={() => startEdit(db)}\n                    className=\"btn btn-sm btn-outline\"\n                    title=\"수정\"\n                  >\n                    ✏️ 수정\n                  </button>\n                  <button \n                    onClick={() => handleDelete(db.name)}\n                    className=\"btn btn-sm btn-danger\"\n                    title=\"삭제\"\n                  >\n                    🗑️ 삭제\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"empty-state\">\n            <p>등록된 데이터베이스 연결이 없습니다.</p>\n            <p>새 DB 연결을 추가해보세요!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DatabaseManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}