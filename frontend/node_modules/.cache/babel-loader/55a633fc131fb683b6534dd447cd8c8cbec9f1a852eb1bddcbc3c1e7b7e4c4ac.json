{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/AI_DBAgent/frontend/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\n// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent({\n  selectedDb,\n  databases,\n  onDbChange\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n  const [aiModels, setAiModels] = useState([]);\n  const [selectedAiModel, setSelectedAiModel] = useState('');\n  const [dbSchema, setDbSchema] = useState(null); // DB 스키마 정보\n\n  const [conversations, setConversations] = useState([]); // 대화 목록\n  const [currentConversationId, setCurrentConversationId] = useState(null); // 현재 대화 ID\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [{\n    title: '성능 분석',\n    questions: ['오늘 가장 오래 걸린 쿼리 보여줘', '슬로우 쿼리 10개만 보여줘', '테이블별 row 수와 크기 알려줘']\n  }, {\n    title: '데이터 탐색',\n    questions: ['가장 row가 많은 테이블 알려줘', '최근 7일간 생성된 데이터 보여줘', '사용자 테이블의 구조를 설명해줘']\n  }, {\n    title: '시스템 상태',\n    questions: ['현재 활성 연결 수는?', '데이터베이스 크기와 사용량 알려줘', '인덱스 사용 현황을 분석해줘']\n  }];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // DB 선택 변경 시 대화 목록 불러오기\n  useEffect(() => {\n    const fetchConversations = async () => {\n      if (selectedDb) {\n        try {\n          const response = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (response.data.status === 'success') {\n            const conversations = response.data.conversations;\n            setConversations(conversations);\n            if (conversations.length > 0) {\n              // 가장 최근 대화를 자동으로 선택\n              setCurrentConversationId(conversations[0].id);\n            } else {\n              // 대화가 없으면 현재 대화 초기화\n              setCurrentConversationId(null);\n              setMessages([]);\n            }\n          }\n        } catch (error) {\n          console.error('대화 목록을 불러오는데 실패했습니다:', error);\n          setConversations([]);\n        }\n      } else {\n        setConversations([]);\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    };\n    fetchConversations();\n  }, [selectedDb]);\n\n  // DB 선택 변경 시 스키마 정보 불러오기\n  useEffect(() => {\n    const fetchDbSchema = async () => {\n      if (selectedDb && selectedDb !== '__ALL_DBS__') {\n        try {\n          const response = await axios.get(`/api/schema/${selectedDb}`);\n          if (response.data.status === 'success') {\n            setDbSchema(response.data.schema);\n            console.log('DB 스키마 정보 로드 완료:', response.data.schema);\n          }\n        } catch (error) {\n          console.error('DB 스키마 정보를 불러오는데 실패했습니다:', error);\n          setDbSchema(null);\n        }\n      } else {\n        setDbSchema(null);\n      }\n    };\n    fetchDbSchema();\n  }, [selectedDb]);\n\n  // 현재 대화 ID 변경 시 메시지 불러오기\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (currentConversationId) {\n        try {\n          const response = await axios.get(`/api/conversations/${currentConversationId}/messages`);\n          if (response.data.status === 'success') {\n            // DB에서 불러온 메시지 형식 변환\n            const formattedMessages = response.data.messages.map(msg => ({\n              role: msg.role,\n              content: msg.content,\n              sql: msg.sql_query,\n              result: msg.sql_result ? JSON.parse(msg.sql_result) : null,\n              timestamp: new Date(msg.timestamp).toLocaleTimeString()\n            }));\n            setMessages(formattedMessages);\n          }\n        } catch (error) {\n          console.error('메시지를 불러오는데 실패했습니다:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n  }, [currentConversationId]);\n\n  // AI 모델 목록 불러오기 (한 번만 실행)\n  useEffect(() => {\n    const fetchAiModels = async () => {\n      try {\n        const openaiRes = await axios.get('/api/openai/keys');\n        const azureOpenAIRes = await axios.get('/api/azure-openai/configs');\n        const geminiRes = await axios.get('/api/gemini/configs');\n        const claudeRes = await axios.get('/api/claude/configs');\n        const allModels = [...openaiRes.data.keys.map(k => ({\n          ...k,\n          type: 'openai'\n        })), ...azureOpenAIRes.data.configs.map(c => ({\n          ...c,\n          type: 'azure_openai'\n        })), ...geminiRes.data.configs.map(c => ({\n          ...c,\n          type: 'gemini'\n        })), ...claudeRes.data.configs.map(c => ({\n          ...c,\n          type: 'claude'\n        }))];\n        setAiModels(allModels);\n        const currentSelected = allModels.find(m => m.is_selected);\n        if (currentSelected) {\n          setSelectedAiModel(currentSelected.name);\n        } else if (allModels.length > 0) {\n          const defaultModel = allModels[0];\n          let selectApiEndpoint = '';\n          if (defaultModel.type === 'openai') selectApiEndpoint = '/api/openai/select';else if (defaultModel.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';else if (defaultModel.type === 'gemini') selectApiEndpoint = '/api/gemini/select';else if (defaultModel.type === 'claude') selectApiEndpoint = '/api/claude/select';\n          if (selectApiEndpoint) {\n            const formData = new FormData();\n            formData.append('name', defaultModel.name);\n            axios.post(selectApiEndpoint, formData).then(() => {\n              setSelectedAiModel(defaultModel.name);\n              console.log(`Default AI model selected: ${defaultModel.name}`);\n            }).catch(error => {\n              console.error('Error selecting default AI model:', error);\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching AI models:', error);\n      }\n    };\n    fetchAiModels();\n  }, []);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = el => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = question => {\n    var _textareaRef$current;\n    setInput(question);\n    (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : _textareaRef$current.focus();\n  };\n\n  // DB 스키마 정보를 AI 프롬프트로 변환\n  const generateSchemaPrompt = schema => {\n    let prompt = '';\n\n    // 테이블 정보\n    prompt += `데이터베이스에 ${schema.tables.length}개의 테이블이 있습니다:\\n\\n`;\n    schema.tables.forEach(table => {\n      prompt += `테이블: ${table.name}`;\n      if (table.comment) {\n        prompt += ` (${table.comment})`;\n      }\n      prompt += '\\n';\n\n      // 컬럼 정보\n      prompt += '  컬럼:\\n';\n      table.columns.forEach(column => {\n        prompt += `    - ${column.name}: ${column.type}`;\n        if (column.max_length) {\n          prompt += `(${column.max_length})`;\n        }\n        if (column.precision && column.scale) {\n          prompt += `(${column.precision},${column.scale})`;\n        }\n        if (!column.nullable) {\n          prompt += ' (NOT NULL)';\n        }\n        if (column.default) {\n          prompt += ` (기본값: ${column.default})`;\n        }\n        if (column.comment) {\n          prompt += ` - ${column.comment}`;\n        }\n        prompt += '\\n';\n      });\n\n      // 인덱스 정보\n      if (table.indexes && table.indexes.length > 0) {\n        prompt += '  인덱스:\\n';\n        table.indexes.forEach(index => {\n          prompt += `    - ${index.name}: [${index.columns.join(', ')}]`;\n          if (index.unique) {\n            prompt += ' (UNIQUE)';\n          }\n          if (index.primary) {\n            prompt += ' (PRIMARY KEY)';\n          }\n          prompt += '\\n';\n        });\n      }\n      prompt += '\\n';\n    });\n\n    // 관계 정보\n    if (schema.relationships && schema.relationships.length > 0) {\n      prompt += '테이블 관계:\\n';\n      schema.relationships.forEach(rel => {\n        prompt += `  ${rel.table}.${rel.column} -> ${rel.foreign_table}.${rel.foreign_column}\\n`;\n      });\n      prompt += '\\n';\n    }\n    return prompt;\n  };\n\n  // 기존 대화 선택\n  const handleSelectConversation = convId => {\n    setCurrentConversationId(convId);\n  };\n\n  // 대화 삭제\n  const handleDeleteConversation = async convId => {\n    if (window.confirm('정말로 이 대화를 삭제하시겠습니까? 모든 메시지가 영구적으로 삭제됩니다.')) {\n      try {\n        await axios.delete(`/api/conversations/${convId}`);\n        // 대화 목록 새로고침\n        const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n        if (convRes.data.status === 'success') {\n          setConversations(convRes.data.conversations);\n        }\n        if (currentConversationId === convId) {\n          setCurrentConversationId(null);\n          setMessages([]);\n        }\n      } catch (error) {\n        console.error('대화 삭제 실패:', error);\n        alert('대화 삭제에 실패했습니다.');\n      }\n    }\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim() || !selectedDb) return;\n    if (!selectedAiModel) {\n      alert('먼저 사용할 AI 모델을 선택해주세요.');\n      return;\n    }\n    let conversationId = currentConversationId;\n\n    // 현재 대화가 없으면 새로 생성\n    if (!conversationId) {\n      try {\n        const newConvResponse = await axios.post('/api/conversations/new', new URLSearchParams({\n          db_name: selectedDb,\n          title: input.substring(0, 30) // 첫 메시지를 제목으로 사용\n        }));\n        if (newConvResponse.data.status === 'success') {\n          conversationId = newConvResponse.data.conversation_id;\n          setCurrentConversationId(conversationId);\n          // 대화 목록 새로고침\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        } else {\n          throw new Error('Failed to create new conversation');\n        }\n      } catch (error) {\n        console.error('새 대화 생성 실패:', error);\n        alert('새 대화를 생성하는데 실패했습니다.');\n        return;\n      }\n    }\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n    setTextareaRows(1);\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n\n      // DB 스키마 정보를 포함한 향상된 프롬프트 생성\n      let enhancedPrompt = input;\n      if (dbSchema && dbSchema.tables && dbSchema.tables.length > 0) {\n        const schemaInfo = generateSchemaPrompt(dbSchema);\n        enhancedPrompt = `[데이터베이스 스키마 정보]\\n${schemaInfo}\\n\\n[사용자 질문]\\n${input}`;\n      }\n      formData.append('prompt', enhancedPrompt);\n      formData.append('conversation_id', conversationId); // 대화 ID 전송\n\n      const response = await axios.post('/api/nl2sql', formData);\n      if (response.data.status === 'success') {\n        const data = response.data.message;\n        const assistantMessage = {\n          role: 'assistant',\n          content: data.content || '',\n          sql: data.sql || '',\n          result: data.result || null,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, assistantMessage]);\n      } else {\n        const errorMessage = {\n          role: 'assistant',\n          content: response.data.error || '알 수 없는 오류 발생',\n          error: true,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n    } catch (error) {\n      console.error('요청 처리 중 오류 발생:', error);\n      const errorMessage = {\n        role: 'assistant',\n        content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n        error: true,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = e => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화 (현재 대화의 메시지만 삭제)\n  const handleResetChat = async () => {\n    if (!currentConversationId) return;\n    if (window.confirm('현재 대화의 모든 메시지를 초기화하시겠습니까?')) {\n      try {\n        const formData = new FormData();\n        formData.append('conversation_id', currentConversationId);\n        const response = await axios.post('/api/nl2sql/reset', formData);\n        if (response.data.status === 'success') {\n          setMessages([]);\n          // 대화 목록 새로고침 (업데이트된 updated_at 반영)\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        }\n      } catch (error) {\n        console.error('채팅 초기화 오류:', error);\n        alert('채팅 초기화에 실패했습니다.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCAC \\uB300\\uD654 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-sm\",\n          onClick: () => {\n            setCurrentConversationId(null);\n            setMessages([]);\n          },\n          title: \"\\uC0C8 \\uB300\\uD654 \\uC2DC\\uC791\",\n          children: \"\\u2795 \\uC0C8 \\uB300\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-list-container\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC544\\uC9C1 \\uB300\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC0C8 \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"conversation-list list-group\",\n          children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `conversation-item ${currentConversationId === conv.id ? 'active' : ''}`,\n            onClick: () => handleSelectConversation(conv.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-title\",\n                children: conv.title || '제목 없음'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-meta\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: new Date(conv.updated_at).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-sm btn-outline-danger delete-btn\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteConversation(conv.id);\n              },\n              title: \"\\uB300\\uD654 \\uC0AD\\uC81C\",\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 19\n            }, this)]\n          }, conv.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"db-select\",\n              className: \"prompt-label\",\n              children: \"DB \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"db-select\",\n              value: selectedDb || '',\n              onChange: e => onDbChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"DB\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"__ALL_DBS__\",\n                children: \"\\uBAA8\\uB4E0 DB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), databases === null || databases === void 0 ? void 0 : databases.map(db => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: db.name,\n                children: db.name\n              }, db.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-model-selector ms-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ai-model-select\",\n              className: \"prompt-label\",\n              children: \"AI \\uBAA8\\uB378 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"ai-model-select\",\n              value: selectedAiModel,\n              onChange: async e => {\n                const modelName = e.target.value;\n                const selected = aiModels.find(m => m.name === modelName);\n                if (selected) {\n                  let selectApiEndpoint = '';\n                  if (selected.type === 'openai') selectApiEndpoint = '/api/openai/select';else if (selected.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';else if (selected.type === 'gemini') selectApiEndpoint = '/api/gemini/select';else if (selected.type === 'claude') selectApiEndpoint = '/api/claude/select';\n                  if (selectApiEndpoint) {\n                    try {\n                      const formData = new FormData();\n                      formData.append('name', selected.name);\n                      await axios.post(selectApiEndpoint, formData);\n                      setSelectedAiModel(selected.name);\n                      alert(`${selected.name} AI 모델이 선택되었습니다.`);\n                    } catch (error) {\n                      console.error('Error selecting AI model:', error);\n                      alert('AI 모델 선택에 실패했습니다.');\n                    }\n                  }\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"AI \\uBAA8\\uB378 \\uC120\\uD0DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 17\n              }, this), aiModels.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: model.name,\n                children: [model.name, \" (\", model.type, \")\"]\n              }, model.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [currentConversationId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetChat,\n            className: \"btn btn-outline-warning btn-sm\",\n            title: \"\\uD604\\uC7AC \\uB300\\uD654 \\uCD08\\uAE30\\uD654\",\n            children: \"\\uD83D\\uDD04 \\uCD08\\uAE30\\uD654\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentConversationId(null);\n              setMessages([]);\n            },\n            className: \"btn btn-outline-primary btn-sm ms-2\",\n            title: \"\\uC0C8 \\uB300\\uD654 \\uC2DC\\uC791\",\n            children: \"\\u2795 \\uC0C8 \\uB300\\uD654\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        id: \"chat-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: [messages.length === 0 && !currentConversationId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggest-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCA1 \\uCD94\\uCC9C \\uC9C8\\uBB38\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggest-cards\",\n              children: suggestedQuestions.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggest-category\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: category.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggest-cards-grid\",\n                  children: category.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggest-card\",\n                    onClick: () => handleSuggestedQuestion(question),\n                    children: question\n                  }, questionIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 23\n                }, this)]\n              }, categoryIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 15\n          }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-role\",\n                  children: msg.role === 'user' ? '👤 사용자' : '🤖 AI'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: msg.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-body\",\n                children: msg.role === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-message\",\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ai-message-card\",\n                  children: [msg.content && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ai-response-section\",\n                    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 622,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 621,\n                    columnNumber: 27\n                  }, this), msg.sql && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sql-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\uD83D\\uDD0D \\uC0DD\\uC131\\uB41C SQL\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 628,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => navigator.clipboard.writeText(msg.sql),\n                        className: \"btn-copy\",\n                        children: \"\\uBCF5\\uC0AC\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 629,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                      children: /*#__PURE__*/_jsxDEV(\"code\", {\n                        children: msg.sql\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 631,\n                        columnNumber: 34\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 631,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 27\n                  }, this), msg.result && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\uD83D\\uDCCA \\uCFFC\\uB9AC \\uACB0\\uACFC\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 637,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 636,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"result-table-container\",\n                      style: {\n                        maxWidth: '100%',\n                        overflowX: 'auto',\n                        minWidth: 600\n                      },\n                      children: Array.isArray(msg.result) && msg.result.length > 0 && typeof msg.result[0] === 'object' ? /*#__PURE__*/_jsxDEV(\"table\", {\n                        className: \"result-table\",\n                        style: {\n                          minWidth: 600,\n                          fontSize: '1.05em'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: Object.keys(msg.result[0] || {}).map((key, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                              style: {\n                                padding: '8px 12px',\n                                background: '#f5f5f5',\n                                border: '1px solid #ddd'\n                              },\n                              children: key\n                            }, i, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 645,\n                              columnNumber: 41\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 643,\n                            columnNumber: 37\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 642,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: msg.result.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: Object.values(row).map((value, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                              style: {\n                                padding: '8px 12px',\n                                border: '1px solid #eee',\n                                background: i % 2 === 0 ? '#fff' : '#fafbfc'\n                              },\n                              children: String(value)\n                            }, j, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 653,\n                              columnNumber: 43\n                            }, this))\n                          }, i, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 651,\n                            columnNumber: 39\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 649,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 641,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"no-result\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"\\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 661,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: /*#__PURE__*/_jsxDEV(\"code\", {\n                            children: JSON.stringify(msg.result, null, 2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 662,\n                            columnNumber: 40\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 662,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 660,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 635,\n                    columnNumber: 27\n                  }, this), msg.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error-section\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"alert alert-danger\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\u274C \\uC624\\uB958 \\uBC1C\\uC0DD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 671,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: msg.content\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 672,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 670,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 669,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 619,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message message-ai\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-role\",\n                  children: \"\\uD83E\\uDD16 AI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: \"\\uCC98\\uB9AC \\uC911...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-body\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"spinner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"AI\\uAC00 \\uC751\\uB2F5\\uC744 \\uC0DD\\uC131\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 694,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-area\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: textareaRef,\n            value: input,\n            onChange: handleInputChange,\n            onKeyDown: handleKeyDown,\n            placeholder: \"\\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694... (Shift+Enter\\uB85C \\uC904\\uBC14\\uAFC8)\",\n            className: \"chat-input\",\n            rows: textareaRows,\n            disabled: loading || !selectedDb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            disabled: loading || !input.trim() || !selectedDb,\n            className: \"send-button\",\n            children: loading ? '⏳' : '📤'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"I4nx8ZV0mQaB/yN/AruRWpU4u0Y=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ReactMarkdown","jsxDEV","_jsxDEV","ChatComponent","selectedDb","databases","onDbChange","_s","messages","setMessages","input","setInput","loading","setLoading","textareaRows","setTextareaRows","messagesEndRef","textareaRef","aiModels","setAiModels","selectedAiModel","setSelectedAiModel","dbSchema","setDbSchema","conversations","setConversations","currentConversationId","setCurrentConversationId","suggestedQuestions","title","questions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchConversations","response","get","data","status","length","id","error","console","fetchDbSchema","schema","log","fetchMessages","formattedMessages","map","msg","role","content","sql","sql_query","result","sql_result","JSON","parse","timestamp","Date","toLocaleTimeString","fetchAiModels","openaiRes","azureOpenAIRes","geminiRes","claudeRes","allModels","keys","k","type","configs","c","currentSelected","find","m","is_selected","name","defaultModel","selectApiEndpoint","formData","FormData","append","post","then","catch","autoResizeTextarea","el","style","height","newHeight","Math","min","scrollHeight","ceil","handleSuggestedQuestion","question","_textareaRef$current","focus","generateSchemaPrompt","prompt","tables","forEach","table","comment","columns","column","max_length","precision","scale","nullable","default","indexes","index","join","unique","primary","relationships","rel","foreign_table","foreign_column","handleSelectConversation","convId","handleDeleteConversation","window","confirm","delete","convRes","alert","handleSend","trim","conversationId","newConvResponse","URLSearchParams","db_name","substring","conversation_id","Error","userMessage","prev","enhancedPrompt","schemaInfo","message","assistantMessage","errorMessage","handleKeyDown","e","key","shiftKey","preventDefault","handleInputChange","target","value","handleResetChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","conv","updated_at","toLocaleString","stopPropagation","htmlFor","onChange","db","modelName","selected","model","category","categoryIndex","questionIndex","idx","navigator","clipboard","writeText","maxWidth","overflowX","minWidth","Array","isArray","fontSize","Object","i","padding","background","border","row","values","j","String","stringify","ref","onKeyDown","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/AI_DBAgent/frontend/src/components/ChatComponent.js"],"sourcesContent":["// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nimport ReactMarkdown from 'react-markdown';\n\nfunction ChatComponent({ selectedDb, databases, onDbChange }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  const [aiModels, setAiModels] = useState([]);\n  const [selectedAiModel, setSelectedAiModel] = useState('');\n  const [dbSchema, setDbSchema] = useState(null); // DB 스키마 정보\n\n  const [conversations, setConversations] = useState([]); // 대화 목록\n  const [currentConversationId, setCurrentConversationId] = useState(null); // 현재 대화 ID\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [\n    {\n      title: '성능 분석',\n      questions: [\n        '오늘 가장 오래 걸린 쿼리 보여줘',\n        '슬로우 쿼리 10개만 보여줘',\n        '테이블별 row 수와 크기 알려줘'\n      ]\n    },\n    {\n      title: '데이터 탐색',\n      questions: [\n        '가장 row가 많은 테이블 알려줘',\n        '최근 7일간 생성된 데이터 보여줘',\n        '사용자 테이블의 구조를 설명해줘'\n      ]\n    },\n    {\n      title: '시스템 상태',\n      questions: [\n        '현재 활성 연결 수는?',\n        '데이터베이스 크기와 사용량 알려줘',\n        '인덱스 사용 현황을 분석해줘'\n      ]\n    }\n  ];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // DB 선택 변경 시 대화 목록 불러오기\n  useEffect(() => {\n    const fetchConversations = async () => {\n      if (selectedDb) {\n        try {\n          const response = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (response.data.status === 'success') {\n            const conversations = response.data.conversations;\n            setConversations(conversations);\n            if (conversations.length > 0) {\n              // 가장 최근 대화를 자동으로 선택\n              setCurrentConversationId(conversations[0].id);\n            } else {\n              // 대화가 없으면 현재 대화 초기화\n              setCurrentConversationId(null);\n              setMessages([]);\n            }\n          }\n        } catch (error) {\n          console.error('대화 목록을 불러오는데 실패했습니다:', error);\n          setConversations([]);\n        }\n      } else {\n        setConversations([]);\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    };\n\n    fetchConversations();\n  }, [selectedDb]);\n\n  // DB 선택 변경 시 스키마 정보 불러오기\n  useEffect(() => {\n    const fetchDbSchema = async () => {\n      if (selectedDb && selectedDb !== '__ALL_DBS__') {\n        try {\n          const response = await axios.get(`/api/schema/${selectedDb}`);\n          if (response.data.status === 'success') {\n            setDbSchema(response.data.schema);\n            console.log('DB 스키마 정보 로드 완료:', response.data.schema);\n          }\n        } catch (error) {\n          console.error('DB 스키마 정보를 불러오는데 실패했습니다:', error);\n          setDbSchema(null);\n        }\n      } else {\n        setDbSchema(null);\n      }\n    };\n\n    fetchDbSchema();\n  }, [selectedDb]);\n\n  // 현재 대화 ID 변경 시 메시지 불러오기\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (currentConversationId) {\n        try {\n          const response = await axios.get(`/api/conversations/${currentConversationId}/messages`);\n          if (response.data.status === 'success') {\n            // DB에서 불러온 메시지 형식 변환\n            const formattedMessages = response.data.messages.map(msg => ({\n              role: msg.role,\n              content: msg.content,\n              sql: msg.sql_query,\n              result: msg.sql_result ? JSON.parse(msg.sql_result) : null,\n              timestamp: new Date(msg.timestamp).toLocaleTimeString()\n            }));\n            setMessages(formattedMessages);\n          }\n        } catch (error) {\n          console.error('메시지를 불러오는데 실패했습니다:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n  }, [currentConversationId]);\n\n  // AI 모델 목록 불러오기 (한 번만 실행)\n  useEffect(() => {\n    const fetchAiModels = async () => {\n      try {\n        const openaiRes = await axios.get('/api/openai/keys');\n        const azureOpenAIRes = await axios.get('/api/azure-openai/configs');\n        const geminiRes = await axios.get('/api/gemini/configs');\n        const claudeRes = await axios.get('/api/claude/configs');\n\n        const allModels = [\n          ...openaiRes.data.keys.map(k => ({ ...k, type: 'openai' })),\n          ...azureOpenAIRes.data.configs.map(c => ({ ...c, type: 'azure_openai' })),\n          ...geminiRes.data.configs.map(c => ({ ...c, type: 'gemini' })),\n          ...claudeRes.data.configs.map(c => ({ ...c, type: 'claude' })),\n        ];\n        setAiModels(allModels);\n\n        const currentSelected = allModels.find(m => m.is_selected);\n        if (currentSelected) {\n          setSelectedAiModel(currentSelected.name);\n        } else if (allModels.length > 0) {\n          const defaultModel = allModels[0];\n          let selectApiEndpoint = '';\n          if (defaultModel.type === 'openai') selectApiEndpoint = '/api/openai/select';\n          else if (defaultModel.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';\n          else if (defaultModel.type === 'gemini') selectApiEndpoint = '/api/gemini/select';\n          else if (defaultModel.type === 'claude') selectApiEndpoint = '/api/claude/select';\n\n          if (selectApiEndpoint) {\n            const formData = new FormData();\n            formData.append('name', defaultModel.name);\n            axios.post(selectApiEndpoint, formData)\n              .then(() => {\n                setSelectedAiModel(defaultModel.name);\n                console.log(`Default AI model selected: ${defaultModel.name}`);\n              })\n              .catch(error => {\n                console.error('Error selecting default AI model:', error);\n              });\n          }\n        }\n\n      } catch (error) {\n        console.error('Error fetching AI models:', error);\n      }\n    };\n    fetchAiModels();\n  }, []);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = (el) => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = (question) => {\n    setInput(question);\n    textareaRef.current?.focus();\n  };\n\n  // DB 스키마 정보를 AI 프롬프트로 변환\n  const generateSchemaPrompt = (schema) => {\n    let prompt = '';\n    \n    // 테이블 정보\n    prompt += `데이터베이스에 ${schema.tables.length}개의 테이블이 있습니다:\\n\\n`;\n    \n    schema.tables.forEach(table => {\n      prompt += `테이블: ${table.name}`;\n      if (table.comment) {\n        prompt += ` (${table.comment})`;\n      }\n      prompt += '\\n';\n      \n      // 컬럼 정보\n      prompt += '  컬럼:\\n';\n      table.columns.forEach(column => {\n        prompt += `    - ${column.name}: ${column.type}`;\n        if (column.max_length) {\n          prompt += `(${column.max_length})`;\n        }\n        if (column.precision && column.scale) {\n          prompt += `(${column.precision},${column.scale})`;\n        }\n        if (!column.nullable) {\n          prompt += ' (NOT NULL)';\n        }\n        if (column.default) {\n          prompt += ` (기본값: ${column.default})`;\n        }\n        if (column.comment) {\n          prompt += ` - ${column.comment}`;\n        }\n        prompt += '\\n';\n      });\n      \n      // 인덱스 정보\n      if (table.indexes && table.indexes.length > 0) {\n        prompt += '  인덱스:\\n';\n        table.indexes.forEach(index => {\n          prompt += `    - ${index.name}: [${index.columns.join(', ')}]`;\n          if (index.unique) {\n            prompt += ' (UNIQUE)';\n          }\n          if (index.primary) {\n            prompt += ' (PRIMARY KEY)';\n          }\n          prompt += '\\n';\n        });\n      }\n      prompt += '\\n';\n    });\n    \n    // 관계 정보\n    if (schema.relationships && schema.relationships.length > 0) {\n      prompt += '테이블 관계:\\n';\n      schema.relationships.forEach(rel => {\n        prompt += `  ${rel.table}.${rel.column} -> ${rel.foreign_table}.${rel.foreign_column}\\n`;\n      });\n      prompt += '\\n';\n    }\n    \n    return prompt;\n  };\n\n  // 기존 대화 선택\n  const handleSelectConversation = (convId) => {\n    setCurrentConversationId(convId);\n  };\n\n  // 대화 삭제\n  const handleDeleteConversation = async (convId) => {\n    if (window.confirm('정말로 이 대화를 삭제하시겠습니까? 모든 메시지가 영구적으로 삭제됩니다.')) {\n      try {\n        await axios.delete(`/api/conversations/${convId}`);\n        // 대화 목록 새로고침\n        const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n        if (convRes.data.status === 'success') {\n          setConversations(convRes.data.conversations);\n        }\n        if (currentConversationId === convId) {\n          setCurrentConversationId(null);\n          setMessages([]);\n        }\n      } catch (error) {\n        console.error('대화 삭제 실패:', error);\n        alert('대화 삭제에 실패했습니다.');\n      }\n    }\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim() || !selectedDb) return;\n    \n    if (!selectedAiModel) {\n      alert('먼저 사용할 AI 모델을 선택해주세요.');\n      return;\n    }\n\n    let conversationId = currentConversationId;\n\n    // 현재 대화가 없으면 새로 생성\n    if (!conversationId) {\n      try {\n        const newConvResponse = await axios.post('/api/conversations/new', new URLSearchParams({\n          db_name: selectedDb,\n          title: input.substring(0, 30) // 첫 메시지를 제목으로 사용\n        }));\n        if (newConvResponse.data.status === 'success') {\n          conversationId = newConvResponse.data.conversation_id;\n          setCurrentConversationId(conversationId);\n          // 대화 목록 새로고침\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        } else {\n          throw new Error('Failed to create new conversation');\n        }\n      } catch (error) {\n        console.error('새 대화 생성 실패:', error);\n        alert('새 대화를 생성하는데 실패했습니다.');\n        return;\n      }\n    }\n    \n    const userMessage = { \n      role: 'user', \n      content: input,\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n    setTextareaRows(1);\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      \n      // DB 스키마 정보를 포함한 향상된 프롬프트 생성\n      let enhancedPrompt = input;\n      if (dbSchema && dbSchema.tables && dbSchema.tables.length > 0) {\n        const schemaInfo = generateSchemaPrompt(dbSchema);\n        enhancedPrompt = `[데이터베이스 스키마 정보]\\n${schemaInfo}\\n\\n[사용자 질문]\\n${input}`;\n      }\n      \n      formData.append('prompt', enhancedPrompt);\n      formData.append('conversation_id', conversationId); // 대화 ID 전송\n\n      const response = await axios.post('/api/nl2sql', formData);\n\n      if (response.data.status === 'success') {\n        const data = response.data.message;\n        const assistantMessage = {\n          role: 'assistant',\n          content: data.content || '',\n          sql: data.sql || '',\n          result: data.result || null,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, assistantMessage]);\n      } else {\n        const errorMessage = {\n          role: 'assistant',\n          content: response.data.error || '알 수 없는 오류 발생',\n          error: true,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n    } catch (error) {\n      console.error('요청 처리 중 오류 발생:', error);\n      const errorMessage = {\n        role: 'assistant',\n        content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n        error: true,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화 (현재 대화의 메시지만 삭제)\n  const handleResetChat = async () => {\n    if (!currentConversationId) return;\n    \n    if (window.confirm('현재 대화의 모든 메시지를 초기화하시겠습니까?')) {\n      try {\n        const formData = new FormData();\n        formData.append('conversation_id', currentConversationId);\n        const response = await axios.post('/api/nl2sql/reset', formData);\n        \n        if (response.data.status === 'success') {\n          setMessages([]);\n          // 대화 목록 새로고침 (업데이트된 updated_at 반영)\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        }\n      } catch (error) {\n        console.error('채팅 초기화 오류:', error);\n        alert('채팅 초기화에 실패했습니다.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"chat-page-container\">\n      {/* 대화 목록 사이드바 */}\n      <div className=\"conversation-sidebar\">\n        <div className=\"sidebar-header\">\n          <h3>💬 대화 목록</h3>\n          <button \n            className=\"btn btn-primary btn-sm\"\n            onClick={() => {\n              setCurrentConversationId(null);\n              setMessages([]);\n            }}\n            title=\"새 대화 시작\"\n          >\n            ➕ 새 대화\n          </button>\n        </div>\n        \n        <div className=\"conversation-list-container\">\n          {conversations.length === 0 ? (\n            <div className=\"no-conversations\">\n              <p>아직 대화가 없습니다.</p>\n              <p>새 대화를 시작해보세요!</p>\n            </div>\n          ) : (\n            <ul className=\"conversation-list list-group\">\n              {conversations.map(conv => (\n                <li \n                  key={conv.id} \n                  className={`conversation-item ${currentConversationId === conv.id ? 'active' : ''}`}\n                  onClick={() => handleSelectConversation(conv.id)}\n                >\n                  <div className=\"conversation-content\">\n                    <div className=\"conversation-title\">\n                      {conv.title || '제목 없음'}\n                    </div>\n                    <div className=\"conversation-meta\">\n                      <small>{new Date(conv.updated_at).toLocaleString()}</small>\n                    </div>\n                  </div>\n                  <button \n                    className=\"btn btn-sm btn-outline-danger delete-btn\"\n                    onClick={(e) => { \n                      e.stopPropagation(); \n                      handleDeleteConversation(conv.id); \n                    }}\n                    title=\"대화 삭제\"\n                  >\n                    🗑️\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n\n      <div className=\"chat-container\">\n        {/* 채팅 헤더 */}\n        <div className=\"chat-header\">\n          <div className=\"header-left\">\n            <div className=\"db-selector\">\n              <label htmlFor=\"db-select\" className=\"prompt-label\">DB 선택</label>\n              <select \n                id=\"db-select\" \n                value={selectedDb || ''} \n                onChange={(e) => onDbChange(e.target.value)}\n              >\n                <option value=\"\">DB를 선택하세요</option>\n                <option value=\"__ALL_DBS__\">모든 DB</option>\n                {databases?.map(db => (\n                  <option key={db.name} value={db.name}>\n                    {db.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            {/* AI 모델 선택 드롭다운 */}\n            <div className=\"ai-model-selector ms-3\">\n              <label htmlFor=\"ai-model-select\" className=\"prompt-label\">AI 모델 선택</label>\n              <select \n                id=\"ai-model-select\" \n                value={selectedAiModel} \n                onChange={async (e) => {\n                  const modelName = e.target.value;\n                  const selected = aiModels.find(m => m.name === modelName);\n                  if (selected) {\n                    let selectApiEndpoint = '';\n                    if (selected.type === 'openai') selectApiEndpoint = '/api/openai/select';\n                    else if (selected.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';\n                    else if (selected.type === 'gemini') selectApiEndpoint = '/api/gemini/select';\n                    else if (selected.type === 'claude') selectApiEndpoint = '/api/claude/select';\n\n                    if (selectApiEndpoint) {\n                      try {\n                        const formData = new FormData();\n                        formData.append('name', selected.name);\n                        await axios.post(selectApiEndpoint, formData);\n                        setSelectedAiModel(selected.name);\n                        alert(`${selected.name} AI 모델이 선택되었습니다.`);\n                      } catch (error) {\n                        console.error('Error selecting AI model:', error);\n                        alert('AI 모델 선택에 실패했습니다.');\n                      }\n                    }\n                  }\n                }}\n              >\n                <option value=\"\">AI 모델 선택</option>\n                {aiModels.map(model => (\n                  <option key={model.name} value={model.name}>\n                    {model.name} ({model.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n\n          </div>\n          \n          <div className=\"header-actions\">\n            {currentConversationId && (\n              <button \n                onClick={handleResetChat} \n                className=\"btn btn-outline-warning btn-sm\"\n                title=\"현재 대화 초기화\"\n              >\n                🔄 초기화\n              </button>\n            )}\n            <button \n              onClick={() => {\n                setCurrentConversationId(null);\n                setMessages([]);\n              }}\n              className=\"btn btn-outline-primary btn-sm ms-2\"\n              title=\"새 대화 시작\"\n            >\n              ➕ 새 대화\n            </button>\n          </div>\n        </div>\n\n        {/* 채팅 메시지 영역 */}\n        <div className=\"chat-messages\" id=\"chat-messages\">\n          <div className=\"chat-box\">\n            {/* 추천 질문 카드들 (첫 대화 전만 표시) */}\n            {messages.length === 0 && !currentConversationId && (\n              <div className=\"suggest-section\">\n                <h3>💡 추천 질문</h3>\n                <div className=\"suggest-cards\">\n                  {suggestedQuestions.map((category, categoryIndex) => (\n                    <div key={categoryIndex} className=\"suggest-category\">\n                      <h4>{category.title}</h4>\n                      <div className=\"suggest-cards-grid\">\n                        {category.questions.map((question, questionIndex) => (\n                          <div \n                            key={questionIndex}\n                            className=\"suggest-card\" \n                            onClick={() => handleSuggestedQuestion(question)}\n                          >\n                            {question}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* 메시지들 */}\n            {messages.map((msg, idx) => (\n              <div key={idx} className={`message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`}>\n                <div className=\"message-content\">\n                  <div className=\"message-header\">\n                    <span className=\"message-role\">\n                      {msg.role === 'user' ? '👤 사용자' : '🤖 AI'}\n                    </span>\n                    <span className=\"message-time\">{msg.timestamp}</span>\n                  </div>\n                  \n                  <div className=\"message-body\">\n                    {msg.role === 'user' ? (\n                      <div className=\"user-message\">{msg.content}</div>\n                    ) : (\n                      <div className=\"ai-message-card\">\n                        {msg.content && (\n                          <div className=\"ai-response-section\">\n                            <ReactMarkdown>{msg.content}</ReactMarkdown>\n                          </div>\n                        )}\n                        {msg.sql && (\n                          <div className=\"sql-section\">\n                            <div className=\"section-header\">\n                              <strong>🔍 생성된 SQL</strong>\n                              <button onClick={() => navigator.clipboard.writeText(msg.sql)} className=\"btn-copy\">복사</button>\n                            </div>\n                            <pre><code>{msg.sql}</code></pre>\n                          </div>\n                        )}\n                        {msg.result && (\n                          <div className=\"result-section\">\n                            <div className=\"section-header\">\n                              <strong>📊 쿼리 결과</strong>\n                            </div>\n                            <div className=\"result-table-container\" style={{ maxWidth: '100%', overflowX: 'auto', minWidth: 600 }}>\n                              {Array.isArray(msg.result) && msg.result.length > 0 && typeof msg.result[0] === 'object' ? (\n                                <table className=\"result-table\" style={{ minWidth: 600, fontSize: '1.05em' }}>\n                                  <thead>\n                                    <tr>\n                                      {Object.keys(msg.result[0] || {}).map((key, i) => (\n                                        <th key={i} style={{ padding: '8px 12px', background: '#f5f5f5', border: '1px solid #ddd' }}>{key}</th>\n                                      ))}\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {msg.result.map((row, i) => (\n                                      <tr key={i}>\n                                        {Object.values(row).map((value, j) => (\n                                          <td key={j} style={{ padding: '8px 12px', border: '1px solid #eee', background: i % 2 === 0 ? '#fff' : '#fafbfc' }}>{String(value)}</td>\n                                        ))}\n                                      </tr>\n                                    ))}\n                                  </tbody>\n                                </table>\n                              ) : (\n                                <div className=\"no-result\">\n                                  <p>결과가 없습니다.</p>\n                                  <pre><code>{JSON.stringify(msg.result, null, 2)}</code></pre>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                        {msg.error && (\n                          <div className=\"error-section\">\n                            <div className=\"alert alert-danger\">\n                              <strong>❌ 오류 발생</strong>\n                              <p>{msg.content}</p>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            {/* 로딩 인디케이터 */}\n            {loading && (\n              <div className=\"message message-ai\">\n                <div className=\"message-content\">\n                  <div className=\"message-header\">\n                    <span className=\"message-role\">🤖 AI</span>\n                    <span className=\"message-time\">처리 중...</span>\n                  </div>\n                  <div className=\"message-body\">\n                    <div className=\"loading-indicator\">\n                      <div className=\"spinner\"></div>\n                      <span>AI가 응답을 생성하고 있습니다...</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div ref={messagesEndRef} />\n          </div>\n        </div>\n\n        {/* 입력 영역 */}\n        <div className=\"chat-input-area\">\n          <div className=\"input-container\">\n            <textarea\n              ref={textareaRef}\n              value={input}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              placeholder=\"질문을 입력하세요... (Shift+Enter로 줄바꿈)\"\n              className=\"chat-input\"\n              rows={textareaRows}\n              disabled={loading || !selectedDb}\n            />\n            <button\n              onClick={handleSend}\n              disabled={loading || !input.trim() || !selectedDb}\n              className=\"send-button\"\n            >\n              {loading ? '⏳' : '📤'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent;\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,aAAa,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,aAAaA,CAAC;EAAEC,UAAU;EAAEC,SAAS;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMoB,cAAc,GAAGlB,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMmB,WAAW,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAAC8B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1E;EACA,MAAMgC,kBAAkB,GAAG,CACzB;IACEC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,CACT,oBAAoB,EACpB,iBAAiB,EACjB,oBAAoB;EAExB,CAAC,EACD;IACED,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,CACT,oBAAoB,EACpB,oBAAoB,EACpB,mBAAmB;EAEvB,CAAC,EACD;IACED,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,CACT,cAAc,EACd,oBAAoB,EACpB,iBAAiB;EAErB,CAAC,CACF;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAhB,cAAc,CAACiB,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDtC,SAAS,CAAC,MAAM;IACdkC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC;;EAEd;EACAX,SAAS,CAAC,MAAM;IACd,MAAMuC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAIhC,UAAU,EAAE;QACd,IAAI;UACF,MAAMiC,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,8BAA8BlC,UAAU,EAAE,CAAC;UAC5E,IAAIiC,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;YACtC,MAAMhB,aAAa,GAAGa,QAAQ,CAACE,IAAI,CAACf,aAAa;YACjDC,gBAAgB,CAACD,aAAa,CAAC;YAC/B,IAAIA,aAAa,CAACiB,MAAM,GAAG,CAAC,EAAE;cAC5B;cACAd,wBAAwB,CAACH,aAAa,CAAC,CAAC,CAAC,CAACkB,EAAE,CAAC;YAC/C,CAAC,MAAM;cACL;cACAf,wBAAwB,CAAC,IAAI,CAAC;cAC9BlB,WAAW,CAAC,EAAE,CAAC;YACjB;UACF;QACF,CAAC,CAAC,OAAOkC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;UAC5ClB,gBAAgB,CAAC,EAAE,CAAC;QACtB;MACF,CAAC,MAAM;QACLA,gBAAgB,CAAC,EAAE,CAAC;QACpBE,wBAAwB,CAAC,IAAI,CAAC;QAC9BlB,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC;IAED2B,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAAChC,UAAU,CAAC,CAAC;;EAEhB;EACAP,SAAS,CAAC,MAAM;IACd,MAAMgD,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAIzC,UAAU,IAAIA,UAAU,KAAK,aAAa,EAAE;QAC9C,IAAI;UACF,MAAMiC,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,eAAelC,UAAU,EAAE,CAAC;UAC7D,IAAIiC,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;YACtCjB,WAAW,CAACc,QAAQ,CAACE,IAAI,CAACO,MAAM,CAAC;YACjCF,OAAO,CAACG,GAAG,CAAC,kBAAkB,EAAEV,QAAQ,CAACE,IAAI,CAACO,MAAM,CAAC;UACvD;QACF,CAAC,CAAC,OAAOH,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAChDpB,WAAW,CAAC,IAAI,CAAC;QACnB;MACF,CAAC,MAAM;QACLA,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC;IAEDsB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACzC,UAAU,CAAC,CAAC;;EAEhB;EACAP,SAAS,CAAC,MAAM;IACd,MAAMmD,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAItB,qBAAqB,EAAE;QACzB,IAAI;UACF,MAAMW,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,sBAAsBZ,qBAAqB,WAAW,CAAC;UACxF,IAAIW,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;YACtC;YACA,MAAMS,iBAAiB,GAAGZ,QAAQ,CAACE,IAAI,CAAC/B,QAAQ,CAAC0C,GAAG,CAACC,GAAG,KAAK;cAC3DC,IAAI,EAAED,GAAG,CAACC,IAAI;cACdC,OAAO,EAAEF,GAAG,CAACE,OAAO;cACpBC,GAAG,EAAEH,GAAG,CAACI,SAAS;cAClBC,MAAM,EAAEL,GAAG,CAACM,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACR,GAAG,CAACM,UAAU,CAAC,GAAG,IAAI;cAC1DG,SAAS,EAAE,IAAIC,IAAI,CAACV,GAAG,CAACS,SAAS,CAAC,CAACE,kBAAkB,CAAC;YACxD,CAAC,CAAC,CAAC;YACHrD,WAAW,CAACwC,iBAAiB,CAAC;UAChC;QACF,CAAC,CAAC,OAAON,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC1ClC,WAAW,CAAC,EAAE,CAAC;QACjB;MACF,CAAC,MAAM;QACLA,WAAW,CAAC,EAAE,CAAC;MACjB;IACF,CAAC;IACDuC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACtB,qBAAqB,CAAC,CAAC;;EAE3B;EACA7B,SAAS,CAAC,MAAM;IACd,MAAMkE,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMjE,KAAK,CAACuC,GAAG,CAAC,kBAAkB,CAAC;QACrD,MAAM2B,cAAc,GAAG,MAAMlE,KAAK,CAACuC,GAAG,CAAC,2BAA2B,CAAC;QACnE,MAAM4B,SAAS,GAAG,MAAMnE,KAAK,CAACuC,GAAG,CAAC,qBAAqB,CAAC;QACxD,MAAM6B,SAAS,GAAG,MAAMpE,KAAK,CAACuC,GAAG,CAAC,qBAAqB,CAAC;QAExD,MAAM8B,SAAS,GAAG,CAChB,GAAGJ,SAAS,CAACzB,IAAI,CAAC8B,IAAI,CAACnB,GAAG,CAACoB,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEC,IAAI,EAAE;QAAS,CAAC,CAAC,CAAC,EAC3D,GAAGN,cAAc,CAAC1B,IAAI,CAACiC,OAAO,CAACtB,GAAG,CAACuB,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEF,IAAI,EAAE;QAAe,CAAC,CAAC,CAAC,EACzE,GAAGL,SAAS,CAAC3B,IAAI,CAACiC,OAAO,CAACtB,GAAG,CAACuB,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEF,IAAI,EAAE;QAAS,CAAC,CAAC,CAAC,EAC9D,GAAGJ,SAAS,CAAC5B,IAAI,CAACiC,OAAO,CAACtB,GAAG,CAACuB,CAAC,KAAK;UAAE,GAAGA,CAAC;UAAEF,IAAI,EAAE;QAAS,CAAC,CAAC,CAAC,CAC/D;QACDpD,WAAW,CAACiD,SAAS,CAAC;QAEtB,MAAMM,eAAe,GAAGN,SAAS,CAACO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW,CAAC;QAC1D,IAAIH,eAAe,EAAE;UACnBrD,kBAAkB,CAACqD,eAAe,CAACI,IAAI,CAAC;QAC1C,CAAC,MAAM,IAAIV,SAAS,CAAC3B,MAAM,GAAG,CAAC,EAAE;UAC/B,MAAMsC,YAAY,GAAGX,SAAS,CAAC,CAAC,CAAC;UACjC,IAAIY,iBAAiB,GAAG,EAAE;UAC1B,IAAID,YAAY,CAACR,IAAI,KAAK,QAAQ,EAAES,iBAAiB,GAAG,oBAAoB,CAAC,KACxE,IAAID,YAAY,CAACR,IAAI,KAAK,cAAc,EAAES,iBAAiB,GAAG,0BAA0B,CAAC,KACzF,IAAID,YAAY,CAACR,IAAI,KAAK,QAAQ,EAAES,iBAAiB,GAAG,oBAAoB,CAAC,KAC7E,IAAID,YAAY,CAACR,IAAI,KAAK,QAAQ,EAAES,iBAAiB,GAAG,oBAAoB;UAEjF,IAAIA,iBAAiB,EAAE;YACrB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;YAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,YAAY,CAACD,IAAI,CAAC;YAC1C/E,KAAK,CAACqF,IAAI,CAACJ,iBAAiB,EAAEC,QAAQ,CAAC,CACpCI,IAAI,CAAC,MAAM;cACVhE,kBAAkB,CAAC0D,YAAY,CAACD,IAAI,CAAC;cACrClC,OAAO,CAACG,GAAG,CAAC,8BAA8BgC,YAAY,CAACD,IAAI,EAAE,CAAC;YAChE,CAAC,CAAC,CACDQ,KAAK,CAAC3C,KAAK,IAAI;cACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;YAC3D,CAAC,CAAC;UACN;QACF;MAEF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDoB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMwB,kBAAkB,GAAIC,EAAE,IAAK;IACjCA,EAAE,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;IACxB,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACL,EAAE,CAACM,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;IAClDN,EAAE,CAACC,KAAK,CAACC,MAAM,GAAGC,SAAS,GAAG,IAAI;IAClC5E,eAAe,CAAC6E,IAAI,CAACG,IAAI,CAACJ,SAAS,GAAG,EAAE,CAAC,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMK,uBAAuB,GAAIC,QAAQ,IAAK;IAAA,IAAAC,oBAAA;IAC5CvF,QAAQ,CAACsF,QAAQ,CAAC;IAClB,CAAAC,oBAAA,GAAAjF,WAAW,CAACgB,OAAO,cAAAiE,oBAAA,uBAAnBA,oBAAA,CAAqBC,KAAK,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAItD,MAAM,IAAK;IACvC,IAAIuD,MAAM,GAAG,EAAE;;IAEf;IACAA,MAAM,IAAI,WAAWvD,MAAM,CAACwD,MAAM,CAAC7D,MAAM,mBAAmB;IAE5DK,MAAM,CAACwD,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;MAC7BH,MAAM,IAAI,QAAQG,KAAK,CAAC1B,IAAI,EAAE;MAC9B,IAAI0B,KAAK,CAACC,OAAO,EAAE;QACjBJ,MAAM,IAAI,KAAKG,KAAK,CAACC,OAAO,GAAG;MACjC;MACAJ,MAAM,IAAI,IAAI;;MAEd;MACAA,MAAM,IAAI,SAAS;MACnBG,KAAK,CAACE,OAAO,CAACH,OAAO,CAACI,MAAM,IAAI;QAC9BN,MAAM,IAAI,SAASM,MAAM,CAAC7B,IAAI,KAAK6B,MAAM,CAACpC,IAAI,EAAE;QAChD,IAAIoC,MAAM,CAACC,UAAU,EAAE;UACrBP,MAAM,IAAI,IAAIM,MAAM,CAACC,UAAU,GAAG;QACpC;QACA,IAAID,MAAM,CAACE,SAAS,IAAIF,MAAM,CAACG,KAAK,EAAE;UACpCT,MAAM,IAAI,IAAIM,MAAM,CAACE,SAAS,IAAIF,MAAM,CAACG,KAAK,GAAG;QACnD;QACA,IAAI,CAACH,MAAM,CAACI,QAAQ,EAAE;UACpBV,MAAM,IAAI,aAAa;QACzB;QACA,IAAIM,MAAM,CAACK,OAAO,EAAE;UAClBX,MAAM,IAAI,UAAUM,MAAM,CAACK,OAAO,GAAG;QACvC;QACA,IAAIL,MAAM,CAACF,OAAO,EAAE;UAClBJ,MAAM,IAAI,MAAMM,MAAM,CAACF,OAAO,EAAE;QAClC;QACAJ,MAAM,IAAI,IAAI;MAChB,CAAC,CAAC;;MAEF;MACA,IAAIG,KAAK,CAACS,OAAO,IAAIT,KAAK,CAACS,OAAO,CAACxE,MAAM,GAAG,CAAC,EAAE;QAC7C4D,MAAM,IAAI,UAAU;QACpBG,KAAK,CAACS,OAAO,CAACV,OAAO,CAACW,KAAK,IAAI;UAC7Bb,MAAM,IAAI,SAASa,KAAK,CAACpC,IAAI,MAAMoC,KAAK,CAACR,OAAO,CAACS,IAAI,CAAC,IAAI,CAAC,GAAG;UAC9D,IAAID,KAAK,CAACE,MAAM,EAAE;YAChBf,MAAM,IAAI,WAAW;UACvB;UACA,IAAIa,KAAK,CAACG,OAAO,EAAE;YACjBhB,MAAM,IAAI,gBAAgB;UAC5B;UACAA,MAAM,IAAI,IAAI;QAChB,CAAC,CAAC;MACJ;MACAA,MAAM,IAAI,IAAI;IAChB,CAAC,CAAC;;IAEF;IACA,IAAIvD,MAAM,CAACwE,aAAa,IAAIxE,MAAM,CAACwE,aAAa,CAAC7E,MAAM,GAAG,CAAC,EAAE;MAC3D4D,MAAM,IAAI,WAAW;MACrBvD,MAAM,CAACwE,aAAa,CAACf,OAAO,CAACgB,GAAG,IAAI;QAClClB,MAAM,IAAI,KAAKkB,GAAG,CAACf,KAAK,IAAIe,GAAG,CAACZ,MAAM,OAAOY,GAAG,CAACC,aAAa,IAAID,GAAG,CAACE,cAAc,IAAI;MAC1F,CAAC,CAAC;MACFpB,MAAM,IAAI,IAAI;IAChB;IAEA,OAAOA,MAAM;EACf,CAAC;;EAED;EACA,MAAMqB,wBAAwB,GAAIC,MAAM,IAAK;IAC3ChG,wBAAwB,CAACgG,MAAM,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,wBAAwB,GAAG,MAAOD,MAAM,IAAK;IACjD,IAAIE,MAAM,CAACC,OAAO,CAAC,0CAA0C,CAAC,EAAE;MAC9D,IAAI;QACF,MAAM/H,KAAK,CAACgI,MAAM,CAAC,sBAAsBJ,MAAM,EAAE,CAAC;QAClD;QACA,MAAMK,OAAO,GAAG,MAAMjI,KAAK,CAACuC,GAAG,CAAC,8BAA8BlC,UAAU,EAAE,CAAC;QAC3E,IAAI4H,OAAO,CAACzF,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;UACrCf,gBAAgB,CAACuG,OAAO,CAACzF,IAAI,CAACf,aAAa,CAAC;QAC9C;QACA,IAAIE,qBAAqB,KAAKiG,MAAM,EAAE;UACpChG,wBAAwB,CAAC,IAAI,CAAC;UAC9BlB,WAAW,CAAC,EAAE,CAAC;QACjB;MACF,CAAC,CAAC,OAAOkC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCsF,KAAK,CAAC,gBAAgB,CAAC;MACzB;IACF;EACF,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACxH,KAAK,CAACyH,IAAI,CAAC,CAAC,IAAI,CAAC/H,UAAU,EAAE;IAElC,IAAI,CAACgB,eAAe,EAAE;MACpB6G,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,IAAIG,cAAc,GAAG1G,qBAAqB;;IAE1C;IACA,IAAI,CAAC0G,cAAc,EAAE;MACnB,IAAI;QACF,MAAMC,eAAe,GAAG,MAAMtI,KAAK,CAACqF,IAAI,CAAC,wBAAwB,EAAE,IAAIkD,eAAe,CAAC;UACrFC,OAAO,EAAEnI,UAAU;UACnByB,KAAK,EAAEnB,KAAK,CAAC8H,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAIH,eAAe,CAAC9F,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;UAC7C4F,cAAc,GAAGC,eAAe,CAAC9F,IAAI,CAACkG,eAAe;UACrD9G,wBAAwB,CAACyG,cAAc,CAAC;UACxC;UACA,MAAMJ,OAAO,GAAG,MAAMjI,KAAK,CAACuC,GAAG,CAAC,8BAA8BlC,UAAU,EAAE,CAAC;UAC3E,IAAI4H,OAAO,CAACzF,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;YACrCf,gBAAgB,CAACuG,OAAO,CAACzF,IAAI,CAACf,aAAa,CAAC;UAC9C;QACF,CAAC,MAAM;UACL,MAAM,IAAIkH,KAAK,CAAC,mCAAmC,CAAC;QACtD;MACF,CAAC,CAAC,OAAO/F,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnCsF,KAAK,CAAC,qBAAqB,CAAC;QAC5B;MACF;IACF;IAEA,MAAMU,WAAW,GAAG;MAClBvF,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE3C,KAAK;MACdkD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;IAC3C,CAAC;IACDrD,WAAW,CAACmI,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;IAC3C9H,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,EAAE,CAAC;IACZI,eAAe,CAAC,CAAC,CAAC;IAClB,IAAIE,WAAW,CAACgB,OAAO,EAAE;MACvBhB,WAAW,CAACgB,OAAO,CAACwD,KAAK,CAACC,MAAM,GAAG,MAAM;IAC3C;IAEA,IAAI;MACF,MAAMT,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE/E,UAAU,CAAC;;MAEtC;MACA,IAAIyI,cAAc,GAAGnI,KAAK;MAC1B,IAAIY,QAAQ,IAAIA,QAAQ,CAACgF,MAAM,IAAIhF,QAAQ,CAACgF,MAAM,CAAC7D,MAAM,GAAG,CAAC,EAAE;QAC7D,MAAMqG,UAAU,GAAG1C,oBAAoB,CAAC9E,QAAQ,CAAC;QACjDuH,cAAc,GAAG,oBAAoBC,UAAU,iBAAiBpI,KAAK,EAAE;MACzE;MAEAuE,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE0D,cAAc,CAAC;MACzC5D,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEiD,cAAc,CAAC,CAAC,CAAC;;MAEpD,MAAM/F,QAAQ,GAAG,MAAMtC,KAAK,CAACqF,IAAI,CAAC,aAAa,EAAEH,QAAQ,CAAC;MAE1D,IAAI5C,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACtC,MAAMD,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACwG,OAAO;QAClC,MAAMC,gBAAgB,GAAG;UACvB5F,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAEd,IAAI,CAACc,OAAO,IAAI,EAAE;UAC3BC,GAAG,EAAEf,IAAI,CAACe,GAAG,IAAI,EAAE;UACnBE,MAAM,EAAEjB,IAAI,CAACiB,MAAM,IAAI,IAAI;UAC3BI,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC3C,CAAC;QACDrD,WAAW,CAACmI,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEI,gBAAgB,CAAC,CAAC;MAClD,CAAC,MAAM;QACL,MAAMC,YAAY,GAAG;UACnB7F,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAEhB,QAAQ,CAACE,IAAI,CAACI,KAAK,IAAI,cAAc;UAC9CA,KAAK,EAAE,IAAI;UACXiB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC3C,CAAC;QACDrD,WAAW,CAACmI,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEK,YAAY,CAAC,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOtG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,MAAMsG,YAAY,GAAG;QACnB7F,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE,4BAA4B;QACrCV,KAAK,EAAE,IAAI;QACXiB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAC3C,CAAC;MACDrD,WAAW,CAACmI,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEK,YAAY,CAAC,CAAC;IAC9C,CAAC,SAAS;MACRpI,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMqI,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI,CAACD,CAAC,CAACE,QAAQ,EAAE;MACpCF,CAAC,CAACG,cAAc,CAAC,CAAC;MAClBpB,UAAU,CAAC,CAAC;IACd;EACF,CAAC;;EAED;EACA,MAAMqB,iBAAiB,GAAIJ,CAAC,IAAK;IAC/BxI,QAAQ,CAACwI,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;IACxBlE,kBAAkB,CAAC4D,CAAC,CAACK,MAAM,CAAC;EAC9B,CAAC;;EAED;EACA,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAChI,qBAAqB,EAAE;IAE5B,IAAImG,MAAM,CAACC,OAAO,CAAC,2BAA2B,CAAC,EAAE;MAC/C,IAAI;QACF,MAAM7C,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEzD,qBAAqB,CAAC;QACzD,MAAMW,QAAQ,GAAG,MAAMtC,KAAK,CAACqF,IAAI,CAAC,mBAAmB,EAAEH,QAAQ,CAAC;QAEhE,IAAI5C,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;UACtC/B,WAAW,CAAC,EAAE,CAAC;UACf;UACA,MAAMuH,OAAO,GAAG,MAAMjI,KAAK,CAACuC,GAAG,CAAC,8BAA8BlC,UAAU,EAAE,CAAC;UAC3E,IAAI4H,OAAO,CAACzF,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;YACrCf,gBAAgB,CAACuG,OAAO,CAACzF,IAAI,CAACf,aAAa,CAAC;UAC9C;QACF;MACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QAClCsF,KAAK,CAAC,iBAAiB,CAAC;MAC1B;IACF;EACF,CAAC;EAED,oBACE/H,OAAA;IAAKyJ,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAElC1J,OAAA;MAAKyJ,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnC1J,OAAA;QAAKyJ,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B1J,OAAA;UAAA0J,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjB9J,OAAA;UACEyJ,SAAS,EAAC,wBAAwB;UAClCM,OAAO,EAAEA,CAAA,KAAM;YACbtI,wBAAwB,CAAC,IAAI,CAAC;YAC9BlB,WAAW,CAAC,EAAE,CAAC;UACjB,CAAE;UACFoB,KAAK,EAAC,kCAAS;UAAA+H,QAAA,EAChB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN9J,OAAA;QAAKyJ,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EACzCpI,aAAa,CAACiB,MAAM,KAAK,CAAC,gBACzBvC,OAAA;UAAKyJ,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B1J,OAAA;YAAA0J,QAAA,EAAG;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnB9J,OAAA;YAAA0J,QAAA,EAAG;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,gBAEN9J,OAAA;UAAIyJ,SAAS,EAAC,8BAA8B;UAAAC,QAAA,EACzCpI,aAAa,CAAC0B,GAAG,CAACgH,IAAI,iBACrBhK,OAAA;YAEEyJ,SAAS,EAAE,qBAAqBjI,qBAAqB,KAAKwI,IAAI,CAACxH,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;YACpFuH,OAAO,EAAEA,CAAA,KAAMvC,wBAAwB,CAACwC,IAAI,CAACxH,EAAE,CAAE;YAAAkH,QAAA,gBAEjD1J,OAAA;cAAKyJ,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnC1J,OAAA;gBAAKyJ,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAChCM,IAAI,CAACrI,KAAK,IAAI;cAAO;gBAAAgI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnB,CAAC,eACN9J,OAAA;gBAAKyJ,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,eAChC1J,OAAA;kBAAA0J,QAAA,EAAQ,IAAI/F,IAAI,CAACqG,IAAI,CAACC,UAAU,CAAC,CAACC,cAAc,CAAC;gBAAC;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACN9J,OAAA;cACEyJ,SAAS,EAAC,0CAA0C;cACpDM,OAAO,EAAGd,CAAC,IAAK;gBACdA,CAAC,CAACkB,eAAe,CAAC,CAAC;gBACnBzC,wBAAwB,CAACsC,IAAI,CAACxH,EAAE,CAAC;cACnC,CAAE;cACFb,KAAK,EAAC,2BAAO;cAAA+H,QAAA,EACd;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GArBJE,IAAI,CAACxH,EAAE;YAAAmH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN9J,OAAA;MAAKyJ,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAE7B1J,OAAA;QAAKyJ,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B1J,OAAA;UAAKyJ,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1J,OAAA;YAAKyJ,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1B1J,OAAA;cAAOoK,OAAO,EAAC,WAAW;cAACX,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjE9J,OAAA;cACEwC,EAAE,EAAC,WAAW;cACd+G,KAAK,EAAErJ,UAAU,IAAI,EAAG;cACxBmK,QAAQ,EAAGpB,CAAC,IAAK7I,UAAU,CAAC6I,CAAC,CAACK,MAAM,CAACC,KAAK,CAAE;cAAAG,QAAA,gBAE5C1J,OAAA;gBAAQuJ,KAAK,EAAC,EAAE;gBAAAG,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnC9J,OAAA;gBAAQuJ,KAAK,EAAC,aAAa;gBAAAG,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACzC3J,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE6C,GAAG,CAACsH,EAAE,iBAChBtK,OAAA;gBAAsBuJ,KAAK,EAAEe,EAAE,CAAC1F,IAAK;gBAAA8E,QAAA,EAClCY,EAAE,CAAC1F;cAAI,GADG0F,EAAE,CAAC1F,IAAI;gBAAA+E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEZ,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAGN9J,OAAA;YAAKyJ,SAAS,EAAC,wBAAwB;YAAAC,QAAA,gBACrC1J,OAAA;cAAOoK,OAAO,EAAC,iBAAiB;cAACX,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1E9J,OAAA;cACEwC,EAAE,EAAC,iBAAiB;cACpB+G,KAAK,EAAErI,eAAgB;cACvBmJ,QAAQ,EAAE,MAAOpB,CAAC,IAAK;gBACrB,MAAMsB,SAAS,GAAGtB,CAAC,CAACK,MAAM,CAACC,KAAK;gBAChC,MAAMiB,QAAQ,GAAGxJ,QAAQ,CAACyD,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,IAAI,KAAK2F,SAAS,CAAC;gBACzD,IAAIC,QAAQ,EAAE;kBACZ,IAAI1F,iBAAiB,GAAG,EAAE;kBAC1B,IAAI0F,QAAQ,CAACnG,IAAI,KAAK,QAAQ,EAAES,iBAAiB,GAAG,oBAAoB,CAAC,KACpE,IAAI0F,QAAQ,CAACnG,IAAI,KAAK,cAAc,EAAES,iBAAiB,GAAG,0BAA0B,CAAC,KACrF,IAAI0F,QAAQ,CAACnG,IAAI,KAAK,QAAQ,EAAES,iBAAiB,GAAG,oBAAoB,CAAC,KACzE,IAAI0F,QAAQ,CAACnG,IAAI,KAAK,QAAQ,EAAES,iBAAiB,GAAG,oBAAoB;kBAE7E,IAAIA,iBAAiB,EAAE;oBACrB,IAAI;sBACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;sBAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEuF,QAAQ,CAAC5F,IAAI,CAAC;sBACtC,MAAM/E,KAAK,CAACqF,IAAI,CAACJ,iBAAiB,EAAEC,QAAQ,CAAC;sBAC7C5D,kBAAkB,CAACqJ,QAAQ,CAAC5F,IAAI,CAAC;sBACjCmD,KAAK,CAAC,GAAGyC,QAAQ,CAAC5F,IAAI,kBAAkB,CAAC;oBAC3C,CAAC,CAAC,OAAOnC,KAAK,EAAE;sBACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;sBACjDsF,KAAK,CAAC,mBAAmB,CAAC;oBAC5B;kBACF;gBACF;cACF,CAAE;cAAA2B,QAAA,gBAEF1J,OAAA;gBAAQuJ,KAAK,EAAC,EAAE;gBAAAG,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACjC9I,QAAQ,CAACgC,GAAG,CAACyH,KAAK,iBACjBzK,OAAA;gBAAyBuJ,KAAK,EAAEkB,KAAK,CAAC7F,IAAK;gBAAA8E,QAAA,GACxCe,KAAK,CAAC7F,IAAI,EAAC,IAAE,EAAC6F,KAAK,CAACpG,IAAI,EAAC,GAC5B;cAAA,GAFaoG,KAAK,CAAC7F,IAAI;gBAAA+E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEf,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEH,CAAC,eAEN9J,OAAA;UAAKyJ,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAC5BlI,qBAAqB,iBACpBxB,OAAA;YACE+J,OAAO,EAAEP,eAAgB;YACzBC,SAAS,EAAC,gCAAgC;YAC1C9H,KAAK,EAAC,8CAAW;YAAA+H,QAAA,EAClB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,eACD9J,OAAA;YACE+J,OAAO,EAAEA,CAAA,KAAM;cACbtI,wBAAwB,CAAC,IAAI,CAAC;cAC9BlB,WAAW,CAAC,EAAE,CAAC;YACjB,CAAE;YACFkJ,SAAS,EAAC,qCAAqC;YAC/C9H,KAAK,EAAC,kCAAS;YAAA+H,QAAA,EAChB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN9J,OAAA;QAAKyJ,SAAS,EAAC,eAAe;QAACjH,EAAE,EAAC,eAAe;QAAAkH,QAAA,eAC/C1J,OAAA;UAAKyJ,SAAS,EAAC,UAAU;UAAAC,QAAA,GAEtBpJ,QAAQ,CAACiC,MAAM,KAAK,CAAC,IAAI,CAACf,qBAAqB,iBAC9CxB,OAAA;YAAKyJ,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9B1J,OAAA;cAAA0J,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjB9J,OAAA;cAAKyJ,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC3BhI,kBAAkB,CAACsB,GAAG,CAAC,CAAC0H,QAAQ,EAAEC,aAAa,kBAC9C3K,OAAA;gBAAyByJ,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBACnD1J,OAAA;kBAAA0J,QAAA,EAAKgB,QAAQ,CAAC/I;gBAAK;kBAAAgI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACzB9J,OAAA;kBAAKyJ,SAAS,EAAC,oBAAoB;kBAAAC,QAAA,EAChCgB,QAAQ,CAAC9I,SAAS,CAACoB,GAAG,CAAC,CAAC+C,QAAQ,EAAE6E,aAAa,kBAC9C5K,OAAA;oBAEEyJ,SAAS,EAAC,cAAc;oBACxBM,OAAO,EAAEA,CAAA,KAAMjE,uBAAuB,CAACC,QAAQ,CAAE;oBAAA2D,QAAA,EAEhD3D;kBAAQ,GAJJ6E,aAAa;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAKf,CACN;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,GAZEa,aAAa;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAalB,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,EAGAxJ,QAAQ,CAAC0C,GAAG,CAAC,CAACC,GAAG,EAAE4H,GAAG,kBACrB7K,OAAA;YAAeyJ,SAAS,EAAE,WAAWxG,GAAG,CAACC,IAAI,KAAK,MAAM,GAAG,cAAc,GAAG,YAAY,EAAG;YAAAwG,QAAA,eACzF1J,OAAA;cAAKyJ,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B1J,OAAA;gBAAKyJ,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7B1J,OAAA;kBAAMyJ,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAC3BzG,GAAG,CAACC,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG;gBAAO;kBAAAyG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrC,CAAC,eACP9J,OAAA;kBAAMyJ,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAEzG,GAAG,CAACS;gBAAS;kBAAAiG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CAAC,eAEN9J,OAAA;gBAAKyJ,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAC1BzG,GAAG,CAACC,IAAI,KAAK,MAAM,gBAClBlD,OAAA;kBAAKyJ,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAEzG,GAAG,CAACE;gBAAO;kBAAAwG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,gBAEjD9J,OAAA;kBAAKyJ,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,GAC7BzG,GAAG,CAACE,OAAO,iBACVnD,OAAA;oBAAKyJ,SAAS,EAAC,qBAAqB;oBAAAC,QAAA,eAClC1J,OAAA,CAACF,aAAa;sBAAA4J,QAAA,EAAEzG,GAAG,CAACE;oBAAO;sBAAAwG,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAgB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzC,CACN,EACA7G,GAAG,CAACG,GAAG,iBACNpD,OAAA;oBAAKyJ,SAAS,EAAC,aAAa;oBAAAC,QAAA,gBAC1B1J,OAAA;sBAAKyJ,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,gBAC7B1J,OAAA;wBAAA0J,QAAA,EAAQ;sBAAU;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eAC3B9J,OAAA;wBAAQ+J,OAAO,EAAEA,CAAA,KAAMe,SAAS,CAACC,SAAS,CAACC,SAAS,CAAC/H,GAAG,CAACG,GAAG,CAAE;wBAACqG,SAAS,EAAC,UAAU;wBAAAC,QAAA,EAAC;sBAAE;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5F,CAAC,eACN9J,OAAA;sBAAA0J,QAAA,eAAK1J,OAAA;wBAAA0J,QAAA,EAAOzG,GAAG,CAACG;sBAAG;wBAAAuG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAO;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9B,CACN,EACA7G,GAAG,CAACK,MAAM,iBACTtD,OAAA;oBAAKyJ,SAAS,EAAC,gBAAgB;oBAAAC,QAAA,gBAC7B1J,OAAA;sBAAKyJ,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,eAC7B1J,OAAA;wBAAA0J,QAAA,EAAQ;sBAAQ;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACtB,CAAC,eACN9J,OAAA;sBAAKyJ,SAAS,EAAC,wBAAwB;sBAAClE,KAAK,EAAE;wBAAE0F,QAAQ,EAAE,MAAM;wBAAEC,SAAS,EAAE,MAAM;wBAAEC,QAAQ,EAAE;sBAAI,CAAE;sBAAAzB,QAAA,EACnG0B,KAAK,CAACC,OAAO,CAACpI,GAAG,CAACK,MAAM,CAAC,IAAIL,GAAG,CAACK,MAAM,CAACf,MAAM,GAAG,CAAC,IAAI,OAAOU,GAAG,CAACK,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,gBACtFtD,OAAA;wBAAOyJ,SAAS,EAAC,cAAc;wBAAClE,KAAK,EAAE;0BAAE4F,QAAQ,EAAE,GAAG;0BAAEG,QAAQ,EAAE;wBAAS,CAAE;wBAAA5B,QAAA,gBAC3E1J,OAAA;0BAAA0J,QAAA,eACE1J,OAAA;4BAAA0J,QAAA,EACG6B,MAAM,CAACpH,IAAI,CAAClB,GAAG,CAACK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAACN,GAAG,CAAC,CAACkG,GAAG,EAAEsC,CAAC,kBAC3CxL,OAAA;8BAAYuF,KAAK,EAAE;gCAAEkG,OAAO,EAAE,UAAU;gCAAEC,UAAU,EAAE,SAAS;gCAAEC,MAAM,EAAE;8BAAiB,CAAE;8BAAAjC,QAAA,EAAER;4BAAG,GAAxFsC,CAAC;8BAAA7B,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAA4F,CACvG;0BAAC;4BAAAH,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OACA;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACA,CAAC,eACR9J,OAAA;0BAAA0J,QAAA,EACGzG,GAAG,CAACK,MAAM,CAACN,GAAG,CAAC,CAAC4I,GAAG,EAAEJ,CAAC,kBACrBxL,OAAA;4BAAA0J,QAAA,EACG6B,MAAM,CAACM,MAAM,CAACD,GAAG,CAAC,CAAC5I,GAAG,CAAC,CAACuG,KAAK,EAAEuC,CAAC,kBAC/B9L,OAAA;8BAAYuF,KAAK,EAAE;gCAAEkG,OAAO,EAAE,UAAU;gCAAEE,MAAM,EAAE,gBAAgB;gCAAED,UAAU,EAAEF,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG;8BAAU,CAAE;8BAAA9B,QAAA,EAAEqC,MAAM,CAACxC,KAAK;4BAAC,GAAzHuC,CAAC;8BAAAnC,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OAA6H,CACxI;0BAAC,GAHK0B,CAAC;4BAAA7B,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAIN,CACL;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACG,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CAAC,gBAER9J,OAAA;wBAAKyJ,SAAS,EAAC,WAAW;wBAAAC,QAAA,gBACxB1J,OAAA;0BAAA0J,QAAA,EAAG;wBAAS;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAG,CAAC,eAChB9J,OAAA;0BAAA0J,QAAA,eAAK1J,OAAA;4BAAA0J,QAAA,EAAOlG,IAAI,CAACwI,SAAS,CAAC/I,GAAG,CAACK,MAAM,EAAE,IAAI,EAAE,CAAC;0BAAC;4BAAAqG,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAO;wBAAC;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAK,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC1D;oBACN;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACE,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CACN,EACA7G,GAAG,CAACR,KAAK,iBACRzC,OAAA;oBAAKyJ,SAAS,EAAC,eAAe;oBAAAC,QAAA,eAC5B1J,OAAA;sBAAKyJ,SAAS,EAAC,oBAAoB;sBAAAC,QAAA,gBACjC1J,OAAA;wBAAA0J,QAAA,EAAQ;sBAAO;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eACxB9J,OAAA;wBAAA0J,QAAA,EAAIzG,GAAG,CAACE;sBAAO;wBAAAwG,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CACN;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAzEEe,GAAG;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA0ER,CACN,CAAC,EAGDpJ,OAAO,iBACNV,OAAA;YAAKyJ,SAAS,EAAC,oBAAoB;YAAAC,QAAA,eACjC1J,OAAA;cAAKyJ,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B1J,OAAA;gBAAKyJ,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7B1J,OAAA;kBAAMyJ,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAK;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC3C9J,OAAA;kBAAMyJ,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,eACN9J,OAAA;gBAAKyJ,SAAS,EAAC,cAAc;gBAAAC,QAAA,eAC3B1J,OAAA;kBAAKyJ,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBAChC1J,OAAA;oBAAKyJ,SAAS,EAAC;kBAAS;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAC/B9J,OAAA;oBAAA0J,QAAA,EAAM;kBAAoB;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAED9J,OAAA;YAAKiM,GAAG,EAAEnL;UAAe;YAAA6I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN9J,OAAA;QAAKyJ,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9B1J,OAAA;UAAKyJ,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B1J,OAAA;YACEiM,GAAG,EAAElL,WAAY;YACjBwI,KAAK,EAAE/I,KAAM;YACb6J,QAAQ,EAAEhB,iBAAkB;YAC5B6C,SAAS,EAAElD,aAAc;YACzBmD,WAAW,EAAC,6FAAiC;YAC7C1C,SAAS,EAAC,YAAY;YACtB2C,IAAI,EAAExL,YAAa;YACnByL,QAAQ,EAAE3L,OAAO,IAAI,CAACR;UAAW;YAAAyJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACF9J,OAAA;YACE+J,OAAO,EAAE/B,UAAW;YACpBqE,QAAQ,EAAE3L,OAAO,IAAI,CAACF,KAAK,CAACyH,IAAI,CAAC,CAAC,IAAI,CAAC/H,UAAW;YAClDuJ,SAAS,EAAC,aAAa;YAAAC,QAAA,EAEtBhJ,OAAO,GAAG,GAAG,GAAG;UAAI;YAAAiJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzJ,EAAA,CAltBQJ,aAAa;AAAAqM,EAAA,GAAbrM,aAAa;AAotBtB,eAAeA,aAAa;AAAC,IAAAqM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}