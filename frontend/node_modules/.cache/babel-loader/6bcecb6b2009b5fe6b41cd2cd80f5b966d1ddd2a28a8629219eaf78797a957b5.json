{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AwsRdsResource=_ref=>{let{onDatabaseAdd}=_ref;const[instances,setInstances]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');useEffect(()=>{fetchRdsInstances();},[]);const fetchRdsInstances=async()=>{setLoading(true);setError('');try{const response=await fetch('/aws/rds-instances',{credentials:'include'});if(response.ok){const data=await response.json();setInstances(data.instances||[]);}else{setError('RDS 인스턴스 목록을 불러오지 못했습니다.');}}catch(e){setError('RDS 인스턴스 조회 중 오류가 발생했습니다.');}finally{setLoading(false);}};const handleRegisterDb=async instance=>{setSuccess('');setError('');try{// DB 관리에 등록 요청 (예시: /api/databases)\nconst formData=new FormData();formData.append('name',instance.DBInstanceIdentifier);formData.append('host',instance.Endpoint.Address);formData.append('port',instance.Endpoint.Port);formData.append('user','');formData.append('password','');formData.append('dbname',instance.DBName||'');const response=await fetch('/api/databases',{method:'POST',body:formData,credentials:'include'});if(response.ok){setSuccess('DB로 등록되었습니다!');if(onDatabaseAdd)onDatabaseAdd();}else{setError('DB 등록에 실패했습니다.');}}catch(e){setError('DB 등록 중 오류가 발생했습니다.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"aws-rds-resource\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"RDS \\uC778\\uC2A4\\uD134\\uC2A4 \\uC870\\uD68C\"}),loading&&/*#__PURE__*/_jsx(\"div\",{children:\"\\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-error\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-success\",children:success}),/*#__PURE__*/_jsx(\"ul\",{children:instances.map(inst=>/*#__PURE__*/_jsxs(\"li\",{className:\"rds-instance-item\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:inst.DBInstanceIdentifier}),\" (\",inst.Engine,\")\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uD638\\uC2A4\\uD2B8: \",inst.Endpoint.Address,\":\",inst.Endpoint.Port,/*#__PURE__*/_jsx(\"br\",{}),\"DB\\uBA85: \",inst.DBName||'-']}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRegisterDb(inst),className:\"btn btn-primary btn-sm\",children:\"DB\\uB85C \\uB4F1\\uB85D\"})]},inst.DBInstanceIdentifier))})]});};export default AwsRdsResource;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","AwsRdsResource","_ref","onDatabaseAdd","instances","setInstances","loading","setLoading","error","setError","success","setSuccess","fetchRdsInstances","response","fetch","credentials","ok","data","json","e","handleRegisterDb","instance","formData","FormData","append","DBInstanceIdentifier","Endpoint","Address","Port","DBName","method","body","className","children","map","inst","Engine","onClick"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsRdsResource.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AwsRdsResource = ({ onDatabaseAdd }) => {\n  const [instances, setInstances] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    fetchRdsInstances();\n  }, []);\n\n  const fetchRdsInstances = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', { credentials: 'include' });\n      if (response.ok) {\n        const data = await response.json();\n        setInstances(data.instances || []);\n      } else {\n        setError('RDS 인스턴스 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 인스턴스 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRegisterDb = async (instance) => {\n    setSuccess('');\n    setError('');\n    try {\n      // DB 관리에 등록 요청 (예시: /api/databases)\n      const formData = new FormData();\n      formData.append('name', instance.DBInstanceIdentifier);\n      formData.append('host', instance.Endpoint.Address);\n      formData.append('port', instance.Endpoint.Port);\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', instance.DBName || '');\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('DB로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"aws-rds-resource\">\n      <h2>RDS 인스턴스 조회</h2>\n      {loading && <div>불러오는 중...</div>}\n      {error && <div className=\"alert alert-error\">{error}</div>}\n      {success && <div className=\"alert alert-success\">{success}</div>}\n      <ul>\n        {instances.map((inst) => (\n          <li key={inst.DBInstanceIdentifier} className=\"rds-instance-item\">\n            <div>\n              <strong>{inst.DBInstanceIdentifier}</strong> ({inst.Engine})<br />\n              호스트: {inst.Endpoint.Address}:{inst.Endpoint.Port}<br />\n              DB명: {inst.DBName || '-'}\n            </div>\n            <button onClick={() => handleRegisterDb(inst)} className=\"btn btn-primary btn-sm\">DB로 등록</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AwsRdsResource; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}