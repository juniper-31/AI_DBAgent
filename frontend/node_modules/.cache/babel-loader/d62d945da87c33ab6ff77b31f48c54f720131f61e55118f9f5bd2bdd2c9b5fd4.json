{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/DatabaseManager.js\",\n  _s = $RefreshSig$();\n// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DatabaseManager({\n  databases,\n  onDatabaseChange,\n  onDatabaseDelete,\n  onDatabaseAdd\n}) {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [editingDb, setEditingDb] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n    remark: '',\n    // 비고 필드 추가\n    cloudwatch_id: '' // AWS RDS 인스턴스ID 필드 추가\n  });\n  const [errors, setErrors] = useState({});\n\n  // 연결 상태 관리 (localStorage 연동)\n  const [connectionStatus, setConnectionStatus] = useState(() => {\n    try {\n      const saved = localStorage.getItem('db-connection-status');\n      return saved ? JSON.parse(saved) : {};\n    } catch {\n      return {};\n    }\n  });\n\n  // connectionStatus가 바뀔 때마다 localStorage에 저장\n  useEffect(() => {\n    localStorage.setItem('db-connection-status', JSON.stringify(connectionStatus));\n  }, [connectionStatus]);\n\n  // 1분마다 자동 연결 상태 갱신\n  useEffect(() => {\n    let timer;\n    const pollConnections = async () => {\n      if (databases && databases.length > 0) {\n        for (const db of databases) {\n          try {\n            const response = await fetch('/api/databases/test', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(db),\n              credentials: 'include'\n            });\n            const result = await response.json();\n            setConnectionStatus(prev => ({\n              ...prev,\n              [db.name]: result.success ? 'success' : 'fail'\n            }));\n          } catch {\n            setConnectionStatus(prev => ({\n              ...prev,\n              [db.name]: 'fail'\n            }));\n          }\n        }\n      }\n      timer = setTimeout(pollConnections, 60000); // 1분마다 반복\n    };\n    pollConnections();\n    return () => clearTimeout(timer);\n  }, [databases]);\n  const [showBrowseForm, setShowBrowseForm] = useState(false);\n  const [browseFormData, setBrowseFormData] = useState({\n    host: '',\n    port: '',\n    username: '',\n    password: ''\n  });\n  const [browsedDatabases, setBrowsedDatabases] = useState([]);\n  const [browseError, setBrowseError] = useState('');\n\n  // 폼 초기화\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      host: '',\n      port: '',\n      database: '',\n      username: '',\n      password: '',\n      remark: '',\n      // 비고 초기화\n      cloudwatch_id: ''\n    });\n    setErrors({});\n    setEditingDb(null);\n  };\n\n  // 폼 표시/숨김 토글\n  const toggleForm = () => {\n    if (showForm) {\n      resetForm();\n    }\n    setShowForm(!showForm);\n    setShowBrowseForm(false); // Hide browse form when toggling add/edit form\n  };\n\n  // DB Browse 폼 표시/숨김 토글\n  const toggleBrowseForm = () => {\n    setShowBrowseForm(!showBrowseForm);\n    setShowForm(false); // Hide add/edit form when toggling browse form\n    setBrowsedDatabases([]); // Clear browsed results\n    setBrowseError('');\n    setBrowseFormData({\n      host: formData.host || '',\n      port: formData.port || '',\n      username: formData.username || '',\n      password: formData.password || ''\n    });\n  };\n\n  // 편집 모드 시작\n  const startEdit = db => {\n    setFormData({\n      name: db.name,\n      host: db.host,\n      port: db.port || '',\n      database: db.dbname || '',\n      // Use dbname from backend\n      username: db.user || '',\n      // Use user from backend\n      password: db.password,\n      remark: db.remark || '',\n      // 비고\n      cloudwatch_id: db.cloudwatch_id || ''\n    });\n    setEditingDb(db);\n    setShowForm(true);\n    setShowBrowseForm(false); // Hide browse form\n    setErrors({});\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // 에러 클리어\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // DB Browse 폼 입력 필드 변경 처리\n  const handleBrowseInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBrowseFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // 조회된 DB 선택\n  const handleSelectBrowsedDb = dbName => {\n    setFormData(prev => ({\n      ...prev,\n      database: dbName\n    }));\n    setShowBrowseForm(false);\n    setShowForm(true);\n  };\n\n  // 폼 유효성 검사\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name.trim()) {\n      newErrors.name = 'DB 이름을 입력하세요';\n    }\n    if (!formData.host.trim()) {\n      newErrors.host = '호스트를 입력하세요';\n    }\n    if (!formData.database.trim()) {\n      newErrors.database = '데이터베이스명을 입력하세요';\n    }\n    if (!formData.username.trim()) {\n      newErrors.username = '사용자명을 입력하세요';\n    }\n    if (!formData.password.trim()) {\n      newErrors.password = '비밀번호를 입력하세요';\n    }\n\n    // 포트 번호 검증\n    if (formData.port && (isNaN(formData.port) || formData.port < 1 || formData.port > 65535)) {\n      newErrors.port = '유효한 포트 번호를 입력하세요 (1-65535)';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // DB 목록 조회 처리\n  const handleBrowseDatabases = async e => {\n    e.preventDefault();\n    setBrowseError('');\n    setBrowsedDatabases([]);\n    if (!browseFormData.host.trim() || !browseFormData.username.trim() || !browseFormData.password.trim()) {\n      setBrowseError('호스트, 사용자명, 비밀번호는 필수입니다.');\n      return;\n    }\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('host', browseFormData.host);\n      formDataToSend.append('port', browseFormData.port || 5432);\n      formDataToSend.append('user', browseFormData.username);\n      formDataToSend.append('password', browseFormData.password);\n      const response = await fetch('/api/databases/browse', {\n        method: 'POST',\n        body: formDataToSend\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        setBrowsedDatabases(result.databases);\n      } else {\n        setBrowseError(result.message || '데이터베이스 목록 조회에 실패했습니다.');\n      }\n    } catch (error) {\n      setBrowseError('데이터베이스 목록 조회 중 오류가 발생했습니다.');\n      console.error('Browse DBs error:', error);\n    }\n  };\n\n  // 폼 제출 처리\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('name', formData.name);\n      formDataToSend.append('host', formData.host);\n      formDataToSend.append('port', formData.port);\n      formDataToSend.append('user', formData.username);\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('dbname', formData.database);\n      formDataToSend.append('remark', formData.remark || ''); // 비고 추가\n      formDataToSend.append('cloudwatch_id', formData.cloudwatch_id); // 추가\n\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formDataToSend\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseChange(); // 부모 컴포넌트에 변경 알림\n          resetForm();\n          setShowForm(false);\n        } else {\n          setErrors({\n            general: '저장에 실패했습니다.'\n          });\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      setErrors({\n        general: '연결 오류가 발생했습니다.'\n      });\n    }\n  };\n\n  // DB 삭제 처리\n  const handleDelete = async dbName => {\n    if (!window.confirm(`정말로 \"${dbName}\" 데이터베이스 연결을 삭제하시겠습니까?`)) {\n      return;\n    }\n    try {\n      const response = await fetch(`/api/databases/${dbName}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseDelete(dbName);\n        } else {\n          alert('삭제에 실패했습니다.');\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      alert('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 연결 테스트\n  const testConnection = async db => {\n    try {\n      setConnectionStatus(prev => ({\n        ...prev,\n        [db.name]: 'loading'\n      }));\n      const response = await fetch('/api/databases/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(db),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (result.success) {\n        setConnectionStatus(prev => ({\n          ...prev,\n          [db.name]: 'success'\n        }));\n        alert('연결 테스트 성공!');\n      } else {\n        setConnectionStatus(prev => ({\n          ...prev,\n          [db.name]: 'fail'\n        }));\n        alert(`연결 테스트 실패: ${result.message}`);\n      }\n    } catch (error) {\n      setConnectionStatus(prev => ({\n        ...prev,\n        [db.name]: 'fail'\n      }));\n      alert('연결 테스트 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"database-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manager-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleForm,\n        className: `btn ${showForm ? 'btn-secondary' : 'btn-primary'}`,\n        children: showForm ? '취소' : '새 DB 추가'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleBrowseForm,\n        className: `btn ${showBrowseForm ? 'btn-secondary' : 'btn-info'}`,\n        children: showBrowseForm ? '취소' : 'DB 목록 조회'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"db-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editingDb ? 'DB 연결 수정' : '새 DB 연결 추가'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), errors.general && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: errors.general\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"DB \\uC774\\uB984 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: production_db\",\n              className: errors.name ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"host\",\n              children: \"\\uD638\\uC2A4\\uD2B8 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"host\",\n              name: \"host\",\n              value: formData.host,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: localhost \\uB610\\uB294 192.168.1.100\",\n              className: errors.host ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this), errors.host && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.host\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"port\",\n              children: \"\\uD3EC\\uD2B8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"port\",\n              name: \"port\",\n              value: formData.port,\n              onChange: handleInputChange,\n              placeholder: \"\\uAE30\\uBCF8\\uAC12 \\uC0AC\\uC6A9\",\n              className: errors.port ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), errors.port && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.port\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"database\",\n              children: \"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uBA85 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"database\",\n              name: \"database\",\n              value: formData.database,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: myapp_production\",\n              className: errors.database ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), errors.database && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.database\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"\\uC0AC\\uC6A9\\uC790\\uBA85 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: dbuser\",\n              className: errors.username ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n              className: errors.password ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-text\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"remark\",\n              children: \"\\uBE44\\uACE0(\\uC120\\uD0DD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"remark\",\n              name: \"remark\",\n              value: formData.remark,\n              onChange: handleInputChange,\n              placeholder: \"\\uC608: AWS \\uACC4\\uC815/\\uC6A9\\uB3C4/\\uC124\\uBA85 \\uB4F1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cloudwatch_id\",\n            children: \"AWS RDS \\uC778\\uC2A4\\uD134\\uC2A4ID (CloudWatch\\uC6A9)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"cloudwatch_id\",\n            name: \"cloudwatch_id\",\n            value: formData.cloudwatch_id,\n            onChange: handleInputChange,\n            placeholder: \"\\uC608: rds-xxxx, aurora-xxx \\uB4F1 AWS \\uC778\\uC2A4\\uD134\\uC2A4ID\",\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), errors.cloudwatch_id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-error\",\n            children: errors.cloudwatch_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: editingDb ? '수정' : '추가'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleForm,\n            className: \"btn btn-secondary\",\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }, this), showBrowseForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleBrowseDatabases,\n        className: \"db-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"DB \\uC778\\uC2A4\\uD134\\uC2A4\\uC5D0\\uC11C \\uBAA9\\uB85D \\uC870\\uD68C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), browseError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: browseError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"browse-host\",\n              children: \"\\uD638\\uC2A4\\uD2B8 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"browse-host\",\n              name: \"host\",\n              value: browseFormData.host,\n              onChange: handleBrowseInputChange,\n              placeholder: \"\\uC608: localhost \\uB610\\uB294 RDS \\uC5D4\\uB4DC\\uD3EC\\uC778\\uD2B8\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"browse-port\",\n              children: \"\\uD3EC\\uD2B8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"browse-port\",\n              name: \"port\",\n              value: browseFormData.port,\n              onChange: handleBrowseInputChange,\n              placeholder: \"\\uAE30\\uBCF8\\uAC12 5432\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"browse-username\",\n              children: \"\\uC0AC\\uC6A9\\uC790\\uBA85 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"browse-username\",\n              name: \"username\",\n              value: browseFormData.username,\n              onChange: handleBrowseInputChange,\n              placeholder: \"\\uC608: postgres\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"browse-password\",\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"browse-password\",\n              name: \"password\",\n              value: browseFormData.password,\n              onChange: handleBrowseInputChange,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-info\",\n            children: \"DB \\uBAA9\\uB85D \\uC870\\uD68C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleBrowseForm,\n            className: \"btn btn-secondary\",\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this), browsedDatabases.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"browsed-databases-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"\\uC870\\uD68C\\uB41C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 (\", browsedDatabases.length, \"\\uAC1C)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: browsedDatabases.map((dbName, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [dbName, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelectBrowsedDb(dbName),\n              className: \"btn btn-sm btn-outline\",\n              children: \"\\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"database-list\",\n      children: databases && databases.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"db-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC774\\uB984\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD638\\uC2A4\\uD2B8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uD3EC\\uD2B8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DB\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC0AC\\uC6A9\\uC790\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uBE44\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Connection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC561\\uC158\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: databases.map(db => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: db.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: db.host\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: db.port || '기본값'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: db.dbname || '모든 DB'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: db.user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: db.remark || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `conn-indicator ${connectionStatus[db.name]}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 21\n              }, this), connectionStatus[db.name] === 'loading' && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: 4\n                },\n                children: \"\\u23F3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => testConnection(db),\n                className: \"btn btn-sm btn-outline\",\n                title: \"\\uC5F0\\uACB0 \\uD14C\\uC2A4\\uD2B8\",\n                children: \"\\uD83D\\uDD17 \\uD14C\\uC2A4\\uD2B8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startEdit(db),\n                className: \"btn btn-sm btn-outline\",\n                title: \"\\uC218\\uC815\",\n                children: \"\\u270F\\uFE0F \\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(db.name),\n                className: \"btn btn-sm btn-danger\",\n                title: \"\\uC0AD\\uC81C\",\n                children: \"\\uD83D\\uDDD1\\uFE0F \\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }, this)]\n          }, db.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB4F1\\uB85D\\uB41C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC0C8 DB \\uC5F0\\uACB0\\uC744 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n_s(DatabaseManager, \"OwNs2klxpnTCo9Ox5lwLo9Vmk88=\");\n_c = DatabaseManager;\nexport default DatabaseManager;\nvar _c;\n$RefreshReg$(_c, \"DatabaseManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DatabaseManager","databases","onDatabaseChange","onDatabaseDelete","onDatabaseAdd","_s","showForm","setShowForm","editingDb","setEditingDb","formData","setFormData","name","host","port","database","username","password","remark","cloudwatch_id","errors","setErrors","connectionStatus","setConnectionStatus","saved","localStorage","getItem","JSON","parse","setItem","stringify","timer","pollConnections","length","db","response","fetch","method","headers","body","credentials","result","json","prev","success","setTimeout","clearTimeout","showBrowseForm","setShowBrowseForm","browseFormData","setBrowseFormData","browsedDatabases","setBrowsedDatabases","browseError","setBrowseError","resetForm","toggleForm","toggleBrowseForm","startEdit","dbname","user","handleInputChange","e","value","target","handleBrowseInputChange","handleSelectBrowsedDb","dbName","validateForm","newErrors","trim","isNaN","Object","keys","handleBrowseDatabases","preventDefault","formDataToSend","FormData","append","status","message","error","console","handleSubmit","ok","general","Error","handleDelete","window","confirm","alert","testConnection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","onChange","placeholder","autoComplete","required","map","index","style","marginLeft","title","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/DatabaseManager.js"],"sourcesContent":["// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React, { useState, useEffect } from 'react';\n\nfunction DatabaseManager({ databases, onDatabaseChange, onDatabaseDelete, onDatabaseAdd }) {\n  const [showForm, setShowForm] = useState(false);\n  const [editingDb, setEditingDb] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n    remark: '', // 비고 필드 추가\n    cloudwatch_id: '', // AWS RDS 인스턴스ID 필드 추가\n  });\n  const [errors, setErrors] = useState({});\n\n  // 연결 상태 관리 (localStorage 연동)\n  const [connectionStatus, setConnectionStatus] = useState(() => {\n    try {\n      const saved = localStorage.getItem('db-connection-status');\n      return saved ? JSON.parse(saved) : {};\n    } catch {\n      return {};\n    }\n  });\n\n  // connectionStatus가 바뀔 때마다 localStorage에 저장\n  useEffect(() => {\n    localStorage.setItem('db-connection-status', JSON.stringify(connectionStatus));\n  }, [connectionStatus]);\n\n  // 1분마다 자동 연결 상태 갱신\n  useEffect(() => {\n    let timer;\n    const pollConnections = async () => {\n      if (databases && databases.length > 0) {\n        for (const db of databases) {\n          try {\n            const response = await fetch('/api/databases/test', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(db),\n              credentials: 'include'\n            });\n            const result = await response.json();\n            setConnectionStatus(prev => ({\n              ...prev,\n              [db.name]: result.success ? 'success' : 'fail'\n            }));\n          } catch {\n            setConnectionStatus(prev => ({\n              ...prev,\n              [db.name]: 'fail'\n            }));\n          }\n        }\n      }\n      timer = setTimeout(pollConnections, 60000); // 1분마다 반복\n    };\n    pollConnections();\n    return () => clearTimeout(timer);\n  }, [databases]);\n\n  const [showBrowseForm, setShowBrowseForm] = useState(false);\n  const [browseFormData, setBrowseFormData] = useState({\n    host: '',\n    port: '',\n    username: '',\n    password: '',\n  });\n  const [browsedDatabases, setBrowsedDatabases] = useState([]);\n  const [browseError, setBrowseError] = useState('');\n\n  // 폼 초기화\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      host: '',\n      port: '',\n      database: '',\n      username: '',\n      password: '',\n      remark: '', // 비고 초기화\n      cloudwatch_id: '',\n    });\n    setErrors({});\n    setEditingDb(null);\n  };\n\n  // 폼 표시/숨김 토글\n  const toggleForm = () => {\n    if (showForm) {\n      resetForm();\n    }\n    setShowForm(!showForm);\n    setShowBrowseForm(false); // Hide browse form when toggling add/edit form\n  };\n\n  // DB Browse 폼 표시/숨김 토글\n  const toggleBrowseForm = () => {\n    setShowBrowseForm(!showBrowseForm);\n    setShowForm(false); // Hide add/edit form when toggling browse form\n    setBrowsedDatabases([]); // Clear browsed results\n    setBrowseError('');\n    setBrowseFormData({\n      host: formData.host || '',\n      port: formData.port || '',\n      username: formData.username || '',\n      password: formData.password || '',\n    });\n  };\n\n  // 편집 모드 시작\n  const startEdit = (db) => {\n    setFormData({\n      name: db.name,\n      host: db.host,\n      port: db.port || '',\n      database: db.dbname || '', // Use dbname from backend\n      username: db.user || '',   // Use user from backend\n      password: db.password,\n      remark: db.remark || '', // 비고\n      cloudwatch_id: db.cloudwatch_id || '',\n    });\n    setEditingDb(db);\n    setShowForm(true);\n    setShowBrowseForm(false); // Hide browse form\n    setErrors({});\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // 에러 클리어\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // DB Browse 폼 입력 필드 변경 처리\n  const handleBrowseInputChange = (e) => {\n    const { name, value } = e.target;\n    setBrowseFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // 조회된 DB 선택\n  const handleSelectBrowsedDb = (dbName) => {\n    setFormData(prev => ({\n      ...prev,\n      database: dbName\n    }));\n    setShowBrowseForm(false);\n    setShowForm(true);\n  };\n\n  // 폼 유효성 검사\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'DB 이름을 입력하세요';\n    }\n    \n    if (!formData.host.trim()) {\n      newErrors.host = '호스트를 입력하세요';\n    }\n    \n    if (!formData.database.trim()) {\n      newErrors.database = '데이터베이스명을 입력하세요';\n    }\n    \n    if (!formData.username.trim()) {\n      newErrors.username = '사용자명을 입력하세요';\n    }\n    \n    if (!formData.password.trim()) {\n      newErrors.password = '비밀번호를 입력하세요';\n    }\n\n    // 포트 번호 검증\n    if (formData.port && (isNaN(formData.port) || formData.port < 1 || formData.port > 65535)) {\n      newErrors.port = '유효한 포트 번호를 입력하세요 (1-65535)';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // DB 목록 조회 처리\n  const handleBrowseDatabases = async (e) => {\n    e.preventDefault();\n    setBrowseError('');\n    setBrowsedDatabases([]);\n\n    if (!browseFormData.host.trim() || !browseFormData.username.trim() || !browseFormData.password.trim()) {\n      setBrowseError('호스트, 사용자명, 비밀번호는 필수입니다.');\n      return;\n    }\n\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('host', browseFormData.host);\n      formDataToSend.append('port', browseFormData.port || 5432);\n      formDataToSend.append('user', browseFormData.username);\n      formDataToSend.append('password', browseFormData.password);\n\n      const response = await fetch('/api/databases/browse', {\n        method: 'POST',\n        body: formDataToSend,\n      });\n\n      const result = await response.json();\n      if (result.status === 'success') {\n        setBrowsedDatabases(result.databases);\n      } else {\n        setBrowseError(result.message || '데이터베이스 목록 조회에 실패했습니다.');\n      }\n    } catch (error) {\n      setBrowseError('데이터베이스 목록 조회 중 오류가 발생했습니다.');\n      console.error('Browse DBs error:', error);\n    }\n  };\n\n  // 폼 제출 처리\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('name', formData.name);\n      formDataToSend.append('host', formData.host);\n      formDataToSend.append('port', formData.port);\n      formDataToSend.append('user', formData.username);\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('dbname', formData.database);\n      formDataToSend.append('remark', formData.remark || ''); // 비고 추가\n      formDataToSend.append('cloudwatch_id', formData.cloudwatch_id); // 추가\n      \n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseChange(); // 부모 컴포넌트에 변경 알림\n          resetForm();\n          setShowForm(false);\n        } else {\n          setErrors({ general: '저장에 실패했습니다.' });\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      setErrors({ general: '연결 오류가 발생했습니다.' });\n    }\n  };\n\n  // DB 삭제 처리\n  const handleDelete = async (dbName) => {\n    if (!window.confirm(`정말로 \"${dbName}\" 데이터베이스 연결을 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/databases/${dbName}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseDelete(dbName);\n        } else {\n          alert('삭제에 실패했습니다.');\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      alert('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 연결 테스트\n  const testConnection = async (db) => {\n    try {\n      setConnectionStatus(prev => ({ ...prev, [db.name]: 'loading' }));\n      const response = await fetch('/api/databases/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(db),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (result.success) {\n        setConnectionStatus(prev => ({ ...prev, [db.name]: 'success' }));\n        alert('연결 테스트 성공!');\n      } else {\n        setConnectionStatus(prev => ({ ...prev, [db.name]: 'fail' }));\n        alert(`연결 테스트 실패: ${result.message}`);\n      }\n    } catch (error) {\n      setConnectionStatus(prev => ({ ...prev, [db.name]: 'fail' }));\n      alert('연결 테스트 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"database-manager\">\n      {/* 헤더 */}\n      <div className=\"manager-header\">\n        <h2>데이터베이스 연결 관리</h2>\n        <button \n          onClick={toggleForm} \n          className={`btn ${showForm ? 'btn-secondary' : 'btn-primary'}`}\n        >\n          {showForm ? '취소' : '새 DB 추가'}\n        </button>\n        <button \n          onClick={toggleBrowseForm} \n          className={`btn ${showBrowseForm ? 'btn-secondary' : 'btn-info'}`}\n        >\n          {showBrowseForm ? '취소' : 'DB 목록 조회'}\n        </button>\n      </div>\n\n      {/* DB 추가/편집 폼 */}\n      {showForm && (\n        <div className=\"form-container\">\n          <form onSubmit={handleSubmit} className=\"db-form\">\n            <h3>{editingDb ? 'DB 연결 수정' : '새 DB 연결 추가'}</h3>\n            \n            {errors.general && (\n              <div className=\"error-message\">{errors.general}</div>\n            )}\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">DB 이름 *</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"예: production_db\"\n                  className={errors.name ? 'error' : ''}\n                />\n                {errors.name && <span className=\"error-text\">{errors.name}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"host\">호스트 *</label>\n                <input\n                  type=\"text\"\n                  id=\"host\"\n                  name=\"host\"\n                  value={formData.host}\n                  onChange={handleInputChange}\n                  placeholder=\"예: localhost 또는 192.168.1.100\"\n                  className={errors.host ? 'error' : ''}\n                />\n                {errors.host && <span className=\"error-text\">{errors.host}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"port\">포트</label>\n                <input\n                  type=\"number\"\n                  id=\"port\"\n                  name=\"port\"\n                  value={formData.port}\n                  onChange={handleInputChange}\n                  placeholder=\"기본값 사용\"\n                  className={errors.port ? 'error' : ''}\n                />\n                {errors.port && <span className=\"error-text\">{errors.port}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"database\">데이터베이스명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"database\"\n                  name=\"database\"\n                  value={formData.database}\n                  onChange={handleInputChange}\n                  placeholder=\"예: myapp_production\"\n                  className={errors.database ? 'error' : ''}\n                />\n                {errors.database && <span className=\"error-text\">{errors.database}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">사용자명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  placeholder=\"예: dbuser\"\n                  className={errors.username ? 'error' : ''}\n                />\n                {errors.username && <span className=\"error-text\">{errors.username}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"password\">비밀번호 *</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  placeholder=\"비밀번호 입력\"\n                  className={errors.password ? 'error' : ''}\n                />\n                {errors.password && <span className=\"error-text\">{errors.password}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"remark\">비고(선택)</label>\n                <input\n                  type=\"text\"\n                  id=\"remark\"\n                  name=\"remark\"\n                  value={formData.remark}\n                  onChange={handleInputChange}\n                  placeholder=\"예: AWS 계정/용도/설명 등\"\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"cloudwatch_id\">AWS RDS 인스턴스ID (CloudWatch용)</label>\n              <input\n                type=\"text\"\n                id=\"cloudwatch_id\"\n                name=\"cloudwatch_id\"\n                value={formData.cloudwatch_id}\n                onChange={handleInputChange}\n                placeholder=\"예: rds-xxxx, aurora-xxx 등 AWS 인스턴스ID\"\n                autoComplete=\"off\"\n              />\n              {errors.cloudwatch_id && <div className=\"form-error\">{errors.cloudwatch_id}</div>}\n            </div>\n\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {editingDb ? '수정' : '추가'}\n              </button>\n              <button type=\"button\" onClick={toggleForm} className=\"btn btn-secondary\">\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* DB 목록 조회 폼 */}\n      {showBrowseForm && (\n        <div className=\"form-container\">\n          <form onSubmit={handleBrowseDatabases} className=\"db-form\">\n            <h3>DB 인스턴스에서 목록 조회</h3>\n            {browseError && (\n              <div className=\"error-message\">{browseError}</div>\n            )}\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"browse-host\">호스트 *</label>\n                <input\n                  type=\"text\"\n                  id=\"browse-host\"\n                  name=\"host\"\n                  value={browseFormData.host}\n                  onChange={handleBrowseInputChange}\n                  placeholder=\"예: localhost 또는 RDS 엔드포인트\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"browse-port\">포트</label>\n                <input\n                  type=\"number\"\n                  id=\"browse-port\"\n                  name=\"port\"\n                  value={browseFormData.port}\n                  onChange={handleBrowseInputChange}\n                  placeholder=\"기본값 5432\"\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"browse-username\">사용자명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"browse-username\"\n                  name=\"username\"\n                  value={browseFormData.username}\n                  onChange={handleBrowseInputChange}\n                  placeholder=\"예: postgres\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"browse-password\">비밀번호 *</label>\n                <input\n                  type=\"password\"\n                  id=\"browse-password\"\n                  name=\"password\"\n                  value={browseFormData.password}\n                  onChange={handleBrowseInputChange}\n                  placeholder=\"비밀번호 입력\"\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn btn-info\">\n                DB 목록 조회\n              </button>\n              <button type=\"button\" onClick={toggleBrowseForm} className=\"btn btn-secondary\">\n                취소\n              </button>\n            </div>\n          </form>\n\n          {browsedDatabases.length > 0 && (\n            <div className=\"browsed-databases-list\">\n              <h4>조회된 데이터베이스 ({browsedDatabases.length}개)</h4>\n              <ul>\n                {browsedDatabases.map((dbName, index) => (\n                  <li key={index}>\n                    {dbName}\n                    <button \n                      onClick={() => handleSelectBrowsedDb(dbName)}\n                      className=\"btn btn-sm btn-outline\"\n                    >\n                      선택\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* DB 목록 */}\n      <div className=\"database-list\">\n        {databases && databases.length > 0 ? (\n          <table className=\"db-table\">\n            <thead>\n              <tr>\n                <th>이름</th>\n                <th>호스트</th>\n                <th>포트</th>\n                <th>DB명</th>\n                <th>사용자</th>\n                <th>비고</th>\n                <th>Connection</th>\n                <th>액션</th>\n              </tr>\n            </thead>\n            <tbody>\n              {databases.map(db => (\n                <tr key={db.name}>\n                  <td>{db.name}</td>\n                  <td>{db.host}</td>\n                  <td>{db.port || '기본값'}</td>\n                  <td>{db.dbname || '모든 DB'}</td>\n                  <td>{db.user}</td>\n                  <td>{db.remark || ''}</td>\n                  <td>\n                    <span className={`conn-indicator ${connectionStatus[db.name]}`}></span>\n                    {connectionStatus[db.name] === 'loading' && <span style={{marginLeft:4}}>⏳</span>}\n                  </td>\n                  <td>\n                    <button \n                      onClick={() => testConnection(db)}\n                      className=\"btn btn-sm btn-outline\"\n                      title=\"연결 테스트\"\n                    >\n                      🔗 테스트\n                    </button>\n                    <button \n                      onClick={() => startEdit(db)}\n                      className=\"btn btn-sm btn-outline\"\n                      title=\"수정\"\n                    >\n                      ✏️ 수정\n                    </button>\n                    <button \n                      onClick={() => handleDelete(db.name)}\n                      className=\"btn btn-sm btn-danger\"\n                      title=\"삭제\"\n                    >\n                      🗑️ 삭제\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : (\n          <div className=\"empty-state\">\n            <p>등록된 데이터베이스 연결이 없습니다.</p>\n            <p>새 DB 연결을 추가해보세요!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DatabaseManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}