{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\n// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatComponent({\n  selectedDb,\n  databases,\n  onDbChange\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n  const [aiModels, setAiModels] = useState([]);\n  const [selectedAiModel, setSelectedAiModel] = useState('');\n  const [conversations, setConversations] = useState([]); // 대화 목록\n  const [currentConversationId, setCurrentConversationId] = useState(null); // 현재 대화 ID\n  const [newConversationTitle, setNewConversationTitle] = useState(''); // 새 대화 제목\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [{\n    title: '성능 분석',\n    questions: ['오늘 가장 오래 걸린 쿼리 보여줘', '슬로우 쿼리 10개만 보여줘', '테이블별 row 수와 크기 알려줘']\n  }, {\n    title: '데이터 탐색',\n    questions: ['가장 row가 많은 테이블 알려줘', '최근 7일간 생성된 데이터 보여줘', '사용자 테이블의 구조를 설명해줘']\n  }, {\n    title: '시스템 상태',\n    questions: ['현재 활성 연결 수는?', '데이터베이스 크기와 사용량 알려줘', '인덱스 사용 현황을 분석해줘']\n  }];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // DB 선택 변경 시 대화 목록 불러오기\n  useEffect(() => {\n    const fetchConversations = async () => {\n      if (selectedDb) {\n        try {\n          const response = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (response.data.status === 'success') {\n            const conversations = response.data.conversations;\n            setConversations(conversations);\n            if (conversations.length > 0) {\n              // 가장 최근 대화를 자동으로 선택\n              setCurrentConversationId(conversations[0].id);\n            } else {\n              // 대화가 없으면 현재 대화 초기화\n              setCurrentConversationId(null);\n              setMessages([]);\n            }\n          }\n        } catch (error) {\n          console.error('대화 목록을 불러오는데 실패했습니다:', error);\n          setConversations([]);\n        }\n      } else {\n        setConversations([]);\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    };\n    fetchConversations();\n  }, [selectedDb]);\n\n  // 현재 대화 ID 변경 시 메시지 불러오기\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (currentConversationId) {\n        try {\n          const response = await axios.get(`/api/conversations/${currentConversationId}/messages`);\n          if (response.data.status === 'success') {\n            // DB에서 불러온 메시지 형식 변환\n            const formattedMessages = response.data.messages.map(msg => ({\n              role: msg.role,\n              content: msg.content,\n              sql: msg.sql_query,\n              result: msg.sql_result ? JSON.parse(msg.sql_result) : null,\n              timestamp: new Date(msg.timestamp).toLocaleTimeString()\n            }));\n            setMessages(formattedMessages);\n          }\n        } catch (error) {\n          console.error('메시지를 불러오는데 실패했습니다:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n  }, [currentConversationId]);\n\n  // AI 모델 목록 불러오기 (한 번만 실행)\n  useEffect(() => {\n    const fetchAiModels = async () => {\n      try {\n        const openaiRes = await axios.get('/api/openai/keys');\n        const azureOpenAIRes = await axios.get('/api/azure-openai/configs');\n        const geminiRes = await axios.get('/api/gemini/configs');\n        const claudeRes = await axios.get('/api/claude/configs');\n        const allModels = [...openaiRes.data.keys.map(k => ({\n          ...k,\n          type: 'openai'\n        })), ...azureOpenAIRes.data.configs.map(c => ({\n          ...c,\n          type: 'azure_openai'\n        })), ...geminiRes.data.configs.map(c => ({\n          ...c,\n          type: 'gemini'\n        })), ...claudeRes.data.configs.map(c => ({\n          ...c,\n          type: 'claude'\n        }))];\n        setAiModels(allModels);\n        const currentSelected = allModels.find(m => m.is_selected);\n        if (currentSelected) {\n          setSelectedAiModel(currentSelected.name);\n        } else if (allModels.length > 0) {\n          const defaultModel = allModels[0];\n          let selectApiEndpoint = '';\n          if (defaultModel.type === 'openai') selectApiEndpoint = '/api/openai/select';else if (defaultModel.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';else if (defaultModel.type === 'gemini') selectApiEndpoint = '/api/gemini/select';else if (defaultModel.type === 'claude') selectApiEndpoint = '/api/claude/select';\n          if (selectApiEndpoint) {\n            const formData = new FormData();\n            formData.append('name', defaultModel.name);\n            axios.post(selectApiEndpoint, formData).then(() => {\n              setSelectedAiModel(defaultModel.name);\n              console.log(`Default AI model selected: ${defaultModel.name}`);\n            }).catch(error => {\n              console.error('Error selecting default AI model:', error);\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching AI models:', error);\n      }\n    };\n    fetchAiModels();\n  }, []);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = el => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = question => {\n    var _textareaRef$current;\n    setInput(question);\n    (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : _textareaRef$current.focus();\n  };\n\n  // 새 대화 시작\n  const handleNewConversation = async e => {\n    e.preventDefault();\n    if (!newConversationTitle.trim() || !selectedDb) {\n      alert('DB와 대화 제목을 입력해주세요.');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      formData.append('title', newConversationTitle);\n      const response = await axios.post('/api/conversations/new', formData);\n      if (response.data.status === 'success') {\n        setCurrentConversationId(response.data.conversation_id);\n        setNewConversationTitle('');\n        setMessages([]); // 새 대화 시작 시 메시지 초기화\n        // 대화 목록 새로고침\n        const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n        if (convRes.data.status === 'success') {\n          setConversations(convRes.data.conversations);\n        }\n      }\n    } catch (error) {\n      console.error('새 대화 생성 실패:', error);\n      alert('새 대화 생성에 실패했습니다.');\n    }\n  };\n\n  // 기존 대화 선택\n  const handleSelectConversation = convId => {\n    setCurrentConversationId(convId);\n  };\n\n  // 대화 삭제\n  const handleDeleteConversation = async convId => {\n    if (window.confirm('정말로 이 대화를 삭제하시겠습니까? 모든 메시지가 영구적으로 삭제됩니다.')) {\n      try {\n        await axios.delete(`/api/conversations/${convId}`);\n        // 대화 목록 새로고침\n        const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n        if (convRes.data.status === 'success') {\n          setConversations(convRes.data.conversations);\n        }\n        if (currentConversationId === convId) {\n          setCurrentConversationId(null);\n          setMessages([]);\n        }\n      } catch (error) {\n        console.error('대화 삭제 실패:', error);\n        alert('대화 삭제에 실패했습니다.');\n      }\n    }\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim() || !selectedDb) return;\n    if (!selectedAiModel) {\n      alert('먼저 사용할 AI 모델을 선택해주세요.');\n      return;\n    }\n    let conversationId = currentConversationId;\n\n    // 현재 대화가 없으면 새로 생성\n    if (!conversationId) {\n      try {\n        const newConvResponse = await axios.post('/api/conversations/new', new URLSearchParams({\n          db_name: selectedDb,\n          title: input.substring(0, 30) // 첫 메시지를 제목으로 사용\n        }));\n        if (newConvResponse.data.status === 'success') {\n          conversationId = newConvResponse.data.conversation_id;\n          setCurrentConversationId(conversationId);\n          // 대화 목록 새로고침\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        } else {\n          throw new Error('Failed to create new conversation');\n        }\n      } catch (error) {\n        console.error('새 대화 생성 실패:', error);\n        alert('새 대화를 생성하는데 실패했습니다.');\n        return;\n      }\n    }\n    const userMessage = {\n      role: 'user',\n      content: input,\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n    setTextareaRows(1);\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      formData.append('prompt', input);\n      formData.append('conversation_id', conversationId); // 대화 ID 전송\n\n      const response = await axios.post('/api/nl2sql', formData);\n      if (response.data.status === 'success') {\n        const data = response.data.message;\n        const assistantMessage = {\n          role: 'assistant',\n          content: data.content || '',\n          sql: data.sql || '',\n          result: data.result || null,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, assistantMessage]);\n      } else {\n        const errorMessage = {\n          role: 'assistant',\n          content: response.data.error || '알 수 없는 오류 발생',\n          error: true,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n    } catch (error) {\n      console.error('요청 처리 중 오류 발생:', error);\n      const errorMessage = {\n        role: 'assistant',\n        content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n        error: true,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = e => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화 (현재 대화의 메시지만 삭제)\n  const handleResetChat = async () => {\n    if (!currentConversationId) return;\n    if (window.confirm('현재 대화의 모든 메시지를 초기화하시겠습니까?')) {\n      try {\n        const formData = new FormData();\n        formData.append('conversation_id', currentConversationId);\n        const response = await axios.post('/api/nl2sql/reset', formData);\n        if (response.data.status === 'success') {\n          setMessages([]);\n          // 대화 목록 새로고침 (업데이트된 updated_at 반영)\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        }\n      } catch (error) {\n        console.error('채팅 초기화 오류:', error);\n        alert('채팅 초기화에 실패했습니다.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB300\\uD654 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleNewConversation,\n        className: \"new-conversation-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newConversationTitle,\n          onChange: e => setNewConversationTitle(e.target.value),\n          placeholder: \"\\uC0C8 \\uB300\\uD654 \\uC81C\\uBAA9...\",\n          disabled: !selectedDb\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !selectedDb || !newConversationTitle.trim(),\n          children: \"\\uC0C8 \\uB300\\uD654 \\uC2DC\\uC791\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"conversation-list list-group\",\n        children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `list-group-item ${currentConversationId === conv.id ? 'active' : ''}`,\n          onClick: () => handleSelectConversation(conv.id),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: conv.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: new Date(conv.updated_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-danger float-end\",\n            onClick: e => {\n              e.stopPropagation();\n              handleDeleteConversation(conv.id);\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, conv.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"db-select\",\n              className: \"prompt-label\",\n              children: \"DB \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"db-select\",\n              value: selectedDb || '',\n              onChange: e => onDbChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"DB\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"__ALL_DBS__\",\n                children: \"\\uBAA8\\uB4E0 DB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), databases === null || databases === void 0 ? void 0 : databases.map(db => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: db.name,\n                children: db.name\n              }, db.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-model-selector ms-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ai-model-select\",\n              className: \"prompt-label\",\n              children: \"AI \\uBAA8\\uB378 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"ai-model-select\",\n              value: selectedAiModel,\n              onChange: async e => {\n                const modelName = e.target.value;\n                const selected = aiModels.find(m => m.name === modelName);\n                if (selected) {\n                  let selectApiEndpoint = '';\n                  if (selected.type === 'openai') selectApiEndpoint = '/api/openai/select';else if (selected.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';else if (selected.type === 'gemini') selectApiEndpoint = '/api/gemini/select';else if (selected.type === 'claude') selectApiEndpoint = '/api/claude/select';\n                  if (selectApiEndpoint) {\n                    try {\n                      const formData = new FormData();\n                      formData.append('name', selected.name);\n                      await axios.post(selectApiEndpoint, formData);\n                      setSelectedAiModel(selected.name);\n                      alert(`${selected.name} AI 모델이 선택되었습니다.`);\n                    } catch (error) {\n                      console.error('Error selecting AI model:', error);\n                      alert('AI 모델 선택에 실패했습니다.');\n                    }\n                  }\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"AI \\uBAA8\\uB378 \\uC120\\uD0DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), aiModels.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: model.name,\n                children: [model.name, \" (\", model.type, \")\"]\n              }, model.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetChat,\n            disabled: !currentConversationId,\n            className: \"btn btn-outline\",\n            title: \"\\uD604\\uC7AC \\uB300\\uD654 \\uCD08\\uAE30\\uD654\",\n            children: \"\\uD83D\\uDD04 \\uD604\\uC7AC \\uB300\\uD654 \\uCD08\\uAE30\\uD654\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        id: \"chat-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: [messages.length === 0 && !currentConversationId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggest-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCA1 \\uCD94\\uCC9C \\uC9C8\\uBB38\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggest-cards\",\n              children: suggestedQuestions.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggest-category\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: category.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggest-cards-grid\",\n                  children: category.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggest-card\",\n                    onClick: () => handleSuggestedQuestion(question),\n                    children: question\n                  }, questionIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 23\n                }, this)]\n              }, categoryIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-role\",\n                  children: msg.role === 'user' ? '👤 사용자' : '🤖 AI'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: msg.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 513,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-body\",\n                children: msg.role === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-message\",\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ai-message\",\n                  children: [msg.content && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ai-response\",\n                    dangerouslySetInnerHTML: {\n                      __html: msg.content\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 522,\n                    columnNumber: 27\n                  }, this), msg.sql && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sql-result\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"sql-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"sql-label\",\n                        children: \"\\uD83D\\uDD0D \\uC0DD\\uC131\\uB41C SQL\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 527,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"sql-code\",\n                      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                        children: /*#__PURE__*/_jsxDEV(\"code\", {\n                          children: msg.sql\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 530,\n                          columnNumber: 36\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 530,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 529,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 525,\n                    columnNumber: 27\n                  }, this), msg.result && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"query-result\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"result-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"result-label\",\n                        children: \"\\uD83D\\uDCCA \\uC2E4\\uD589 \\uACB0\\uACFC\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 537,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 536,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"result-content\",\n                      children: msg.result.headers && msg.result.data ? /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"result-table\",\n                        children: /*#__PURE__*/_jsxDEV(\"table\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: msg.result.headers.map((header, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n                                children: header\n                              }, i, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 546,\n                                columnNumber: 43\n                              }, this))\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 544,\n                              columnNumber: 39\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 543,\n                            columnNumber: 37\n                          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                            children: msg.result.data.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: row.map((cell, j) => /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: cell\n                              }, j, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 554,\n                                columnNumber: 45\n                              }, this))\n                            }, i, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 552,\n                              columnNumber: 41\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 550,\n                            columnNumber: 37\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 542,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 541,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"result-text\",\n                        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                          children: /*#__PURE__*/_jsxDEV(\"code\", {\n                            children: JSON.stringify(msg.result, null, 2)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 563,\n                            columnNumber: 40\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 563,\n                          columnNumber: 35\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 562,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 535,\n                    columnNumber: 27\n                  }, this), msg.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error-message\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"error-icon\",\n                      children: \"\\u26A0\\uFE0F\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"error-text\",\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message message-ai\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-role\",\n                  children: \"\\uD83E\\uDD16 AI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: new Date().toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-body\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"loading-dots\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 593,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 594,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"AI\\uAC00 \\uC751\\uB2F5\\uC744 \\uC0DD\\uC131\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this), !currentConversationId && messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-conversation-selected\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uC0C8 \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD558\\uAC70\\uB098 \\uC67C\\uCABD\\uC5D0\\uC11C \\uAE30\\uC874 \\uB300\\uD654\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input-area\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: textareaRef,\n                value: input,\n                onChange: handleInputChange,\n                onKeyDown: handleKeyDown,\n                rows: textareaRows,\n                placeholder: \"\\uC790\\uC5F0\\uC5B4\\uB85C \\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694... (Shift+Enter\\uB85C \\uC904\\uBC14\\uAFC8)\",\n                disabled: !selectedDb || loading || !selectedAiModel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSend,\n                disabled: !input.trim() || !selectedDb || loading || !selectedAiModel || !currentConversationId,\n                className: \"send-button\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"send-icon\",\n                  children: \"\\uD83D\\uDCE4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 15\n            }, this), !selectedAiModel && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-warning\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u26A0\\uFE0F \\uC0AC\\uC6A9\\uD560 AI \\uBAA8\\uB378\\uC744 \\uBA3C\\uC800 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), !currentConversationId && selectedAiModel && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-warning\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u26A0\\uFE0F \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD558\\uAC70\\uB098 \\uAE30\\uC874 \\uB300\\uD654\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"Vw4Qy4/BCBk1zmO9I3v9NqfkkOk=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","ChatComponent","selectedDb","databases","onDbChange","_s","messages","setMessages","input","setInput","loading","setLoading","textareaRows","setTextareaRows","messagesEndRef","textareaRef","aiModels","setAiModels","selectedAiModel","setSelectedAiModel","conversations","setConversations","currentConversationId","setCurrentConversationId","newConversationTitle","setNewConversationTitle","suggestedQuestions","title","questions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchConversations","response","get","data","status","length","id","error","console","fetchMessages","formattedMessages","map","msg","role","content","sql","sql_query","result","sql_result","JSON","parse","timestamp","Date","toLocaleTimeString","fetchAiModels","openaiRes","azureOpenAIRes","geminiRes","claudeRes","allModels","keys","k","type","configs","c","currentSelected","find","m","is_selected","name","defaultModel","selectApiEndpoint","formData","FormData","append","post","then","log","catch","autoResizeTextarea","el","style","height","newHeight","Math","min","scrollHeight","ceil","handleSuggestedQuestion","question","_textareaRef$current","focus","handleNewConversation","e","preventDefault","trim","alert","conversation_id","convRes","handleSelectConversation","convId","handleDeleteConversation","window","confirm","delete","handleSend","conversationId","newConvResponse","URLSearchParams","db_name","substring","Error","userMessage","prev","message","assistantMessage","errorMessage","handleKeyDown","key","shiftKey","handleInputChange","target","value","handleResetChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","disabled","conv","onClick","updated_at","toLocaleString","stopPropagation","htmlFor","db","modelName","selected","model","category","categoryIndex","questionIndex","idx","dangerouslySetInnerHTML","__html","headers","header","i","row","cell","j","stringify","ref","onKeyDown","rows","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/ChatComponent.js"],"sourcesContent":["// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nfunction ChatComponent({ selectedDb, databases, onDbChange }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  const [aiModels, setAiModels] = useState([]);\n  const [selectedAiModel, setSelectedAiModel] = useState('');\n\n  const [conversations, setConversations] = useState([]); // 대화 목록\n  const [currentConversationId, setCurrentConversationId] = useState(null); // 현재 대화 ID\n  const [newConversationTitle, setNewConversationTitle] = useState(''); // 새 대화 제목\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [\n    {\n      title: '성능 분석',\n      questions: [\n        '오늘 가장 오래 걸린 쿼리 보여줘',\n        '슬로우 쿼리 10개만 보여줘',\n        '테이블별 row 수와 크기 알려줘'\n      ]\n    },\n    {\n      title: '데이터 탐색',\n      questions: [\n        '가장 row가 많은 테이블 알려줘',\n        '최근 7일간 생성된 데이터 보여줘',\n        '사용자 테이블의 구조를 설명해줘'\n      ]\n    },\n    {\n      title: '시스템 상태',\n      questions: [\n        '현재 활성 연결 수는?',\n        '데이터베이스 크기와 사용량 알려줘',\n        '인덱스 사용 현황을 분석해줘'\n      ]\n    }\n  ];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // DB 선택 변경 시 대화 목록 불러오기\n  useEffect(() => {\n    const fetchConversations = async () => {\n      if (selectedDb) {\n        try {\n          const response = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (response.data.status === 'success') {\n            const conversations = response.data.conversations;\n            setConversations(conversations);\n            if (conversations.length > 0) {\n              // 가장 최근 대화를 자동으로 선택\n              setCurrentConversationId(conversations[0].id);\n            } else {\n              // 대화가 없으면 현재 대화 초기화\n              setCurrentConversationId(null);\n              setMessages([]);\n            }\n          }\n        } catch (error) {\n          console.error('대화 목록을 불러오는데 실패했습니다:', error);\n          setConversations([]);\n        }\n      } else {\n        setConversations([]);\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    };\n\n    fetchConversations();\n  }, [selectedDb]);\n\n  // 현재 대화 ID 변경 시 메시지 불러오기\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (currentConversationId) {\n        try {\n          const response = await axios.get(`/api/conversations/${currentConversationId}/messages`);\n          if (response.data.status === 'success') {\n            // DB에서 불러온 메시지 형식 변환\n            const formattedMessages = response.data.messages.map(msg => ({\n              role: msg.role,\n              content: msg.content,\n              sql: msg.sql_query,\n              result: msg.sql_result ? JSON.parse(msg.sql_result) : null,\n              timestamp: new Date(msg.timestamp).toLocaleTimeString()\n            }));\n            setMessages(formattedMessages);\n          }\n        } catch (error) {\n          console.error('메시지를 불러오는데 실패했습니다:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n  }, [currentConversationId]);\n\n  // AI 모델 목록 불러오기 (한 번만 실행)\n  useEffect(() => {\n    const fetchAiModels = async () => {\n      try {\n        const openaiRes = await axios.get('/api/openai/keys');\n        const azureOpenAIRes = await axios.get('/api/azure-openai/configs');\n        const geminiRes = await axios.get('/api/gemini/configs');\n        const claudeRes = await axios.get('/api/claude/configs');\n\n        const allModels = [\n          ...openaiRes.data.keys.map(k => ({ ...k, type: 'openai' })),\n          ...azureOpenAIRes.data.configs.map(c => ({ ...c, type: 'azure_openai' })),\n          ...geminiRes.data.configs.map(c => ({ ...c, type: 'gemini' })),\n          ...claudeRes.data.configs.map(c => ({ ...c, type: 'claude' })),\n        ];\n        setAiModels(allModels);\n\n        const currentSelected = allModels.find(m => m.is_selected);\n        if (currentSelected) {\n          setSelectedAiModel(currentSelected.name);\n        } else if (allModels.length > 0) {\n          const defaultModel = allModels[0];\n          let selectApiEndpoint = '';\n          if (defaultModel.type === 'openai') selectApiEndpoint = '/api/openai/select';\n          else if (defaultModel.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';\n          else if (defaultModel.type === 'gemini') selectApiEndpoint = '/api/gemini/select';\n          else if (defaultModel.type === 'claude') selectApiEndpoint = '/api/claude/select';\n\n          if (selectApiEndpoint) {\n            const formData = new FormData();\n            formData.append('name', defaultModel.name);\n            axios.post(selectApiEndpoint, formData)\n              .then(() => {\n                setSelectedAiModel(defaultModel.name);\n                console.log(`Default AI model selected: ${defaultModel.name}`);\n              })\n              .catch(error => {\n                console.error('Error selecting default AI model:', error);\n              });\n          }\n        }\n\n      } catch (error) {\n        console.error('Error fetching AI models:', error);\n      }\n    };\n    fetchAiModels();\n  }, []);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = (el) => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = (question) => {\n    setInput(question);\n    textareaRef.current?.focus();\n  };\n\n  // 새 대화 시작\n  const handleNewConversation = async (e) => {\n    e.preventDefault();\n    if (!newConversationTitle.trim() || !selectedDb) {\n      alert('DB와 대화 제목을 입력해주세요.');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      formData.append('title', newConversationTitle);\n      const response = await axios.post('/api/conversations/new', formData);\n      if (response.data.status === 'success') {\n        setCurrentConversationId(response.data.conversation_id);\n        setNewConversationTitle('');\n        setMessages([]); // 새 대화 시작 시 메시지 초기화\n        // 대화 목록 새로고침\n        const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n        if (convRes.data.status === 'success') {\n          setConversations(convRes.data.conversations);\n        }\n      }\n    } catch (error) {\n      console.error('새 대화 생성 실패:', error);\n      alert('새 대화 생성에 실패했습니다.');\n    }\n  };\n\n  // 기존 대화 선택\n  const handleSelectConversation = (convId) => {\n    setCurrentConversationId(convId);\n  };\n\n  // 대화 삭제\n  const handleDeleteConversation = async (convId) => {\n    if (window.confirm('정말로 이 대화를 삭제하시겠습니까? 모든 메시지가 영구적으로 삭제됩니다.')) {\n      try {\n        await axios.delete(`/api/conversations/${convId}`);\n        // 대화 목록 새로고침\n        const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n        if (convRes.data.status === 'success') {\n          setConversations(convRes.data.conversations);\n        }\n        if (currentConversationId === convId) {\n          setCurrentConversationId(null);\n          setMessages([]);\n        }\n      } catch (error) {\n        console.error('대화 삭제 실패:', error);\n        alert('대화 삭제에 실패했습니다.');\n      }\n    }\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim() || !selectedDb) return;\n    \n    if (!selectedAiModel) {\n      alert('먼저 사용할 AI 모델을 선택해주세요.');\n      return;\n    }\n\n    let conversationId = currentConversationId;\n\n    // 현재 대화가 없으면 새로 생성\n    if (!conversationId) {\n      try {\n        const newConvResponse = await axios.post('/api/conversations/new', new URLSearchParams({\n          db_name: selectedDb,\n          title: input.substring(0, 30) // 첫 메시지를 제목으로 사용\n        }));\n        if (newConvResponse.data.status === 'success') {\n          conversationId = newConvResponse.data.conversation_id;\n          setCurrentConversationId(conversationId);\n          // 대화 목록 새로고침\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        } else {\n          throw new Error('Failed to create new conversation');\n        }\n      } catch (error) {\n        console.error('새 대화 생성 실패:', error);\n        alert('새 대화를 생성하는데 실패했습니다.');\n        return;\n      }\n    }\n    \n    const userMessage = { \n      role: 'user', \n      content: input,\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n    setTextareaRows(1);\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      formData.append('prompt', input);\n      formData.append('conversation_id', conversationId); // 대화 ID 전송\n\n      const response = await axios.post('/api/nl2sql', formData);\n\n      if (response.data.status === 'success') {\n        const data = response.data.message;\n        const assistantMessage = {\n          role: 'assistant',\n          content: data.content || '',\n          sql: data.sql || '',\n          result: data.result || null,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, assistantMessage]);\n      } else {\n        const errorMessage = {\n          role: 'assistant',\n          content: response.data.error || '알 수 없는 오류 발생',\n          error: true,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n    } catch (error) {\n      console.error('요청 처리 중 오류 발생:', error);\n      const errorMessage = {\n        role: 'assistant',\n        content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n        error: true,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화 (현재 대화의 메시지만 삭제)\n  const handleResetChat = async () => {\n    if (!currentConversationId) return;\n    \n    if (window.confirm('현재 대화의 모든 메시지를 초기화하시겠습니까?')) {\n      try {\n        const formData = new FormData();\n        formData.append('conversation_id', currentConversationId);\n        const response = await axios.post('/api/nl2sql/reset', formData);\n        \n        if (response.data.status === 'success') {\n          setMessages([]);\n          // 대화 목록 새로고침 (업데이트된 updated_at 반영)\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        }\n      } catch (error) {\n        console.error('채팅 초기화 오류:', error);\n        alert('채팅 초기화에 실패했습니다.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"chat-page-container\">\n      {/* 대화 목록 사이드바 */}\n      <div className=\"conversation-sidebar\">\n        <h3>대화 목록</h3>\n        <form onSubmit={handleNewConversation} className=\"new-conversation-form\">\n          <input\n            type=\"text\"\n            value={newConversationTitle}\n            onChange={(e) => setNewConversationTitle(e.target.value)}\n            placeholder=\"새 대화 제목...\"\n            disabled={!selectedDb}\n          />\n          <button type=\"submit\" disabled={!selectedDb || !newConversationTitle.trim()}>새 대화 시작</button>\n        </form>\n        <ul className=\"conversation-list list-group\">\n          {conversations.map(conv => (\n            <li \n              key={conv.id} \n              className={`list-group-item ${currentConversationId === conv.id ? 'active' : ''}`}\n              onClick={() => handleSelectConversation(conv.id)}\n            >\n              <span>{conv.title}</span>\n              <small>{new Date(conv.updated_at).toLocaleString()}</small>\n              <button \n                className=\"btn btn-sm btn-danger float-end\"\n                onClick={(e) => { \n                  e.stopPropagation(); \n                  handleDeleteConversation(conv.id); \n                }}\n              >\n                삭제\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"chat-container\">\n        {/* 채팅 헤더 */}\n        <div className=\"chat-header\">\n          <div className=\"header-left\">\n            <div className=\"db-selector\">\n              <label htmlFor=\"db-select\" className=\"prompt-label\">DB 선택</label>\n              <select \n                id=\"db-select\" \n                value={selectedDb || ''} \n                onChange={(e) => onDbChange(e.target.value)}\n              >\n                <option value=\"\">DB를 선택하세요</option>\n                <option value=\"__ALL_DBS__\">모든 DB</option>\n                {databases?.map(db => (\n                  <option key={db.name} value={db.name}>\n                    {db.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            {/* AI 모델 선택 드롭다운 */}\n            <div className=\"ai-model-selector ms-3\">\n              <label htmlFor=\"ai-model-select\" className=\"prompt-label\">AI 모델 선택</label>\n              <select \n                id=\"ai-model-select\" \n                value={selectedAiModel} \n                onChange={async (e) => {\n                  const modelName = e.target.value;\n                  const selected = aiModels.find(m => m.name === modelName);\n                  if (selected) {\n                    let selectApiEndpoint = '';\n                    if (selected.type === 'openai') selectApiEndpoint = '/api/openai/select';\n                    else if (selected.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';\n                    else if (selected.type === 'gemini') selectApiEndpoint = '/api/gemini/select';\n                    else if (selected.type === 'claude') selectApiEndpoint = '/api/claude/select';\n\n                    if (selectApiEndpoint) {\n                      try {\n                        const formData = new FormData();\n                        formData.append('name', selected.name);\n                        await axios.post(selectApiEndpoint, formData);\n                        setSelectedAiModel(selected.name);\n                        alert(`${selected.name} AI 모델이 선택되었습니다.`);\n                      } catch (error) {\n                        console.error('Error selecting AI model:', error);\n                        alert('AI 모델 선택에 실패했습니다.');\n                      }\n                    }\n                  }\n                }}\n              >\n                <option value=\"\">AI 모델 선택</option>\n                {aiModels.map(model => (\n                  <option key={model.name} value={model.name}>\n                    {model.name} ({model.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n\n          </div>\n          \n          <div className=\"header-actions\">\n            <button \n              onClick={handleResetChat} \n              disabled={!currentConversationId}\n              className=\"btn btn-outline\"\n              title=\"현재 대화 초기화\"\n            >\n              🔄 현재 대화 초기화\n            </button>\n          </div>\n        </div>\n\n        {/* 채팅 메시지 영역 */}\n        <div className=\"chat-messages\" id=\"chat-messages\">\n          <div className=\"chat-box\">\n            {/* 추천 질문 카드들 (첫 대화 전만 표시) */}\n            {messages.length === 0 && !currentConversationId && (\n              <div className=\"suggest-section\">\n                <h3>💡 추천 질문</h3>\n                <div className=\"suggest-cards\">\n                  {suggestedQuestions.map((category, categoryIndex) => (\n                    <div key={categoryIndex} className=\"suggest-category\">\n                      <h4>{category.title}</h4>\n                      <div className=\"suggest-cards-grid\">\n                        {category.questions.map((question, questionIndex) => (\n                          <div \n                            key={questionIndex}\n                            className=\"suggest-card\" \n                            onClick={() => handleSuggestedQuestion(question)}\n                          >\n                            {question}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* 메시지들 */}\n            {messages.map((msg, idx) => (\n              <div key={idx} className={`message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`}>\n                <div className=\"message-content\">\n                  <div className=\"message-header\">\n                    <span className=\"message-role\">\n                      {msg.role === 'user' ? '👤 사용자' : '🤖 AI'}\n                    </span>\n                    <span className=\"message-time\">{msg.timestamp}</span>\n                  </div>\n                  \n                  <div className=\"message-body\">\n                    {msg.role === 'user' ? (\n                      <div className=\"user-message\">{msg.content}</div>\n                    ) : (\n                      <div className=\"ai-message\">\n                        {msg.content && (\n                          <div className=\"ai-response\" dangerouslySetInnerHTML={{ __html: msg.content }} />\n                        )}\n                        {msg.sql && (\n                          <div className=\"sql-result\">\n                            <div className=\"sql-header\">\n                              <span className=\"sql-label\">🔍 생성된 SQL</span>\n                            </div>\n                            <div className=\"sql-code\">\n                              <pre><code>{msg.sql}</code></pre>\n                            </div>\n                          </div>\n                        )}\n                        {msg.result && (\n                          <div className=\"query-result\">\n                            <div className=\"result-header\">\n                              <span className=\"result-label\">📊 실행 결과</span>\n                            </div>\n                            <div className=\"result-content\">\n                              {msg.result.headers && msg.result.data ? (\n                                <div className=\"result-table\">\n                                  <table>\n                                    <thead>\n                                      <tr>\n                                        {msg.result.headers.map((header, i) => (\n                                          <th key={i}>{header}</th>\n                                        ))}\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {msg.result.data.map((row, i) => (\n                                        <tr key={i}>\n                                          {row.map((cell, j) => (\n                                            <td key={j}>{cell}</td>\n                                          ))}\n                                        </tr>\n                                      ))}\n                                    </tbody>\n                                  </table>\n                                </div>\n                              ) : (\n                                <div className=\"result-text\">\n                                  <pre><code>{JSON.stringify(msg.result, null, 2)}</code></pre>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                        {msg.error && (\n                          <div className=\"error-message\">\n                            <span className=\"error-icon\">⚠️</span>\n                            <span className=\"error-text\">{msg.content}</span>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n              \n            {/* 로딩 표시 */}\n            {loading && (\n              <div className=\"message message-ai\">\n                <div className=\"message-content\">\n                  <div className=\"message-header\">\n                    <span className=\"message-role\">🤖 AI</span>\n                    <span className=\"message-time\">{new Date().toLocaleTimeString()}</span>\n                  </div>\n                  <div className=\"message-body\">\n                    <div className=\"loading-message\">\n                      <div className=\"loading-dots\">\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                      </div>\n                      <span>AI가 응답을 생성하고 있습니다...</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n            {!currentConversationId && messages.length === 0 && (\n              <div className=\"no-conversation-selected\">\n                <p>새 대화를 시작하거나 왼쪽에서 기존 대화를 선택해주세요.</p>\n              </div>\n            )}\n            <div ref={messagesEndRef} />\n            <div className=\"chat-input-area\">\n              <div className=\"input-container\">\n                <textarea\n                  ref={textareaRef}\n                  value={input}\n                  onChange={handleInputChange}\n                  onKeyDown={handleKeyDown}\n                  rows={textareaRows}\n                  placeholder=\"자연어로 질문을 입력하세요... (Shift+Enter로 줄바꿈)\"\n                  disabled={!selectedDb || loading || !selectedAiModel}\n                />\n                <button \n                  onClick={handleSend} \n                  disabled={!input.trim() || !selectedDb || loading || !selectedAiModel || !currentConversationId}\n                  className=\"send-button\"\n                >\n                  <span className=\"send-icon\">📤</span>\n                </button>\n              </div>\n              {!selectedAiModel && (\n                <div className=\"input-warning\">\n                  <span>⚠️ 사용할 AI 모델을 먼저 선택해주세요.</span>\n                </div>\n              )}\n              {!currentConversationId && selectedAiModel && (\n                <div className=\"input-warning\">\n                  <span>⚠️ 대화를 시작하거나 기존 대화를 선택해주세요.</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}