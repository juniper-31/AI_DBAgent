{"ast":null,"code":"import _objectSpread from\"/Users/bskong/Repository/test/db-agent/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function DatabaseManager(_ref){let{databases,onDatabaseChange,onDatabaseDelete,onDatabaseAdd}=_ref;const[showForm,setShowForm]=useState(false);const[editingDb,setEditingDb]=useState(null);const[formData,setFormData]=useState({name:'',host:'',port:'',database:'',username:'',password:'',db_type:'mysql'});const[errors,setErrors]=useState({});const dbTypes=[{value:'mysql',label:'MySQL'},{value:'postgresql',label:'PostgreSQL'},{value:'sqlite',label:'SQLite'},{value:'oracle',label:'Oracle'},{value:'sqlserver',label:'SQL Server'}];// 폼 초기화\nconst resetForm=()=>{setFormData({name:'',host:'',port:'',database:'',username:'',password:'',db_type:'mysql'});setErrors({});setEditingDb(null);};// 폼 표시/숨김 토글\nconst toggleForm=()=>{if(showForm){resetForm();}setShowForm(!showForm);};// 편집 모드 시작\nconst startEdit=db=>{setFormData({name:db.name,host:db.host,port:db.port||'',database:db.database,username:db.username,password:db.password,db_type:db.db_type||'mysql'});setEditingDb(db);setShowForm(true);setErrors({});};// 입력 필드 변경 처리\nconst handleInputChange=e=>{const{name,value}=e.target;setFormData(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));// 에러 클리어\nif(errors[name]){setErrors(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:''}));}};// 폼 유효성 검사\nconst validateForm=()=>{const newErrors={};if(!formData.name.trim()){newErrors.name='DB 이름을 입력하세요';}if(!formData.host.trim()){newErrors.host='호스트를 입력하세요';}if(!formData.database.trim()){newErrors.database='데이터베이스명을 입력하세요';}if(!formData.username.trim()){newErrors.username='사용자명을 입력하세요';}if(!formData.password.trim()){newErrors.password='비밀번호를 입력하세요';}// 포트 번호 검증\nif(formData.port&&(isNaN(formData.port)||formData.port<1||formData.port>65535)){newErrors.port='유효한 포트 번호를 입력하세요 (1-65535)';}setErrors(newErrors);return Object.keys(newErrors).length===0;};// 폼 제출 처리\nconst handleSubmit=async e=>{e.preventDefault();if(!validateForm()){return;}try{const formDataToSend=new FormData();formDataToSend.append('name',formData.name);formDataToSend.append('host',formData.host);formDataToSend.append('port',formData.port);formDataToSend.append('user',formData.username);formDataToSend.append('password',formData.password);formDataToSend.append('dbname',formData.database);const response=await fetch('/api/databases',{method:'POST',body:formDataToSend});if(response.ok){const result=await response.json();if(result.status==='success'){onDatabaseChange();// 부모 컴포넌트에 변경 알림\nresetForm();setShowForm(false);}else{setErrors({general:'저장에 실패했습니다.'});}}else{throw new Error('요청 실패');}}catch(error){setErrors({general:'연결 오류가 발생했습니다.'});}};// DB 삭제 처리\nconst handleDelete=async dbName=>{if(!window.confirm(\"\\uC815\\uB9D0\\uB85C \\\"\".concat(dbName,\"\\\" \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0\\uC744 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"))){return;}try{const response=await fetch(\"/api/databases/\".concat(dbName),{method:'DELETE'});if(response.ok){const result=await response.json();if(result.status==='success'){onDatabaseDelete(dbName);}else{alert('삭제에 실패했습니다.');}}else{throw new Error('요청 실패');}}catch(error){alert('삭제 중 오류가 발생했습니다.');}};// 연결 테스트\nconst testConnection=async db=>{try{const response=await fetch('/api/databases/test',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(db),credentials:'include'});const result=await response.json();if(result.success){alert('연결 테스트 성공!');}else{alert(\"\\uC5F0\\uACB0 \\uD14C\\uC2A4\\uD2B8 \\uC2E4\\uD328: \".concat(result.message));}}catch(error){alert('연결 테스트 중 오류가 발생했습니다.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"database-manager\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"manager-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0 \\uAD00\\uB9AC\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleForm,className:\"btn \".concat(showForm?'btn-secondary':'btn-primary'),children:showForm?'취소':'새 DB 추가'})]}),showForm&&/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"db-form\",children:[/*#__PURE__*/_jsx(\"h3\",{children:editingDb?'DB 연결 수정':'새 DB 연결 추가'}),errors.general&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:errors.general}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"DB \\uC774\\uB984 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:handleInputChange,placeholder:\"\\uC608: production_db\",className:errors.name?'error':''}),errors.name&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.name})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"db_type\",children:\"DB \\uD0C0\\uC785\"}),/*#__PURE__*/_jsx(\"select\",{id:\"db_type\",name:\"db_type\",value:formData.db_type,onChange:handleInputChange,children:dbTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type.value,children:type.label},type.value))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"host\",children:\"\\uD638\\uC2A4\\uD2B8 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"host\",name:\"host\",value:formData.host,onChange:handleInputChange,placeholder:\"\\uC608: localhost \\uB610\\uB294 192.168.1.100\",className:errors.host?'error':''}),errors.host&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.host})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"port\",children:\"\\uD3EC\\uD2B8\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"port\",name:\"port\",value:formData.port,onChange:handleInputChange,placeholder:\"\\uAE30\\uBCF8\\uAC12 \\uC0AC\\uC6A9\",className:errors.port?'error':''}),errors.port&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.port})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"database\",children:\"\\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uBA85 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"database\",name:\"database\",value:formData.database,onChange:handleInputChange,placeholder:\"\\uC608: myapp_production\",className:errors.database?'error':''}),errors.database&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.database})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"\\uC0AC\\uC6A9\\uC790\\uBA85 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",name:\"username\",value:formData.username,onChange:handleInputChange,placeholder:\"\\uC608: dbuser\",className:errors.username?'error':''}),errors.username&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.username})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",className:errors.password?'error':''}),errors.password&&/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:errors.password})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:editingDb?'수정':'추가'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:toggleForm,className:\"btn btn-secondary\",children:\"\\uCDE8\\uC18C\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"database-list\",children:databases&&databases.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"db-grid\",children:databases.map(db=>/*#__PURE__*/_jsxs(\"div\",{className:\"db-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"db-card-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:db.name}),/*#__PURE__*/_jsx(\"div\",{className:\"db-type-badge\",children:db.db_type||'mysql'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"db-card-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"db-info\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD638\\uC2A4\\uD2B8:\"}),\" \",db.host]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD3EC\\uD2B8:\"}),\" \",db.port||'기본값']}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"DB:\"}),\" \",db.database]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC0AC\\uC6A9\\uC790:\"}),\" \",db.username]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"db-card-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>testConnection(db),className:\"btn btn-sm btn-outline\",title:\"\\uC5F0\\uACB0 \\uD14C\\uC2A4\\uD2B8\",children:\"\\uD83D\\uDD17 \\uD14C\\uC2A4\\uD2B8\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>startEdit(db),className:\"btn btn-sm btn-outline\",title:\"\\uC218\\uC815\",children:\"\\u270F\\uFE0F \\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(db.name),className:\"btn btn-sm btn-danger\",title:\"\\uC0AD\\uC81C\",children:\"\\uD83D\\uDDD1\\uFE0F \\uC0AD\\uC81C\"})]})]},db.name))}):/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uB4F1\\uB85D\\uB41C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4 \\uC5F0\\uACB0\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C8 DB \\uC5F0\\uACB0\\uC744 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694!\"})]})})]});}export default DatabaseManager;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","DatabaseManager","_ref","databases","onDatabaseChange","onDatabaseDelete","onDatabaseAdd","showForm","setShowForm","editingDb","setEditingDb","formData","setFormData","name","host","port","database","username","password","db_type","errors","setErrors","dbTypes","value","label","resetForm","toggleForm","startEdit","db","handleInputChange","e","target","prev","_objectSpread","validateForm","newErrors","trim","isNaN","Object","keys","length","handleSubmit","preventDefault","formDataToSend","FormData","append","response","fetch","method","body","ok","result","json","status","general","Error","error","handleDelete","dbName","window","confirm","concat","alert","testConnection","headers","JSON","stringify","credentials","success","message","className","children","onClick","onSubmit","htmlFor","type","id","onChange","placeholder","map","title"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/DatabaseManager.js"],"sourcesContent":["// DatabaseManager.js\n// DB 연결 관리, 폼, 리스트, 인라인 수정 등\nimport React, { useState, useEffect } from 'react';\n\nfunction DatabaseManager({ databases, onDatabaseChange, onDatabaseDelete, onDatabaseAdd }) {\n  const [showForm, setShowForm] = useState(false);\n  const [editingDb, setEditingDb] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    host: '',\n    port: '',\n    database: '',\n    username: '',\n    password: '',\n    db_type: 'mysql'\n  });\n  const [errors, setErrors] = useState({});\n\n  const dbTypes = [\n    { value: 'mysql', label: 'MySQL' },\n    { value: 'postgresql', label: 'PostgreSQL' },\n    { value: 'sqlite', label: 'SQLite' },\n    { value: 'oracle', label: 'Oracle' },\n    { value: 'sqlserver', label: 'SQL Server' }\n  ];\n\n  // 폼 초기화\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      host: '',\n      port: '',\n      database: '',\n      username: '',\n      password: '',\n      db_type: 'mysql'\n    });\n    setErrors({});\n    setEditingDb(null);\n  };\n\n  // 폼 표시/숨김 토글\n  const toggleForm = () => {\n    if (showForm) {\n      resetForm();\n    }\n    setShowForm(!showForm);\n  };\n\n  // 편집 모드 시작\n  const startEdit = (db) => {\n    setFormData({\n      name: db.name,\n      host: db.host,\n      port: db.port || '',\n      database: db.database,\n      username: db.username,\n      password: db.password,\n      db_type: db.db_type || 'mysql'\n    });\n    setEditingDb(db);\n    setShowForm(true);\n    setErrors({});\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // 에러 클리어\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  // 폼 유효성 검사\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.name.trim()) {\n      newErrors.name = 'DB 이름을 입력하세요';\n    }\n    \n    if (!formData.host.trim()) {\n      newErrors.host = '호스트를 입력하세요';\n    }\n    \n    if (!formData.database.trim()) {\n      newErrors.database = '데이터베이스명을 입력하세요';\n    }\n    \n    if (!formData.username.trim()) {\n      newErrors.username = '사용자명을 입력하세요';\n    }\n    \n    if (!formData.password.trim()) {\n      newErrors.password = '비밀번호를 입력하세요';\n    }\n\n    // 포트 번호 검증\n    if (formData.port && (isNaN(formData.port) || formData.port < 1 || formData.port > 65535)) {\n      newErrors.port = '유효한 포트 번호를 입력하세요 (1-65535)';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // 폼 제출 처리\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append('name', formData.name);\n      formDataToSend.append('host', formData.host);\n      formDataToSend.append('port', formData.port);\n      formDataToSend.append('user', formData.username);\n      formDataToSend.append('password', formData.password);\n      formDataToSend.append('dbname', formData.database);\n      \n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formDataToSend\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseChange(); // 부모 컴포넌트에 변경 알림\n          resetForm();\n          setShowForm(false);\n        } else {\n          setErrors({ general: '저장에 실패했습니다.' });\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      setErrors({ general: '연결 오류가 발생했습니다.' });\n    }\n  };\n\n  // DB 삭제 처리\n  const handleDelete = async (dbName) => {\n    if (!window.confirm(`정말로 \"${dbName}\" 데이터베이스 연결을 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/databases/${dbName}`, {\n        method: 'DELETE'\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.status === 'success') {\n          onDatabaseDelete(dbName);\n        } else {\n          alert('삭제에 실패했습니다.');\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      alert('삭제 중 오류가 발생했습니다.');\n    }\n  };\n\n  // 연결 테스트\n  const testConnection = async (db) => {\n    try {\n      const response = await fetch('/api/databases/test', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(db),\n        credentials: 'include'\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert('연결 테스트 성공!');\n      } else {\n        alert(`연결 테스트 실패: ${result.message}`);\n      }\n    } catch (error) {\n      alert('연결 테스트 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"database-manager\">\n      {/* 헤더 */}\n      <div className=\"manager-header\">\n        <h2>데이터베이스 연결 관리</h2>\n        <button \n          onClick={toggleForm} \n          className={`btn ${showForm ? 'btn-secondary' : 'btn-primary'}`}\n        >\n          {showForm ? '취소' : '새 DB 추가'}\n        </button>\n      </div>\n\n      {/* DB 추가/편집 폼 */}\n      {showForm && (\n        <div className=\"form-container\">\n          <form onSubmit={handleSubmit} className=\"db-form\">\n            <h3>{editingDb ? 'DB 연결 수정' : '새 DB 연결 추가'}</h3>\n            \n            {errors.general && (\n              <div className=\"error-message\">{errors.general}</div>\n            )}\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"name\">DB 이름 *</label>\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleInputChange}\n                  placeholder=\"예: production_db\"\n                  className={errors.name ? 'error' : ''}\n                />\n                {errors.name && <span className=\"error-text\">{errors.name}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"db_type\">DB 타입</label>\n                <select\n                  id=\"db_type\"\n                  name=\"db_type\"\n                  value={formData.db_type}\n                  onChange={handleInputChange}\n                >\n                  {dbTypes.map(type => (\n                    <option key={type.value} value={type.value}>\n                      {type.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"host\">호스트 *</label>\n                <input\n                  type=\"text\"\n                  id=\"host\"\n                  name=\"host\"\n                  value={formData.host}\n                  onChange={handleInputChange}\n                  placeholder=\"예: localhost 또는 192.168.1.100\"\n                  className={errors.host ? 'error' : ''}\n                />\n                {errors.host && <span className=\"error-text\">{errors.host}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"port\">포트</label>\n                <input\n                  type=\"number\"\n                  id=\"port\"\n                  name=\"port\"\n                  value={formData.port}\n                  onChange={handleInputChange}\n                  placeholder=\"기본값 사용\"\n                  className={errors.port ? 'error' : ''}\n                />\n                {errors.port && <span className=\"error-text\">{errors.port}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"database\">데이터베이스명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"database\"\n                  name=\"database\"\n                  value={formData.database}\n                  onChange={handleInputChange}\n                  placeholder=\"예: myapp_production\"\n                  className={errors.database ? 'error' : ''}\n                />\n                {errors.database && <span className=\"error-text\">{errors.database}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">사용자명 *</label>\n                <input\n                  type=\"text\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={formData.username}\n                  onChange={handleInputChange}\n                  placeholder=\"예: dbuser\"\n                  className={errors.username ? 'error' : ''}\n                />\n                {errors.username && <span className=\"error-text\">{errors.username}</span>}\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"password\">비밀번호 *</label>\n                <input\n                  type=\"password\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  placeholder=\"비밀번호 입력\"\n                  className={errors.password ? 'error' : ''}\n                />\n                {errors.password && <span className=\"error-text\">{errors.password}</span>}\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {editingDb ? '수정' : '추가'}\n              </button>\n              <button type=\"button\" onClick={toggleForm} className=\"btn btn-secondary\">\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* DB 목록 */}\n      <div className=\"database-list\">\n        {databases && databases.length > 0 ? (\n          <div className=\"db-grid\">\n            {databases.map(db => (\n              <div key={db.name} className=\"db-card\">\n                <div className=\"db-card-header\">\n                  <h4>{db.name}</h4>\n                  <div className=\"db-type-badge\">{db.db_type || 'mysql'}</div>\n                </div>\n                \n                <div className=\"db-card-body\">\n                  <div className=\"db-info\">\n                    <div><strong>호스트:</strong> {db.host}</div>\n                    <div><strong>포트:</strong> {db.port || '기본값'}</div>\n                    <div><strong>DB:</strong> {db.database}</div>\n                    <div><strong>사용자:</strong> {db.username}</div>\n                  </div>\n                </div>\n                \n                <div className=\"db-card-actions\">\n                  <button \n                    onClick={() => testConnection(db)}\n                    className=\"btn btn-sm btn-outline\"\n                    title=\"연결 테스트\"\n                  >\n                    🔗 테스트\n                  </button>\n                  <button \n                    onClick={() => startEdit(db)}\n                    className=\"btn btn-sm btn-outline\"\n                    title=\"수정\"\n                  >\n                    ✏️ 수정\n                  </button>\n                  <button \n                    onClick={() => handleDelete(db.name)}\n                    className=\"btn btn-sm btn-danger\"\n                    title=\"삭제\"\n                  >\n                    🗑️ 삭제\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"empty-state\">\n            <p>등록된 데이터베이스 연결이 없습니다.</p>\n            <p>새 DB 연결을 추가해보세요!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default DatabaseManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}