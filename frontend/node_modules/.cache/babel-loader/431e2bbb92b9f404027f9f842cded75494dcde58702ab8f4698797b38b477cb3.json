{"ast":null,"code":"// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React,{useState,useEffect,useRef}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ChatComponent(_ref){let{selectedDb,databases,onDbChange,onResetChat}=_ref;const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[loading,setLoading]=useState(false);const[textareaRows,setTextareaRows]=useState(1);const[openaiKeys,setOpenaiKeys]=useState([]);const[selectedOpenAIKey,setSelectedOpenAIKey]=useState('');const messagesEndRef=useRef(null);const textareaRef=useRef(null);// 추천 질문들 (카드형)\nconst suggestedQuestions=[{title:'성능 분석',questions:['오늘 가장 오래 걸린 쿼리 보여줘','슬로우 쿼리 10개만 보여줘','테이블별 row 수와 크기 알려줘']},{title:'데이터 탐색',questions:['가장 row가 많은 테이블 알려줘','최근 7일간 생성된 데이터 보여줘','사용자 테이블의 구조를 설명해줘']},{title:'시스템 상태',questions:['현재 활성 연결 수는?','데이터베이스 크기와 사용량 알려줘','인덱스 사용 현황을 분석해줘']}];// 자동 스크롤\nconst scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);// OpenAI 키 목록 가져오기\nconst fetchOpenAIKeys=async()=>{try{const response=await fetch('/api/openai/keys');if(response.ok){const data=await response.json();setOpenaiKeys(data.keys||[]);setSelectedOpenAIKey(data.selected||'');}}catch(error){console.error('OpenAI 키 목록 가져오기 실패:',error);}};useEffect(()=>{fetchOpenAIKeys();},[]);// 텍스트 영역 자동 크기 조정\nconst autoResizeTextarea=el=>{el.style.height='auto';const newHeight=Math.min(el.scrollHeight,120);// 최대 5줄\nel.style.height=newHeight+'px';setTextareaRows(Math.ceil(newHeight/24));};// 추천 질문 클릭\nconst handleSuggestedQuestion=question=>{var _textareaRef$current;setInput(question);(_textareaRef$current=textareaRef.current)===null||_textareaRef$current===void 0?void 0:_textareaRef$current.focus();};// 메시지 전송\nconst handleSend=async()=>{if(!input.trim()||!selectedDb)return;if(!selectedOpenAIKey){alert('먼저 OpenAI API 키를 선택해주세요. OpenAI 설정에서 키를 등록하고 선택하세요.');return;}const userMessage={role:'user',content:input,timestamp:new Date().toLocaleTimeString()};setMessages(prev=>[...prev,userMessage]);setLoading(true);setInput('');setTextareaRows(1);if(textareaRef.current){textareaRef.current.style.height='auto';}try{const formData=new FormData();formData.append('db_name',selectedDb);formData.append('prompt',input);const response=await fetch('/api/nl2sql',{method:'POST',body:formData});if(response.ok){const data=await response.json();if(data.error){const errorMessage={role:'assistant',content:data.error,error:true,timestamp:new Date().toLocaleTimeString()};setMessages(prev=>[...prev,errorMessage]);}else{const assistantMessage={role:'assistant',content:data.message.content||'',sql:data.message.sql||'',result:data.message.result||null,timestamp:new Date().toLocaleTimeString()};setMessages(prev=>[...prev,assistantMessage]);}}else{throw new Error('요청 실패');}}catch(error){const errorMessage={role:'assistant',content:'죄송합니다. 요청 처리 중 오류가 발생했습니다.',error:true,timestamp:new Date().toLocaleTimeString()};setMessages(prev=>[...prev,errorMessage]);}finally{setLoading(false);}};// 키보드 이벤트 처리\nconst handleKeyDown=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();handleSend();}};// 텍스트 영역 입력 처리\nconst handleInputChange=e=>{setInput(e.target.value);autoResizeTextarea(e.target);};// 채팅 초기화\nconst handleResetChat=async()=>{if(!selectedDb)return;try{const formData=new FormData();formData.append('db_name',selectedDb);const response=await fetch('/api/nl2sql/reset',{method:'POST',body:formData});if(response.ok){setMessages([]);}}catch(error){console.error('채팅 초기화 오류:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"db-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"db-select\",className:\"prompt-label\",children:\"DB \\uC120\\uD0DD\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"db-select\",value:selectedDb||'',onChange:e=>onDbChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"DB\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"}),databases===null||databases===void 0?void 0:databases.map(db=>/*#__PURE__*/_jsx(\"option\",{value:db.name,children:db.name},db.name))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"openai-status\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:\"OpenAI:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"status-value \".concat(selectedOpenAIKey?'connected':'disconnected'),children:selectedOpenAIKey?'연결됨':'미연결'})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"header-actions\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleResetChat,disabled:!selectedDb,className:\"btn btn-outline\",title:\"\\uB300\\uD654 \\uCD08\\uAE30\\uD654\",children:\"\\uD83D\\uDD04 \\uCD08\\uAE30\\uD654\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",id:\"chat-messages\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-box\",children:[messages.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"suggest-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCA1 \\uCD94\\uCC9C \\uC9C8\\uBB38\"}),/*#__PURE__*/_jsx(\"div\",{className:\"suggest-cards\",children:suggestedQuestions.map((category,categoryIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"suggest-category\",children:[/*#__PURE__*/_jsx(\"h4\",{children:category.title}),/*#__PURE__*/_jsx(\"div\",{className:\"suggest-cards-grid\",children:category.questions.map((question,questionIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"suggest-card\",onClick:()=>handleSuggestedQuestion(question),children:question},questionIndex))})]},categoryIndex))})]}),messages.map((msg,idx)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(msg.role==='user'?'message-user':'message-ai'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-role\",children:msg.role==='user'?'👤 사용자':'🤖 AI'}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:msg.timestamp})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-body\",children:msg.role==='user'?/*#__PURE__*/_jsx(\"div\",{className:\"user-message\",children:msg.content}):/*#__PURE__*/_jsxs(\"div\",{className:\"ai-message\",children:[msg.content&&/*#__PURE__*/_jsx(\"div\",{className:\"ai-response\",dangerouslySetInnerHTML:{__html:msg.content}}),msg.sql&&/*#__PURE__*/_jsxs(\"div\",{className:\"sql-result\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sql-header\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sql-label\",children:\"\\uD83D\\uDD0D \\uC0DD\\uC131\\uB41C SQL\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"sql-code\",children:/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{children:msg.sql})})})]}),msg.result&&/*#__PURE__*/_jsxs(\"div\",{className:\"query-result\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"result-header\",children:/*#__PURE__*/_jsx(\"span\",{className:\"result-label\",children:\"\\uD83D\\uDCCA \\uC2E4\\uD589 \\uACB0\\uACFC\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"result-content\",children:msg.result.headers&&msg.result.data?/*#__PURE__*/_jsx(\"div\",{className:\"result-table\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:msg.result.headers.map((header,i)=>/*#__PURE__*/_jsx(\"th\",{children:header},i))})}),/*#__PURE__*/_jsx(\"tbody\",{children:msg.result.data.map((row,i)=>/*#__PURE__*/_jsx(\"tr\",{children:row.map((cell,j)=>/*#__PURE__*/_jsx(\"td\",{children:cell},j))},i))})]})}):/*#__PURE__*/_jsx(\"div\",{className:\"result-text\",children:/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{children:JSON.stringify(msg.result,null,2)})})})})]}),msg.error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"error-icon\",children:\"\\u26A0\\uFE0F\"}),/*#__PURE__*/_jsx(\"span\",{className:\"error-text\",children:msg.content})]})]})})]})},idx)),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"message message-ai\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-role\",children:\"\\uD83E\\uDD16 AI\"}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:new Date().toLocaleTimeString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-message\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"loading-dots\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"span\",{children:\"AI\\uAC00 \\uC751\\uB2F5\\uC744 \\uC0DD\\uC131\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"})]})})]})})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"textarea\",{ref:textareaRef,value:input,onChange:handleInputChange,onKeyDown:handleKeyDown,rows:textareaRows,placeholder:\"\\uC790\\uC5F0\\uC5B4\\uB85C \\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694... (Shift+Enter\\uB85C \\uC904\\uBC14\\uAFC8)\",disabled:!selectedDb||loading||!selectedOpenAIKey}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,disabled:!input.trim()||!selectedDb||loading||!selectedOpenAIKey,className:\"send-button\",children:/*#__PURE__*/_jsx(\"span\",{className:\"send-icon\",children:\"\\uD83D\\uDCE4\"})})]}),!selectedOpenAIKey&&/*#__PURE__*/_jsx(\"div\",{className:\"input-warning\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\u26A0\\uFE0F OpenAI API \\uD0A4\\uB97C \\uBA3C\\uC800 \\uC124\\uC815\\uD574\\uC8FC\\uC138\\uC694.\"})})]})]});}export default ChatComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","ChatComponent","_ref","selectedDb","databases","onDbChange","onResetChat","messages","setMessages","input","setInput","loading","setLoading","textareaRows","setTextareaRows","openaiKeys","setOpenaiKeys","selectedOpenAIKey","setSelectedOpenAIKey","messagesEndRef","textareaRef","suggestedQuestions","title","questions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchOpenAIKeys","response","fetch","ok","data","json","keys","selected","error","console","autoResizeTextarea","el","style","height","newHeight","Math","min","scrollHeight","ceil","handleSuggestedQuestion","question","_textareaRef$current","focus","handleSend","trim","alert","userMessage","role","content","timestamp","Date","toLocaleTimeString","prev","formData","FormData","append","method","body","errorMessage","assistantMessage","message","sql","result","Error","handleKeyDown","e","key","shiftKey","preventDefault","handleInputChange","target","value","handleResetChat","className","children","htmlFor","id","onChange","map","db","name","concat","onClick","disabled","length","category","categoryIndex","questionIndex","msg","idx","dangerouslySetInnerHTML","__html","headers","header","i","row","cell","j","JSON","stringify","ref","onKeyDown","rows","placeholder"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/ChatComponent.js"],"sourcesContent":["// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\n\nfunction ChatComponent({ selectedDb, databases, onDbChange, onResetChat }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const [openaiKeys, setOpenaiKeys] = useState([]);\n  const [selectedOpenAIKey, setSelectedOpenAIKey] = useState('');\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [\n    {\n      title: '성능 분석',\n      questions: [\n        '오늘 가장 오래 걸린 쿼리 보여줘',\n        '슬로우 쿼리 10개만 보여줘',\n        '테이블별 row 수와 크기 알려줘'\n      ]\n    },\n    {\n      title: '데이터 탐색',\n      questions: [\n        '가장 row가 많은 테이블 알려줘',\n        '최근 7일간 생성된 데이터 보여줘',\n        '사용자 테이블의 구조를 설명해줘'\n      ]\n    },\n    {\n      title: '시스템 상태',\n      questions: [\n        '현재 활성 연결 수는?',\n        '데이터베이스 크기와 사용량 알려줘',\n        '인덱스 사용 현황을 분석해줘'\n      ]\n    }\n  ];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // OpenAI 키 목록 가져오기\n  const fetchOpenAIKeys = async () => {\n    try {\n      const response = await fetch('/api/openai/keys');\n      if (response.ok) {\n        const data = await response.json();\n        setOpenaiKeys(data.keys || []);\n        setSelectedOpenAIKey(data.selected || '');\n      }\n    } catch (error) {\n      console.error('OpenAI 키 목록 가져오기 실패:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchOpenAIKeys();\n  }, []);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = (el) => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = (question) => {\n    setInput(question);\n    textareaRef.current?.focus();\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim() || !selectedDb) return;\n    \n    if (!selectedOpenAIKey) {\n      alert('먼저 OpenAI API 키를 선택해주세요. OpenAI 설정에서 키를 등록하고 선택하세요.');\n      return;\n    }\n    \n    const userMessage = { \n      role: 'user', \n      content: input,\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    setInput('');\n    setTextareaRows(1);\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n      formData.append('prompt', input);\n\n      const response = await fetch('/api/nl2sql', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.error) {\n          const errorMessage = {\n            role: 'assistant',\n            content: data.error,\n            error: true,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, errorMessage]);\n        } else {\n          const assistantMessage = {\n            role: 'assistant',\n            content: data.message.content || '',\n            sql: data.message.sql || '',\n            result: data.message.result || null,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, assistantMessage]);\n        }\n      } else {\n        throw new Error('요청 실패');\n      }\n    } catch (error) {\n      const errorMessage = {\n        role: 'assistant',\n        content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n        error: true,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화\n  const handleResetChat = async () => {\n    if (!selectedDb) return;\n    \n    try {\n      const formData = new FormData();\n      formData.append('db_name', selectedDb);\n\n      const response = await fetch('/api/nl2sql/reset', {\n        method: 'POST',\n        body: formData\n      });\n      \n      if (response.ok) {\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('채팅 초기화 오류:', error);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {/* 채팅 헤더 */}\n      <div className=\"chat-header\">\n        <div className=\"header-left\">\n          <div className=\"db-selector\">\n            <label htmlFor=\"db-select\" className=\"prompt-label\">DB 선택</label>\n            <select \n              id=\"db-select\" \n              value={selectedDb || ''} \n              onChange={(e) => onDbChange(e.target.value)}\n            >\n              <option value=\"\">DB를 선택하세요</option>\n              {databases?.map(db => (\n                <option key={db.name} value={db.name}>\n                  {db.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"openai-status\">\n            <span className=\"status-label\">OpenAI:</span>\n            <span className={`status-value ${selectedOpenAIKey ? 'connected' : 'disconnected'}`}>\n              {selectedOpenAIKey ? '연결됨' : '미연결'}\n            </span>\n          </div>\n        </div>\n        \n        <div className=\"header-actions\">\n          <button \n            onClick={handleResetChat} \n            disabled={!selectedDb}\n            className=\"btn btn-outline\"\n            title=\"대화 초기화\"\n          >\n            🔄 초기화\n          </button>\n        </div>\n      </div>\n\n      {/* 채팅 메시지 영역 */}\n      <div className=\"chat-messages\" id=\"chat-messages\">\n        <div className=\"chat-box\">\n          {/* 추천 질문 카드들 (첫 대화 전만 표시) */}\n          {messages.length === 0 && (\n            <div className=\"suggest-section\">\n              <h3>💡 추천 질문</h3>\n              <div className=\"suggest-cards\">\n                {suggestedQuestions.map((category, categoryIndex) => (\n                  <div key={categoryIndex} className=\"suggest-category\">\n                    <h4>{category.title}</h4>\n                    <div className=\"suggest-cards-grid\">\n                      {category.questions.map((question, questionIndex) => (\n                        <div \n                          key={questionIndex}\n                          className=\"suggest-card\" \n                          onClick={() => handleSuggestedQuestion(question)}\n                        >\n                          {question}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* 메시지들 */}\n          {messages.map((msg, idx) => (\n            <div key={idx} className={`message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`}>\n              <div className=\"message-content\">\n                <div className=\"message-header\">\n                  <span className=\"message-role\">\n                    {msg.role === 'user' ? '👤 사용자' : '🤖 AI'}\n                  </span>\n                  <span className=\"message-time\">{msg.timestamp}</span>\n                </div>\n                \n                <div className=\"message-body\">\n                  {msg.role === 'user' ? (\n                    <div className=\"user-message\">{msg.content}</div>\n                  ) : (\n                    <div className=\"ai-message\">\n                      {msg.content && (\n                        <div className=\"ai-response\" dangerouslySetInnerHTML={{ __html: msg.content }} />\n                      )}\n                      {msg.sql && (\n                        <div className=\"sql-result\">\n                          <div className=\"sql-header\">\n                            <span className=\"sql-label\">🔍 생성된 SQL</span>\n                          </div>\n                          <div className=\"sql-code\">\n                            <pre><code>{msg.sql}</code></pre>\n                          </div>\n                        </div>\n                      )}\n                      {msg.result && (\n                        <div className=\"query-result\">\n                          <div className=\"result-header\">\n                            <span className=\"result-label\">📊 실행 결과</span>\n                          </div>\n                          <div className=\"result-content\">\n                            {msg.result.headers && msg.result.data ? (\n                              <div className=\"result-table\">\n                                <table>\n                                  <thead>\n                                    <tr>\n                                      {msg.result.headers.map((header, i) => (\n                                        <th key={i}>{header}</th>\n                                      ))}\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {msg.result.data.map((row, i) => (\n                                      <tr key={i}>\n                                        {row.map((cell, j) => (\n                                          <td key={j}>{cell}</td>\n                                        ))}\n                                      </tr>\n                                    ))}\n                                  </tbody>\n                                </table>\n                              </div>\n                            ) : (\n                              <div className=\"result-text\">\n                                <pre><code>{JSON.stringify(msg.result, null, 2)}</code></pre>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      )}\n                      {msg.error && (\n                        <div className=\"error-message\">\n                          <span className=\"error-icon\">⚠️</span>\n                          <span className=\"error-text\">{msg.content}</span>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n          \n          {/* 로딩 표시 */}\n          {loading && (\n            <div className=\"message message-ai\">\n              <div className=\"message-content\">\n                <div className=\"message-header\">\n                  <span className=\"message-role\">🤖 AI</span>\n                  <span className=\"message-time\">{new Date().toLocaleTimeString()}</span>\n                </div>\n                <div className=\"message-body\">\n                  <div className=\"loading-message\">\n                    <div className=\"loading-dots\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                    </div>\n                    <span>AI가 응답을 생성하고 있습니다...</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* 입력 영역 */}\n      <div className=\"chat-input-area\">\n        <div className=\"input-container\">\n          <textarea\n            ref={textareaRef}\n            value={input}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            rows={textareaRows}\n            placeholder=\"자연어로 질문을 입력하세요... (Shift+Enter로 줄바꿈)\"\n            disabled={!selectedDb || loading || !selectedOpenAIKey}\n          />\n          <button \n            onClick={handleSend} \n            disabled={!input.trim() || !selectedDb || loading || !selectedOpenAIKey}\n            className=\"send-button\"\n          >\n            <span className=\"send-icon\">📤</span>\n          </button>\n        </div>\n        \n        {!selectedOpenAIKey && (\n          <div className=\"input-warning\">\n            <span>⚠️ OpenAI API 키를 먼저 설정해주세요.</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}