{"ast":null,"code":"// AwsIntegrationComponent.js\n// AWS 인증, RDS/CloudWatch 연동, 상태 표시\nimport React,{useState,useEffect}from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function AwsIntegrationComponent(_ref){var _rdsInstances$find,_rdsInstances$find2,_rdsInstances$find3,_rdsInstances$find3$E;let{selectedDb,databases}=_ref;const[credentialsList,setCredentialsList]=useState([]);const[selectedId,setSelectedId]=useState(null);const[authType,setAuthType]=useState('accessKey');const[accessKey,setAccessKey]=useState('');const[secretKey,setSecretKey]=useState('');const[sessionToken,setSessionToken]=useState('');const[ssoStartUrl,setSsoStartUrl]=useState('');const[ssoRegion,setSsoRegion]=useState('ap-northeast-2');const[ssoAccountId,setSsoAccountId]=useState('');const[ssoRoleName,setSsoRoleName]=useState('');const[awsRegion,setAwsRegion]=useState('ap-northeast-2');const[cloudwatchNamespace,setCloudwatchNamespace]=useState('AWS/RDS');const[isConnected,setIsConnected]=useState(false);const[connectionStatus,setConnectionStatus]=useState('disconnected');const[rdsInstances,setRdsInstances]=useState([]);const[cloudwatchMetrics,setCloudwatchMetrics]=useState({});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const awsRegions=[{value:'us-east-1',label:'US East (N. Virginia)'},{value:'us-east-2',label:'US East (Ohio)'},{value:'us-west-1',label:'US West (N. California)'},{value:'us-west-2',label:'US West (Oregon)'},{value:'ap-northeast-1',label:'Asia Pacific (Tokyo)'},{value:'ap-northeast-2',label:'Asia Pacific (Seoul)'},{value:'ap-southeast-1',label:'Asia Pacific (Singapore)'},{value:'ap-southeast-2',label:'Asia Pacific (Sydney)'},{value:'eu-west-1',label:'Europe (Ireland)'},{value:'eu-central-1',label:'Europe (Frankfurt)'}];// 인증 방식 옵션\nconst authTypes=[{value:'accessKey',label:'Access Key'},{value:'iamRole',label:'IAM Role (EC2/ECS/EKS)'},{value:'sso',label:'AWS SSO'}];// 리스트 불러오기\nconst loadCredentials=async()=>{const res=await fetch('/aws/credentials');if(res.ok){const list=await res.json();setCredentialsList(list);const active=list.find(c=>c.is_active);if(active){setSelectedId(active.id);setAccessKey(active.access_key);setSecretKey('********');setSessionToken('');setAwsRegion(active.region||'ap-northeast-2');setConnectionStatus('connected');setIsConnected(true);}else{setSelectedId(null);setConnectionStatus('disconnected');setIsConnected(false);}}};useEffect(()=>{loadCredentials();},[]);// 연결 성공 시 RDS 인스턴스 자동 조회\nuseEffect(()=>{if(isConnected){fetchRdsInstances();}},[isConnected]);// 등록\nconst handleSave=async()=>{setError('');setSuccess('');setLoading(true);const payload={name:accessKey.slice(0,8)+'...',access_key:accessKey,secret_key:secretKey,session_token:sessionToken,region:awsRegion,is_active:true};const res=await fetch('/aws/credentials',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(res.ok){setSuccess('설정이 저장되었습니다!');await loadCredentials();}else{setError('저장 실패');}setLoading(false);};// 삭제\nconst handleDelete=async id=>{setLoading(true);await fetch(\"/aws/credentials/\".concat(id),{method:'DELETE'});await loadCredentials();setLoading(false);};// 활성화(선택)\nconst handleActivate=async id=>{setLoading(true);await fetch(\"/aws/credentials/\".concat(id,\"/activate\"),{method:'POST'});await loadCredentials();setLoading(false);};// 연결 테스트\nconst handleTest=async()=>{setLoading(true);setError('');setSuccess('');const cred=credentialsList.find(c=>c.id===selectedId);if(!cred){setError('선택된 인증정보가 없습니다.');setLoading(false);return;}const payload={accessKey:cred.access_key,secretKey:secretKey==='********'?'':secretKey,sessionToken:sessionToken,awsRegion:cred.region};const res=await fetch('/aws/auth/test',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const data=await res.json();if(data.success){setSuccess('연결 성공!');setConnectionStatus('connected');setIsConnected(true);}else{setError('연결 실패: '+(data.message||'오류'));setConnectionStatus('disconnected');setIsConnected(false);}setLoading(false);};// RDS 인스턴스 목록 가져오기\nconst fetchRdsInstances=async()=>{if(!isConnected)return;setLoading(true);try{const response=await fetch('/aws/rds-instances');if(response.ok){const data=await response.json();setRdsInstances(data.instances||[]);}else{console.error('RDS 인스턴스 목록 가져오기 실패');}}catch(error){console.error('RDS 인스턴스 요청 오류:',error);}finally{setLoading(false);}};// CloudWatch 메트릭 가져오기\nconst fetchCloudWatchMetrics=async()=>{if(!isConnected||!awsRegion)return;setLoading(true);try{const params=new URLSearchParams({region:awsRegion,namespace:cloudwatchNamespace});const response=await fetch(\"/aws/cloudwatch/metrics?\".concat(params));if(response.ok){const data=await response.json();setCloudwatchMetrics(data.metrics||{});}else{console.error('CloudWatch 메트릭 가져오기 실패');}}catch(error){console.error('CloudWatch 메트릭 요청 오류:',error);}finally{setLoading(false);}};// 입력 필드 변경 처리\nconst handleInputChange=(key,value)=>{if(key==='accessKey')setAccessKey(value);else if(key==='secretKey')setSecretKey(value);else if(key==='sessionToken')setSessionToken(value);else if(key==='ssoStartUrl')setSsoStartUrl(value);else if(key==='ssoRegion')setSsoRegion(value);else if(key==='ssoAccountId')setSsoAccountId(value);else if(key==='ssoRoleName')setSsoRoleName(value);else if(key==='awsRegion')setAwsRegion(value);else if(key==='cloudwatchNamespace')setCloudwatchNamespace(value);};// RDS 인스턴스 선택\nconst handleRdsInstanceSelect=instanceId=>{handleInputChange('rds_instance_id',instanceId);};// 연결 상태에 따른 색상\nconst getStatusColor=status=>{switch(status){case'connected':return'#28a745';case'connecting':return'#ffc107';case'error':return'#dc3545';default:return'#6c757d';}};// 메트릭 카드 렌더링\nconst renderMetricCard=function(title,value){let unit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';let status=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;return/*#__PURE__*/_jsxs(\"div\",{className:\"metric-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:title}),status&&/*#__PURE__*/_jsx(\"span\",{className:\"status-badge\",style:{backgroundColor:getStatusColor(status)},children:status})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-value\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"value\",children:value}),unit&&/*#__PURE__*/_jsx(\"span\",{className:\"unit\",children:unit})]})]});};// getAuthPayload 함수도 iamRole 처리 추가\nconst getAuthPayload=()=>{if(authType==='accessKey'){return{authType,accessKey,secretKey,sessionToken,awsRegion,cloudwatchNamespace};}else if(authType==='iamRole'){return{authType,awsRegion,cloudwatchNamespace};}else{return{authType,ssoStartUrl,ssoRegion,ssoAccountId,ssoRoleName,awsRegion,cloudwatchNamespace};}};return/*#__PURE__*/_jsxs(\"div\",{className:\"aws-integration-component\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"component-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"AWS \\uD1B5\\uD569\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"connection-status\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-indicator\",style:{backgroundColor:getStatusColor(connectionStatus)}}),/*#__PURE__*/_jsxs(\"span\",{className:\"status-text\",children:[connectionStatus==='connected'&&'연결됨',connectionStatus==='connecting'&&'연결 중...',connectionStatus==='error'&&'연결 오류',connectionStatus==='disconnected'&&'연결 안됨']})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"aws-config-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"AWS \\uC778\\uC99D \\uC124\\uC815\"}),isConnected&&/*#__PURE__*/_jsxs(\"div\",{className:\"current-config-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD604\\uC7AC \\uC5F0\\uACB0 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Access Key:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[accessKey.substring(0,4),\"...\",accessKey.slice(-4)]})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"AWS Region:\"}),/*#__PURE__*/_jsx(\"span\",{children:awsRegion})]})]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C8\\uB85C\\uC6B4 \\uC815\\uBCF4\\uB97C \\uC785\\uB825\\uD558\\uACE0 \\uC800\\uC7A5\\uD558\\uBA74 \\uD604\\uC7AC \\uC5F0\\uACB0\\uC774 \\uBCC0\\uACBD\\uB429\\uB2C8\\uB2E4.\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsxs(\"div\",{className:\"success-message\",children:[\"\\u2705 \",success]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"auth-type\",children:\"\\uC778\\uC99D \\uBC29\\uC2DD\"}),/*#__PURE__*/_jsx(\"select\",{id:\"auth-type\",value:authType,onChange:e=>setAuthType(e.target.value),className:\"form-control wide-input\",children:authTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type.value,children:type.label},type.value))})]}),authType==='accessKey'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"access-key\",children:\"Access Key *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"access-key\",value:accessKey,onChange:e=>setAccessKey(e.target.value),placeholder:\"AKIA...\",className:\"form-control wide-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"secret-key\",children:\"Secret Key *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"secret-key\",value:secretKey,onChange:e=>setSecretKey(e.target.value),placeholder:\"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",className:\"form-control wide-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"session-token\",children:\"Session Token (\\uC635\\uC158)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"session-token\",value:sessionToken,onChange:e=>setSessionToken(e.target.value),placeholder:\"\\uC138\\uC158 \\uD1A0\\uD070 (\\uD544\\uC694\\uC2DC)\",className:\"form-control wide-input\"})]})]}),authType==='iamRole'&&/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"IAM Role \\uAE30\\uBC18 \\uC778\\uC99D\"}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#888',fontSize:'14px'},children:[\"EC2/ECS/EKS \\uC778\\uC2A4\\uD134\\uC2A4\\uC5D0 \\uD560\\uB2F9\\uB41C IAM Role\\uC744 \\uC790\\uB3D9\\uC73C\\uB85C \\uC0AC\\uC6A9\\uD569\\uB2C8\\uB2E4.\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uBCC4\\uB3C4\\uC758 \\uD0A4 \\uC785\\uB825 \\uC5C6\\uC774 \\uC9C4\\uD589\\uD558\\uC138\\uC694.\"]})]}),authType==='sso'&&/*#__PURE__*/_jsxs(\"div\",{className:\"config-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sso-start-url\",children:\"SSO Start URL *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"sso-start-url\",value:ssoStartUrl,onChange:e=>handleInputChange('sso-start-url',e.target.value),placeholder:\"https://your-sso-portal.awsapps.com/start\",className:\"form-control wide-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sso-region\",children:\"SSO Region *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"sso-region\",value:ssoRegion,onChange:e=>handleInputChange('sso-region',e.target.value),placeholder:\"ap-northeast-2\",className:\"form-control wide-input\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sso-account-id\",children:\"SSO Account ID *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"sso-account-id\",value:ssoAccountId,onChange:e=>handleInputChange('sso-account-id',e.target.value),placeholder:\"123456789012\",className:\"form-control wide-input\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"sso-role-name\",children:\"SSO Role Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"sso-role-name\",value:ssoRoleName,onChange:e=>handleInputChange('sso-role-name',e.target.value),placeholder:\"AWSAdministratorAccess\",className:\"form-control wide-input\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"aws-region\",children:\"AWS \\uB9AC\\uC804\"}),/*#__PURE__*/_jsx(\"select\",{id:\"aws-region\",value:awsRegion,onChange:e=>setAwsRegion(e.target.value),className:\"form-control wide-input\",children:awsRegions.map(region=>/*#__PURE__*/_jsx(\"option\",{value:region.value,children:region.label},region.value))})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleTest,disabled:loading||!selectedId,className:\"btn btn-outline\",children:loading?'테스트 중...':'🔗 연결 테스트'}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,disabled:loading,className:\"btn btn-primary\",children:loading?'저장 중...':'💾 설정 저장'})]})]}),isConnected&&/*#__PURE__*/_jsxs(\"div\",{className:\"rds-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"RDS \\uC778\\uC2A4\\uD134\\uC2A4 \\uAD00\\uB9AC\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchRdsInstances,disabled:loading,className:\"btn btn-outline\",children:loading?'로딩 중...':'🔄 인스턴스 목록 새로고침'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"rds_instance_id\",children:\"RDS \\uC778\\uC2A4\\uD134\\uC2A4 \\uC120\\uD0DD\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"rds_instance_id\",value:selectedDb,onChange:e=>handleRdsInstanceSelect(e.target.value),className:\"form-control wide-input\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uC778\\uC2A4\\uD134\\uC2A4\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"}),rdsInstances.length===0&&/*#__PURE__*/_jsx(\"option\",{disabled:true,children:\"RDS \\uC778\\uC2A4\\uD134\\uC2A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"}),rdsInstances.map(instance=>/*#__PURE__*/_jsxs(\"option\",{value:instance.DBInstanceIdentifier,children:[instance.DBInstanceIdentifier,\" (\",instance.DBInstanceClass,\") - \",instance.DBInstanceStatus]},instance.DBInstanceIdentifier))]})]}),selectedDb&&/*#__PURE__*/_jsxs(\"div\",{className:\"instance-info\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uC120\\uD0DD\\uB41C \\uC778\\uC2A4\\uD134\\uC2A4 \\uC815\\uBCF4\"}),rdsInstances.find(i=>i.DBInstanceIdentifier===selectedDb)&&/*#__PURE__*/_jsxs(\"div\",{className:\"info-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC778\\uC2A4\\uD134\\uC2A4 ID:\"}),/*#__PURE__*/_jsx(\"span\",{children:selectedDb})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC5D4\\uC9C4:\"}),/*#__PURE__*/_jsx(\"span\",{children:(_rdsInstances$find=rdsInstances.find(i=>i.DBInstanceIdentifier===selectedDb))===null||_rdsInstances$find===void 0?void 0:_rdsInstances$find.Engine})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC0C1\\uD0DC:\"}),/*#__PURE__*/_jsx(\"span\",{children:(_rdsInstances$find2=rdsInstances.find(i=>i.DBInstanceIdentifier===selectedDb))===null||_rdsInstances$find2===void 0?void 0:_rdsInstances$find2.DBInstanceStatus})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-item\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC5D4\\uB4DC\\uD3EC\\uC778\\uD2B8:\"}),/*#__PURE__*/_jsx(\"span\",{children:(_rdsInstances$find3=rdsInstances.find(i=>i.DBInstanceIdentifier===selectedDb))===null||_rdsInstances$find3===void 0?void 0:(_rdsInstances$find3$E=_rdsInstances$find3.Endpoint)===null||_rdsInstances$find3$E===void 0?void 0:_rdsInstances$find3$E.Address})]})]})]})]}),isConnected&&selectedDb&&/*#__PURE__*/_jsxs(\"div\",{className:\"cloudwatch-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"CloudWatch \\uBA54\\uD2B8\\uB9AD\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchCloudWatchMetrics,disabled:loading,className:\"btn btn-outline\",children:loading?'로딩 중...':'📊 메트릭 새로고침'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-grid\",children:[renderMetricCard('CPU 사용률',cloudwatchMetrics.cpu_utilization||0,'%',cloudwatchMetrics.cpu_utilization>80?'warning':'ok'),renderMetricCard('메모리 사용률',cloudwatchMetrics.freeable_memory||0,'MB',cloudwatchMetrics.freeable_memory<1000?'warning':'ok'),renderMetricCard('연결 수',cloudwatchMetrics.database_connections||0,'개',cloudwatchMetrics.database_connections>100?'warning':'ok'),renderMetricCard('읽기 IOPS',cloudwatchMetrics.read_iops||0,'IOPS',null),renderMetricCard('쓰기 IOPS',cloudwatchMetrics.write_iops||0,'IOPS',null),renderMetricCard('네트워크 처리량',cloudwatchMetrics.network_receive_throughput||0,'MB/s',null)]}),Object.keys(cloudwatchMetrics).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"metrics-table\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uC0C1\\uC138 \\uBA54\\uD2B8\\uB9AD\"}),/*#__PURE__*/_jsxs(\"table\",{className:\"table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uBA54\\uD2B8\\uB9AD\\uBA85\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uAC12\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uB2E8\\uC704\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC0C1\\uD0DC\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(cloudwatchMetrics).map(_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:key.replace(/_/g,' ').replace(/\\b\\w/g,l=>l.toUpperCase())}),/*#__PURE__*/_jsx(\"td\",{children:typeof value==='number'?value.toFixed(2):value}),/*#__PURE__*/_jsx(\"td\",{children:getMetricUnit(key)}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"status-badge\",style:{backgroundColor:getMetricStatusColor(key,value)},children:getMetricStatus(key,value)})})]},key);})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"security-notice\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDD12 \\uBCF4\\uC548 \\uC8FC\\uC758\\uC0AC\\uD56D\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"AWS \\uC790\\uACA9 \\uC99D\\uBA85\\uC740 \\uC548\\uC804\\uD558\\uAC8C \\uC554\\uD638\\uD654\\uB418\\uC5B4 \\uC800\\uC7A5\\uB429\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uCD5C\\uC18C \\uAD8C\\uD55C \\uC6D0\\uCE59\\uC5D0 \\uB530\\uB77C \\uD544\\uC694\\uD55C \\uAD8C\\uD55C\\uB9CC \\uBD80\\uC5EC\\uD558\\uC138\\uC694.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uC815\\uAE30\\uC801\\uC73C\\uB85C \\uC561\\uC138\\uC2A4 \\uD0A4\\uB97C \\uAD50\\uCCB4\\uD558\\uB294 \\uAC83\\uC744 \\uAD8C\\uC7A5\\uD569\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD504\\uB85C\\uB355\\uC158 \\uD658\\uACBD\\uC5D0\\uC11C\\uB294 IAM \\uC5ED\\uD560 \\uC0AC\\uC6A9\\uC744 \\uACE0\\uB824\\uD558\\uC138\\uC694.\"})]})]})]});}// 메트릭 단위 반환\nconst getMetricUnit=metricName=>{const units={cpu_utilization:'%',freeable_memory:'MB',database_connections:'개',read_iops:'IOPS',write_iops:'IOPS',network_receive_throughput:'MB/s',network_transmit_throughput:'MB/s'};return units[metricName]||'';};// 메트릭 상태 색상 반환\nconst getMetricStatusColor=(metricName,value)=>{if(metricName==='cpu_utilization'&&value>80)return'#ffc107';if(metricName==='freeable_memory'&&value<1000)return'#ffc107';if(metricName==='database_connections'&&value>100)return'#ffc107';return'#28a745';};// 메트릭 상태 반환\nconst getMetricStatus=(metricName,value)=>{if(metricName==='cpu_utilization'&&value>80)return'warning';if(metricName==='freeable_memory'&&value<1000)return'warning';if(metricName==='database_connections'&&value>100)return'warning';return'ok';};export default AwsIntegrationComponent;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AwsIntegrationComponent","_ref","_rdsInstances$find","_rdsInstances$find2","_rdsInstances$find3","_rdsInstances$find3$E","selectedDb","databases","credentialsList","setCredentialsList","selectedId","setSelectedId","authType","setAuthType","accessKey","setAccessKey","secretKey","setSecretKey","sessionToken","setSessionToken","ssoStartUrl","setSsoStartUrl","ssoRegion","setSsoRegion","ssoAccountId","setSsoAccountId","ssoRoleName","setSsoRoleName","awsRegion","setAwsRegion","cloudwatchNamespace","setCloudwatchNamespace","isConnected","setIsConnected","connectionStatus","setConnectionStatus","rdsInstances","setRdsInstances","cloudwatchMetrics","setCloudwatchMetrics","loading","setLoading","error","setError","success","setSuccess","awsRegions","value","label","authTypes","loadCredentials","res","fetch","ok","list","json","active","find","c","is_active","id","access_key","region","fetchRdsInstances","handleSave","payload","name","slice","secret_key","session_token","method","headers","body","JSON","stringify","handleDelete","concat","handleActivate","handleTest","cred","data","message","response","instances","console","fetchCloudWatchMetrics","params","URLSearchParams","namespace","metrics","handleInputChange","key","handleRdsInstanceSelect","instanceId","getStatusColor","status","renderMetricCard","title","unit","arguments","length","undefined","className","children","style","backgroundColor","getAuthPayload","substring","htmlFor","onChange","e","target","map","type","placeholder","color","fontSize","onClick","disabled","instance","DBInstanceIdentifier","DBInstanceClass","DBInstanceStatus","i","Engine","Endpoint","Address","cpu_utilization","freeable_memory","database_connections","read_iops","write_iops","network_receive_throughput","Object","keys","entries","_ref2","replace","l","toUpperCase","toFixed","getMetricUnit","getMetricStatusColor","getMetricStatus","metricName","units","network_transmit_throughput"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsIntegrationComponent.js"],"sourcesContent":["// AwsIntegrationComponent.js\n// AWS 인증, RDS/CloudWatch 연동, 상태 표시\nimport React, { useState, useEffect } from 'react';\n\nfunction AwsIntegrationComponent({ selectedDb, databases }) {\n  const [credentialsList, setCredentialsList] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [authType, setAuthType] = useState('accessKey');\n  const [accessKey, setAccessKey] = useState('');\n  const [secretKey, setSecretKey] = useState('');\n  const [sessionToken, setSessionToken] = useState('');\n  const [ssoStartUrl, setSsoStartUrl] = useState('');\n  const [ssoRegion, setSsoRegion] = useState('ap-northeast-2');\n  const [ssoAccountId, setSsoAccountId] = useState('');\n  const [ssoRoleName, setSsoRoleName] = useState('');\n  const [awsRegion, setAwsRegion] = useState('ap-northeast-2');\n  const [cloudwatchNamespace, setCloudwatchNamespace] = useState('AWS/RDS');\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [rdsInstances, setRdsInstances] = useState([]);\n  const [cloudwatchMetrics, setCloudwatchMetrics] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const awsRegions = [\n    { value: 'us-east-1', label: 'US East (N. Virginia)' },\n    { value: 'us-east-2', label: 'US East (Ohio)' },\n    { value: 'us-west-1', label: 'US West (N. California)' },\n    { value: 'us-west-2', label: 'US West (Oregon)' },\n    { value: 'ap-northeast-1', label: 'Asia Pacific (Tokyo)' },\n    { value: 'ap-northeast-2', label: 'Asia Pacific (Seoul)' },\n    { value: 'ap-southeast-1', label: 'Asia Pacific (Singapore)' },\n    { value: 'ap-southeast-2', label: 'Asia Pacific (Sydney)' },\n    { value: 'eu-west-1', label: 'Europe (Ireland)' },\n    { value: 'eu-central-1', label: 'Europe (Frankfurt)' }\n  ];\n\n  // 인증 방식 옵션\n  const authTypes = [\n    { value: 'accessKey', label: 'Access Key' },\n    { value: 'iamRole', label: 'IAM Role (EC2/ECS/EKS)' },\n    { value: 'sso', label: 'AWS SSO' }\n  ];\n\n  // 리스트 불러오기\n  const loadCredentials = async () => {\n    const res = await fetch('/aws/credentials');\n    if (res.ok) {\n      const list = await res.json();\n      setCredentialsList(list);\n      const active = list.find(c => c.is_active);\n      if (active) {\n        setSelectedId(active.id);\n        setAccessKey(active.access_key);\n        setSecretKey('********');\n        setSessionToken('');\n        setAwsRegion(active.region || 'ap-northeast-2');\n        setConnectionStatus('connected');\n        setIsConnected(true);\n      } else {\n        setSelectedId(null);\n        setConnectionStatus('disconnected');\n        setIsConnected(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadCredentials();\n  }, []);\n\n  // 연결 성공 시 RDS 인스턴스 자동 조회\n  useEffect(() => {\n    if (isConnected) {\n      fetchRdsInstances();\n    }\n  }, [isConnected]);\n\n  // 등록\n  const handleSave = async () => {\n    setError(''); setSuccess(''); setLoading(true);\n    const payload = {\n      name: accessKey.slice(0, 8) + '...',\n      access_key: accessKey,\n      secret_key: secretKey,\n      session_token: sessionToken,\n      region: awsRegion,\n      is_active: true\n    };\n    const res = await fetch('/aws/credentials', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n    if (res.ok) {\n      setSuccess('설정이 저장되었습니다!');\n      await loadCredentials();\n    } else {\n      setError('저장 실패');\n    }\n    setLoading(false);\n  };\n\n  // 삭제\n  const handleDelete = async (id) => {\n    setLoading(true);\n    await fetch(`/aws/credentials/${id}`, { method: 'DELETE' });\n    await loadCredentials();\n    setLoading(false);\n  };\n\n  // 활성화(선택)\n  const handleActivate = async (id) => {\n    setLoading(true);\n    await fetch(`/aws/credentials/${id}/activate`, { method: 'POST' });\n    await loadCredentials();\n    setLoading(false);\n  };\n\n  // 연결 테스트\n  const handleTest = async () => {\n    setLoading(true); setError(''); setSuccess('');\n    const cred = credentialsList.find(c => c.id === selectedId);\n    if (!cred) { setError('선택된 인증정보가 없습니다.'); setLoading(false); return; }\n    const payload = {\n      accessKey: cred.access_key,\n      secretKey: secretKey === '********' ? '' : secretKey,\n      sessionToken: sessionToken,\n      awsRegion: cred.region\n    };\n    const res = await fetch('/aws/auth/test', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n    const data = await res.json();\n    if (data.success) {\n      setSuccess('연결 성공!');\n      setConnectionStatus('connected');\n      setIsConnected(true);\n    } else {\n      setError('연결 실패: ' + (data.message || '오류'));\n      setConnectionStatus('disconnected');\n      setIsConnected(false);\n    }\n    setLoading(false);\n  };\n\n  // RDS 인스턴스 목록 가져오기\n  const fetchRdsInstances = async () => {\n    if (!isConnected) return;\n\n    setLoading(true);\n    try {\n      const response = await fetch('/aws/rds-instances');\n      if (response.ok) {\n        const data = await response.json();\n        setRdsInstances(data.instances || []);\n      } else {\n        console.error('RDS 인스턴스 목록 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('RDS 인스턴스 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CloudWatch 메트릭 가져오기\n  const fetchCloudWatchMetrics = async () => {\n    if (!isConnected || !awsRegion) return;\n\n    setLoading(true);\n    try {\n      const params = new URLSearchParams({\n        region: awsRegion,\n        namespace: cloudwatchNamespace\n      });\n\n      const response = await fetch(`/aws/cloudwatch/metrics?${params}`);\n      if (response.ok) {\n        const data = await response.json();\n        setCloudwatchMetrics(data.metrics || {});\n      } else {\n        console.error('CloudWatch 메트릭 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('CloudWatch 메트릭 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 입력 필드 변경 처리\n  const handleInputChange = (key, value) => {\n    if (key === 'accessKey') setAccessKey(value);\n    else if (key === 'secretKey') setSecretKey(value);\n    else if (key === 'sessionToken') setSessionToken(value);\n    else if (key === 'ssoStartUrl') setSsoStartUrl(value);\n    else if (key === 'ssoRegion') setSsoRegion(value);\n    else if (key === 'ssoAccountId') setSsoAccountId(value);\n    else if (key === 'ssoRoleName') setSsoRoleName(value);\n    else if (key === 'awsRegion') setAwsRegion(value);\n    else if (key === 'cloudwatchNamespace') setCloudwatchNamespace(value);\n  };\n\n  // RDS 인스턴스 선택\n  const handleRdsInstanceSelect = (instanceId) => {\n    handleInputChange('rds_instance_id', instanceId);\n  };\n\n  // 연결 상태에 따른 색상\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'connected':\n        return '#28a745';\n      case 'connecting':\n        return '#ffc107';\n      case 'error':\n        return '#dc3545';\n      default:\n        return '#6c757d';\n    }\n  };\n\n  // 메트릭 카드 렌더링\n  const renderMetricCard = (title, value, unit = '', status = null) => (\n    <div className=\"metric-card\">\n      <div className=\"metric-header\">\n        <h4>{title}</h4>\n        {status && (\n          <span \n            className=\"status-badge\"\n            style={{ backgroundColor: getStatusColor(status) }}\n          >\n            {status}\n          </span>\n        )}\n      </div>\n      <div className=\"metric-value\">\n        <span className=\"value\">{value}</span>\n        {unit && <span className=\"unit\">{unit}</span>}\n      </div>\n    </div>\n  );\n\n  // getAuthPayload 함수도 iamRole 처리 추가\n  const getAuthPayload = () => {\n    if (authType === 'accessKey') {\n      return {\n        authType,\n        accessKey,\n        secretKey,\n        sessionToken,\n        awsRegion,\n        cloudwatchNamespace\n      };\n    } else if (authType === 'iamRole') {\n      return {\n        authType,\n        awsRegion,\n        cloudwatchNamespace\n      };\n    } else {\n      return {\n        authType,\n        ssoStartUrl,\n        ssoRegion,\n        ssoAccountId,\n        ssoRoleName,\n        awsRegion,\n        cloudwatchNamespace\n      };\n    }\n  };\n\n  return (\n    <div className=\"aws-integration-component\">\n      {/* 헤더 */}\n      <div className=\"component-header\">\n        <div className=\"header-left\">\n          <h2>AWS 통합</h2>\n          <div className=\"connection-status\">\n            <span \n              className=\"status-indicator\"\n              style={{ backgroundColor: getStatusColor(connectionStatus) }}\n            ></span>\n            <span className=\"status-text\">\n              {connectionStatus === 'connected' && '연결됨'}\n              {connectionStatus === 'connecting' && '연결 중...'}\n              {connectionStatus === 'error' && '연결 오류'}\n              {connectionStatus === 'disconnected' && '연결 안됨'}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* AWS 설정 */}\n      <div className=\"aws-config-section\">\n        <h3>AWS 인증 설정</h3>\n\n        {/* -- 추가된 UI -- */}\n        {isConnected && (\n          <div className=\"current-config-info\">\n            <h4>현재 연결 정보</h4>\n            <ul>\n              <li>\n                <strong>Access Key:</strong> \n                <span>{accessKey.substring(0, 4)}...{accessKey.slice(-4)}</span>\n              </li>\n              <li>\n                <strong>AWS Region:</strong> \n                <span>{awsRegion}</span>\n              </li>\n            </ul>\n            <p>새로운 정보를 입력하고 저장하면 현재 연결이 변경됩니다.</p>\n          </div>\n        )}\n        {/* -- 여기까지 -- */}\n\n        {error && (\n          <div className=\"error-message\">{error}</div>\n        )}\n\n        {success && (\n          <div className=\"success-message\">✅ {success}</div>\n        )}\n        <div className=\"form-group\">\n          <label htmlFor=\"auth-type\">인증 방식</label>\n          <select\n            id=\"auth-type\"\n            value={authType}\n            onChange={(e) => setAuthType(e.target.value)}\n            className=\"form-control wide-input\"\n          >\n            {authTypes.map(type => (\n              <option key={type.value} value={type.value}>{type.label}</option>\n            ))}\n          </select>\n        </div>\n\n        {authType === 'accessKey' && (\n          <>\n            <div className=\"form-group\">\n              <label htmlFor=\"access-key\">Access Key *</label>\n              <input\n                type=\"text\"\n                id=\"access-key\"\n                value={accessKey}\n                onChange={e => setAccessKey(e.target.value)}\n                placeholder=\"AKIA...\"\n                className=\"form-control wide-input\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"secret-key\">Secret Key *</label>\n              <input\n                type=\"password\"\n                id=\"secret-key\"\n                value={secretKey}\n                onChange={e => setSecretKey(e.target.value)}\n                placeholder=\"••••••••••••••••••••••••••••••••\"\n                className=\"form-control wide-input\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"session-token\">Session Token (옵션)</label>\n              <input\n                type=\"text\"\n                id=\"session-token\"\n                value={sessionToken}\n                onChange={e => setSessionToken(e.target.value)}\n                placeholder=\"세션 토큰 (필요시)\"\n                className=\"form-control wide-input\"\n              />\n            </div>\n          </>\n        )}\n\n        {authType === 'iamRole' && (\n          <div className=\"form-group\">\n            <label>IAM Role 기반 인증</label>\n            <div style={{ color: '#888', fontSize: '14px' }}>\n              EC2/ECS/EKS 인스턴스에 할당된 IAM Role을 자동으로 사용합니다.<br />\n              별도의 키 입력 없이 진행하세요.\n            </div>\n          </div>\n        )}\n\n        {authType === 'sso' && (\n          <div className=\"config-form\">\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"sso-start-url\">SSO Start URL *</label>\n                <input\n                  type=\"text\"\n                  id=\"sso-start-url\"\n                  value={ssoStartUrl}\n                  onChange={(e) => handleInputChange('sso-start-url', e.target.value)}\n                  placeholder=\"https://your-sso-portal.awsapps.com/start\"\n                  className=\"form-control wide-input\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"sso-region\">SSO Region *</label>\n                <input\n                  type=\"text\"\n                  id=\"sso-region\"\n                  value={ssoRegion}\n                  onChange={(e) => handleInputChange('sso-region', e.target.value)}\n                  placeholder=\"ap-northeast-2\"\n                  className=\"form-control wide-input\"\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"sso-account-id\">SSO Account ID *</label>\n                <input\n                  type=\"text\"\n                  id=\"sso-account-id\"\n                  value={ssoAccountId}\n                  onChange={(e) => handleInputChange('sso-account-id', e.target.value)}\n                  placeholder=\"123456789012\"\n                  className=\"form-control wide-input\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"sso-role-name\">SSO Role Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"sso-role-name\"\n                  value={ssoRoleName}\n                  onChange={(e) => handleInputChange('sso-role-name', e.target.value)}\n                  placeholder=\"AWSAdministratorAccess\"\n                  className=\"form-control wide-input\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"form-row\">\n          <div className=\"form-group\">\n            <label htmlFor=\"aws-region\">AWS 리전</label>\n            <select\n              id=\"aws-region\"\n              value={awsRegion}\n              onChange={(e) => setAwsRegion(e.target.value)}\n              className=\"form-control wide-input\"\n            >\n              {awsRegions.map(region => (\n                <option key={region.value} value={region.value}>\n                  {region.label}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"form-actions\">\n          <button \n            onClick={handleTest}\n            disabled={loading || !selectedId}\n            className=\"btn btn-outline\"\n          >\n            {loading ? '테스트 중...' : '🔗 연결 테스트'}\n          </button>\n          \n          <button \n            onClick={handleSave}\n            disabled={loading}\n            className=\"btn btn-primary\"\n          >\n            {loading ? '저장 중...' : '💾 설정 저장'}\n          </button>\n        </div>\n      </div>\n\n      {/* RDS 인스턴스 관리 */}\n      {isConnected && (\n        <div className=\"rds-section\">\n          <div className=\"section-header\">\n            <h3>RDS 인스턴스 관리</h3>\n            <button \n              onClick={fetchRdsInstances}\n              disabled={loading}\n              className=\"btn btn-outline\"\n            >\n              {loading ? '로딩 중...' : '🔄 인스턴스 목록 새로고침'}\n            </button>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"rds_instance_id\">RDS 인스턴스 선택</label>\n            <select\n              id=\"rds_instance_id\"\n              value={selectedDb}\n              onChange={(e) => handleRdsInstanceSelect(e.target.value)}\n              className=\"form-control wide-input\"\n            >\n              <option value=\"\">인스턴스를 선택하세요</option>\n              {rdsInstances.length === 0 && (\n                <option disabled>RDS 인스턴스가 없습니다</option>\n              )}\n              {rdsInstances.map(instance => (\n                <option key={instance.DBInstanceIdentifier} value={instance.DBInstanceIdentifier}>\n                  {instance.DBInstanceIdentifier} ({instance.DBInstanceClass}) - {instance.DBInstanceStatus}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {selectedDb && (\n            <div className=\"instance-info\">\n              <h4>선택된 인스턴스 정보</h4>\n              {rdsInstances.find(i => i.DBInstanceIdentifier === selectedDb) && (\n                <div className=\"info-grid\">\n                  <div className=\"info-item\">\n                    <label>인스턴스 ID:</label>\n                    <span>{selectedDb}</span>\n                  </div>\n                  <div className=\"info-item\">\n                    <label>엔진:</label>\n                    <span>{rdsInstances.find(i => i.DBInstanceIdentifier === selectedDb)?.Engine}</span>\n                  </div>\n                  <div className=\"info-item\">\n                    <label>상태:</label>\n                    <span>{rdsInstances.find(i => i.DBInstanceIdentifier === selectedDb)?.DBInstanceStatus}</span>\n                  </div>\n                  <div className=\"info-item\">\n                    <label>엔드포인트:</label>\n                    <span>{rdsInstances.find(i => i.DBInstanceIdentifier === selectedDb)?.Endpoint?.Address}</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* CloudWatch 메트릭 */}\n      {isConnected && selectedDb && (\n        <div className=\"cloudwatch-section\">\n          <div className=\"section-header\">\n            <h3>CloudWatch 메트릭</h3>\n            <button \n              onClick={fetchCloudWatchMetrics}\n              disabled={loading}\n              className=\"btn btn-outline\"\n            >\n              {loading ? '로딩 중...' : '📊 메트릭 새로고침'}\n            </button>\n          </div>\n\n          <div className=\"metrics-grid\">\n            {renderMetricCard(\n              'CPU 사용률',\n              cloudwatchMetrics.cpu_utilization || 0,\n              '%',\n              cloudwatchMetrics.cpu_utilization > 80 ? 'warning' : 'ok'\n            )}\n            \n            {renderMetricCard(\n              '메모리 사용률',\n              cloudwatchMetrics.freeable_memory || 0,\n              'MB',\n              cloudwatchMetrics.freeable_memory < 1000 ? 'warning' : 'ok'\n            )}\n            \n            {renderMetricCard(\n              '연결 수',\n              cloudwatchMetrics.database_connections || 0,\n              '개',\n              cloudwatchMetrics.database_connections > 100 ? 'warning' : 'ok'\n            )}\n            \n            {renderMetricCard(\n              '읽기 IOPS',\n              cloudwatchMetrics.read_iops || 0,\n              'IOPS',\n              null\n            )}\n            \n            {renderMetricCard(\n              '쓰기 IOPS',\n              cloudwatchMetrics.write_iops || 0,\n              'IOPS',\n              null\n            )}\n            \n            {renderMetricCard(\n              '네트워크 처리량',\n              cloudwatchMetrics.network_receive_throughput || 0,\n              'MB/s',\n              null\n            )}\n          </div>\n\n          {/* 메트릭 차트 (간단한 표 형태) */}\n          {Object.keys(cloudwatchMetrics).length > 0 && (\n            <div className=\"metrics-table\">\n              <h4>상세 메트릭</h4>\n              <table className=\"table\">\n                <thead>\n                  <tr>\n                    <th>메트릭명</th>\n                    <th>값</th>\n                    <th>단위</th>\n                    <th>상태</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(cloudwatchMetrics).map(([key, value]) => (\n                    <tr key={key}>\n                      <td>{key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</td>\n                      <td>{typeof value === 'number' ? value.toFixed(2) : value}</td>\n                      <td>{getMetricUnit(key)}</td>\n                      <td>\n                        <span \n                          className=\"status-badge\"\n                          style={{ backgroundColor: getMetricStatusColor(key, value) }}\n                        >\n                          {getMetricStatus(key, value)}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 보안 주의사항 */}\n      <div className=\"security-notice\">\n        <h4>🔒 보안 주의사항</h4>\n        <ul>\n          <li>AWS 자격 증명은 안전하게 암호화되어 저장됩니다.</li>\n          <li>최소 권한 원칙에 따라 필요한 권한만 부여하세요.</li>\n          <li>정기적으로 액세스 키를 교체하는 것을 권장합니다.</li>\n          <li>프로덕션 환경에서는 IAM 역할 사용을 고려하세요.</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n// 메트릭 단위 반환\nconst getMetricUnit = (metricName) => {\n  const units = {\n    cpu_utilization: '%',\n    freeable_memory: 'MB',\n    database_connections: '개',\n    read_iops: 'IOPS',\n    write_iops: 'IOPS',\n    network_receive_throughput: 'MB/s',\n    network_transmit_throughput: 'MB/s'\n  };\n  return units[metricName] || '';\n};\n\n// 메트릭 상태 색상 반환\nconst getMetricStatusColor = (metricName, value) => {\n  if (metricName === 'cpu_utilization' && value > 80) return '#ffc107';\n  if (metricName === 'freeable_memory' && value < 1000) return '#ffc107';\n  if (metricName === 'database_connections' && value > 100) return '#ffc107';\n  return '#28a745';\n};\n\n// 메트릭 상태 반환\nconst getMetricStatus = (metricName, value) => {\n  if (metricName === 'cpu_utilization' && value > 80) return 'warning';\n  if (metricName === 'freeable_memory' && value < 1000) return 'warning';\n  if (metricName === 'database_connections' && value > 100) return 'warning';\n  return 'ok';\n};\n\nexport default AwsIntegrationComponent; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}