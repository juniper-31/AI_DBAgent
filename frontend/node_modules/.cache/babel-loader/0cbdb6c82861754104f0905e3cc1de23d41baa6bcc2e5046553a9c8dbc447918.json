{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsRdsResource.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AwsRdsResource = ({\n  onDatabaseAdd\n}) => {\n  _s();\n  const [clusters, setClusters] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [expandedClusters, setExpandedClusters] = useState({});\n  useEffect(() => {\n    fetchRdsClusters();\n  }, []);\n  const fetchRdsClusters = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        // clusters만 사용, 하위 인스턴스는 clusters[].instances로 가정\n        setClusters((data.clusters || []).map(c => ({\n          ...c,\n          instances: c.instances || []\n        })));\n      } else {\n        setError('RDS 클러스터 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 클러스터 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleCluster = clusterId => {\n    setExpandedClusters(prev => ({\n      ...prev,\n      [clusterId]: !prev[clusterId]\n    }));\n  };\n\n  // 클러스터 등록 핸들러(RO 주소)\n  const handleRegisterCluster = async cluster => {\n    setSuccess('');\n    setError('');\n    const endpoint = cluster.ReaderEndpoint || cluster.Endpoint || '-';\n    const engine = cluster.Engine || '';\n    // Aurora PostgreSQL/MySQL 기본 포트 지정\n    const port = engine.includes('postgres') ? 5432 : 3306;\n    const dbname = 'postgres'; // 또는 'defaultdb', 실제 환경에 맞게\n    const user = '';\n    const password = '';\n    try {\n      const formData = new FormData();\n      formData.append('name', cluster.DBClusterIdentifier);\n      formData.append('host', endpoint);\n      formData.append('port', port);\n      formData.append('user', user);\n      formData.append('password', password);\n      formData.append('dbname', dbname);\n      formData.append('engine', engine);\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('클러스터(RO)로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aws-rds-resource\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"RDS \\uD074\\uB7EC\\uC2A4\\uD130 \\uC870\\uD68C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px',\n        color: '#888',\n        marginBottom: '8px'\n      },\n      children: [\"\\u203B Aurora \\uB4F1 \\uD074\\uB7EC\\uC2A4\\uD130\\uB9CC \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4. \\uD074\\uB7EC\\uC2A4\\uD130\\uB294 \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uC77D\\uAE30\\uC804\\uC6A9(RO) \\uC5D4\\uB4DC\\uD3EC\\uC778\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 100\n      }, this), \"\\uB85C\\uB9CC \\uB4F1\\uB85D\\uB429\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"db-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD074\\uB7EC\\uC2A4\\uD130 \\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC5D4\\uC9C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RW \\uD638\\uC2A4\\uD2B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"RO \\uD638\\uC2A4\\uD2B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC561\\uC158\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: clusters.map(cluster => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"cluster-row\",\n            onClick: () => toggleCluster(cluster.DBClusterIdentifier),\n            style: {\n              cursor: 'pointer',\n              background: '#f7f8fa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: 8\n                },\n                children: expandedClusters[cluster.DBClusterIdentifier] ? '▼' : '▶'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: cluster.DBClusterIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.Engine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.Endpoint || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.ReaderEndpoint || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  handleRegisterCluster(cluster);\n                },\n                className: \"btn btn-primary btn-sm\",\n                children: \"DB\\uB85C \\uB4F1\\uB85D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), expandedClusters[cluster.DBClusterIdentifier] && (cluster.instances || []).map(inst => {\n            var _inst$Endpoint;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"instance-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  paddingLeft: 32\n                },\n                children: inst.DBInstanceIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: inst.Engine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_inst$Endpoint = inst.Endpoint) === null || _inst$Endpoint === void 0 ? void 0 : _inst$Endpoint.Address) || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, inst.DBInstanceIdentifier, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this);\n          })]\n        }, cluster.DBClusterIdentifier, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AwsRdsResource, \"KLWllMFXhjLnZcczmeqoXW4/QFs=\");\n_c = AwsRdsResource;\nexport default AwsRdsResource;\nvar _c;\n$RefreshReg$(_c, \"AwsRdsResource\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AwsRdsResource","onDatabaseAdd","_s","clusters","setClusters","loading","setLoading","error","setError","success","setSuccess","expandedClusters","setExpandedClusters","fetchRdsClusters","response","fetch","credentials","ok","data","json","map","c","instances","e","toggleCluster","clusterId","prev","handleRegisterCluster","cluster","endpoint","ReaderEndpoint","Endpoint","engine","Engine","port","includes","dbname","user","password","formData","FormData","append","DBClusterIdentifier","method","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","color","marginBottom","Fragment","onClick","cursor","background","marginRight","stopPropagation","inst","_inst$Endpoint","paddingLeft","DBInstanceIdentifier","Address","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsRdsResource.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AwsRdsResource = ({ onDatabaseAdd }) => {\n  const [clusters, setClusters] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [expandedClusters, setExpandedClusters] = useState({});\n\n  useEffect(() => {\n    fetchRdsClusters();\n  }, []);\n\n  const fetchRdsClusters = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', { credentials: 'include' });\n      if (response.ok) {\n        const data = await response.json();\n        // clusters만 사용, 하위 인스턴스는 clusters[].instances로 가정\n        setClusters((data.clusters || []).map(c => ({ ...c, instances: c.instances || [] })));\n      } else {\n        setError('RDS 클러스터 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 클러스터 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const toggleCluster = (clusterId) => {\n    setExpandedClusters(prev => ({ ...prev, [clusterId]: !prev[clusterId] }));\n  };\n\n  // 클러스터 등록 핸들러(RO 주소)\n  const handleRegisterCluster = async (cluster) => {\n    setSuccess('');\n    setError('');\n    const endpoint = cluster.ReaderEndpoint || cluster.Endpoint || '-';\n    const engine = cluster.Engine || '';\n    // Aurora PostgreSQL/MySQL 기본 포트 지정\n    const port = engine.includes('postgres') ? 5432 : 3306;\n    const dbname = 'postgres'; // 또는 'defaultdb', 실제 환경에 맞게\n    const user = '';\n    const password = '';\n    try {\n      const formData = new FormData();\n      formData.append('name', cluster.DBClusterIdentifier);\n      formData.append('host', endpoint);\n      formData.append('port', port);\n      formData.append('user', user);\n      formData.append('password', password);\n      formData.append('dbname', dbname);\n      formData.append('engine', engine);\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('클러스터(RO)로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"aws-rds-resource\">\n      <h2>RDS 클러스터 조회</h2>\n      <div style={{fontSize:'14px',color:'#888',marginBottom:'8px'}}>※ Aurora 등 클러스터만 표시됩니다. 클러스터는 <b>읽기전용(RO) 엔드포인트</b>로만 등록됩니다.</div>\n      {loading && <div>불러오는 중...</div>}\n      {error && <div className=\"alert alert-error\">{error}</div>}\n      {success && <div className=\"alert alert-success\">{success}</div>}\n      <table className=\"db-table\">\n        <thead>\n          <tr>\n            <th>클러스터 이름</th>\n            <th>엔진</th>\n            <th>RW 호스트</th>\n            <th>RO 호스트</th>\n            <th>액션</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clusters.map(cluster => (\n            <React.Fragment key={cluster.DBClusterIdentifier}>\n              <tr className=\"cluster-row\" onClick={() => toggleCluster(cluster.DBClusterIdentifier)} style={{ cursor: 'pointer', background: '#f7f8fa' }}>\n                <td>\n                  <span style={{ marginRight: 8 }}>{expandedClusters[cluster.DBClusterIdentifier] ? '▼' : '▶'}</span>\n                  <strong>{cluster.DBClusterIdentifier}</strong>\n                </td>\n                <td>{cluster.Engine}</td>\n                <td>{cluster.Endpoint || '-'}</td>\n                <td>{cluster.ReaderEndpoint || '-'}</td>\n                <td>\n                  <button onClick={e => { e.stopPropagation(); handleRegisterCluster(cluster); }} className=\"btn btn-primary btn-sm\">DB로 등록</button>\n                </td>\n              </tr>\n              {expandedClusters[cluster.DBClusterIdentifier] && (cluster.instances || []).map(inst => (\n                <tr key={inst.DBInstanceIdentifier} className=\"instance-row\">\n                  <td style={{ paddingLeft: 32 }}>{inst.DBInstanceIdentifier}</td>\n                  <td>{inst.Engine}</td>\n                  <td>{inst.Endpoint?.Address || '-'}</td>\n                  <td>-</td>\n                  <td></td>\n                </tr>\n              ))}\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AwsRdsResource; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}