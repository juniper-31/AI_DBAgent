{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/AI_DBAgent/frontend/src/components/ChatComponent.js\",\n  _s = $RefreshSig$();\n// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\n\n// 마크다운 표를 HTML 테이블로 렌더링하는 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction renderMarkdownTable(md) {\n  // 마크다운 표만 추출\n  const tableMatch = md.match(/\\|.*\\|/g);\n  if (!tableMatch) return null;\n  const rows = tableMatch.map(row => row.split('|').slice(1, -1).map(cell => cell.trim()));\n  if (rows.length < 2) return null;\n  const headers = rows[0];\n  const data = rows.slice(2); // 1: header, 2: separator, 3~: data\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"result-table\",\n    style: {\n      minWidth: 600,\n      fontSize: '1.05em'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headers.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: h\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 36\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: cell\n        }, cidx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 51\n        }, this))\n      }, ridx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n// 배열/오브젝트를 표로 변환\nfunction renderAutoTable(data) {\n  if (Array.isArray(data)) {\n    if (data.length === 0) return null;\n    if (typeof data[0] === 'object' && data[0] !== null) {\n      // 오브젝트 배열\n      const headers = Object.keys(data[0]);\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"result-table\",\n        style: {\n          minWidth: 600,\n          fontSize: '1.05em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headers.map((h, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: h\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 40\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headers.map((h, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row[h]\n            }, cidx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 56\n            }, this))\n          }, ridx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    } else {\n      // 단순 배열\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"result-table\",\n        style: {\n          minWidth: 300,\n          fontSize: '1.05em'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((v, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 45\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this);\n    }\n  } else if (typeof data === 'object' && data !== null) {\n    // 단일 오브젝트\n    const headers = Object.keys(data);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"result-table\",\n      style: {\n        minWidth: 300,\n        fontSize: '1.05em'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: headers.map((h, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: h\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[h]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 58\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n}\nfunction ChatComponent({\n  selectedDb,\n  databases,\n  onDbChange\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n  const [aiModels, setAiModels] = useState([]);\n  const [selectedAiModel, setSelectedAiModel] = useState('');\n  const [dbSchema, setDbSchema] = useState(null); // DB 스키마 정보\n\n  const [conversations, setConversations] = useState([]); // 대화 목록\n  const [currentConversationId, setCurrentConversationId] = useState(null); // 현재 대화 ID\n  const [conversationSidebarCollapsed, setConversationSidebarCollapsed] = useState(false);\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [{\n    title: '성능 분석',\n    questions: ['오늘 가장 오래 걸린 쿼리 보여줘', '슬로우 쿼리 10개만 보여줘', '테이블별 row 수와 크기 알려줘']\n  }, {\n    title: '데이터 탐색',\n    questions: ['가장 row가 많은 테이블 알려줘', '최근 7일간 생성된 데이터 보여줘', '사용자 테이블의 구조를 설명해줘']\n  }, {\n    title: '시스템 상태',\n    questions: ['현재 활성 연결 수는?', '데이터베이스 크기와 사용량 알려줘', '인덱스 사용 현황을 분석해줘']\n  }];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // DB 선택 변경 시 대화 목록 불러오기\n  useEffect(() => {\n    const fetchConversations = async () => {\n      if (selectedDb) {\n        try {\n          const response = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (response.data.status === 'success') {\n            const conversations = response.data.conversations;\n            setConversations(conversations);\n            if (conversations.length > 0) {\n              // 가장 최근 대화를 자동으로 선택\n              setCurrentConversationId(conversations[0].id);\n            } else {\n              // 대화가 없으면 현재 대화 초기화\n              setCurrentConversationId(null);\n              setMessages([]);\n            }\n          }\n        } catch (error) {\n          console.error('대화 목록을 불러오는데 실패했습니다:', error);\n          setConversations([]);\n        }\n      } else {\n        setConversations([]);\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    };\n    fetchConversations();\n  }, [selectedDb]);\n\n  // DB 선택 변경 시 스키마 정보 불러오기\n  useEffect(() => {\n    const fetchDbSchema = async () => {\n      if (selectedDb && selectedDb !== '__ALL_DBS__') {\n        try {\n          const response = await axios.get(`/api/schema/${selectedDb}`);\n          if (response.data.status === 'success') {\n            setDbSchema(response.data.schema);\n            console.log('DB 스키마 정보 로드 완료:', response.data.schema);\n          }\n        } catch (error) {\n          console.error('DB 스키마 정보를 불러오는데 실패했습니다:', error);\n          setDbSchema(null);\n        }\n      } else {\n        setDbSchema(null);\n      }\n    };\n    fetchDbSchema();\n  }, [selectedDb]);\n\n  // 현재 대화 ID 변경 시 메시지 불러오기\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (currentConversationId) {\n        try {\n          const response = await axios.get(`/api/conversations/${currentConversationId}/messages`);\n          if (response.data.status === 'success') {\n            // DB에서 불러온 메시지 형식 변환\n            const formattedMessages = response.data.messages.map(msg => ({\n              role: msg.role,\n              content: msg.content,\n              sql: msg.sql_query,\n              result: msg.sql_result ? JSON.parse(msg.sql_result) : null,\n              timestamp: new Date(msg.timestamp).toLocaleTimeString()\n            }));\n            setMessages(formattedMessages);\n          }\n        } catch (error) {\n          console.error('메시지를 불러오는데 실패했습니다:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n  }, [currentConversationId]);\n\n  // AI 모델 목록 불러오기 (한 번만 실행)\n  useEffect(() => {\n    const fetchAiModels = async () => {\n      try {\n        const openaiRes = await axios.get('/api/openai/keys');\n        const azureOpenAIRes = await axios.get('/api/azure-openai/configs');\n        const geminiRes = await axios.get('/api/gemini/configs');\n        const claudeRes = await axios.get('/api/claude/configs');\n        const allModels = [...openaiRes.data.keys.map(k => ({\n          ...k,\n          type: 'openai'\n        })), ...azureOpenAIRes.data.configs.map(c => ({\n          ...c,\n          type: 'azure_openai'\n        })), ...geminiRes.data.configs.map(c => ({\n          ...c,\n          type: 'gemini'\n        })), ...claudeRes.data.configs.map(c => ({\n          ...c,\n          type: 'claude'\n        }))];\n        setAiModels(allModels);\n        const currentSelected = allModels.find(m => m.is_selected);\n        if (currentSelected) {\n          setSelectedAiModel(currentSelected.name);\n        } else if (allModels.length > 0) {\n          const defaultModel = allModels[0];\n          let selectApiEndpoint = '';\n          if (defaultModel.type === 'openai') selectApiEndpoint = '/api/openai/select';else if (defaultModel.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';else if (defaultModel.type === 'gemini') selectApiEndpoint = '/api/gemini/select';else if (defaultModel.type === 'claude') selectApiEndpoint = '/api/claude/select';\n          if (selectApiEndpoint) {\n            const formData = new FormData();\n            formData.append('name', defaultModel.name);\n            axios.post(selectApiEndpoint, formData).then(() => {\n              setSelectedAiModel(defaultModel.name);\n              console.log(`Default AI model selected: ${defaultModel.name}`);\n            }).catch(error => {\n              console.error('Error selecting default AI model:', error);\n            });\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching AI models:', error);\n      }\n    };\n    fetchAiModels();\n  }, []);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = el => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = question => {\n    var _textareaRef$current;\n    setInput(question);\n    (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : _textareaRef$current.focus();\n  };\n\n  // DB 스키마 정보를 AI 프롬프트로 변환\n  const generateSchemaPrompt = schema => {\n    let prompt = '';\n\n    // 테이블 정보\n    prompt += `데이터베이스에 ${schema.tables.length}개의 테이블이 있습니다:\\n\\n`;\n    schema.tables.forEach(table => {\n      prompt += `테이블: ${table.name}`;\n      if (table.comment) {\n        prompt += ` (${table.comment})`;\n      }\n      prompt += '\\n';\n\n      // 컬럼 정보\n      prompt += '  컬럼:\\n';\n      table.columns.forEach(column => {\n        prompt += `    - ${column.name}: ${column.type}`;\n        if (column.max_length) {\n          prompt += `(${column.max_length})`;\n        }\n        if (column.precision && column.scale) {\n          prompt += `(${column.precision},${column.scale})`;\n        }\n        if (!column.nullable) {\n          prompt += ' (NOT NULL)';\n        }\n        if (column.default) {\n          prompt += ` (기본값: ${column.default})`;\n        }\n        if (column.comment) {\n          prompt += ` - ${column.comment}`;\n        }\n        prompt += '\\n';\n      });\n\n      // 인덱스 정보\n      if (table.indexes && table.indexes.length > 0) {\n        prompt += '  인덱스:\\n';\n        table.indexes.forEach(index => {\n          prompt += `    - ${index.name}: [${index.columns.join(', ')}]`;\n          if (index.unique) {\n            prompt += ' (UNIQUE)';\n          }\n          if (index.primary) {\n            prompt += ' (PRIMARY KEY)';\n          }\n          prompt += '\\n';\n        });\n      }\n      prompt += '\\n';\n    });\n\n    // 관계 정보\n    if (schema.relationships && schema.relationships.length > 0) {\n      prompt += '테이블 관계:\\n';\n      schema.relationships.forEach(rel => {\n        prompt += `  ${rel.table}.${rel.column} -> ${rel.foreign_table}.${rel.foreign_column}\\n`;\n      });\n      prompt += '\\n';\n    }\n    return prompt;\n  };\n\n  // 기존 대화 선택\n  const handleSelectConversation = convId => {\n    setCurrentConversationId(convId);\n  };\n\n  // 대화 삭제\n  const handleDeleteConversation = async convId => {\n    if (window.confirm('정말로 이 대화를 삭제하시겠습니까? 모든 메시지가 영구적으로 삭제됩니다.')) {\n      try {\n        await axios.delete(`/api/conversations/${convId}`);\n        // 대화 목록 새로고침\n        const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n        if (convRes.data.status === 'success') {\n          setConversations(convRes.data.conversations);\n        }\n        if (currentConversationId === convId) {\n          setCurrentConversationId(null);\n          setMessages([]);\n        }\n      } catch (error) {\n        console.error('대화 삭제 실패:', error);\n        alert('대화 삭제에 실패했습니다.');\n      }\n    }\n  };\n  const splitQueries = input => {\n    // 세미콜론(;) 기준으로 쿼리 분리, 주석/빈칸 무시\n    return input.split(';').map(q => q.trim()).filter(q => q && !q.startsWith('--'));\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const queries = splitQueries(input);\n    let first = true;\n    for (const query of queries) {\n      try {\n        const formData = new FormData();\n        formData.append('db_name', selectedDb);\n        formData.append('prompt', query);\n        formData.append('conversation_id', currentConversationId || '');\n        const response = await axios.post('/api/nl2sql', formData);\n        if (response.data.status === 'success') {\n          const data = response.data.message;\n          const assistantMessage = {\n            role: 'assistant',\n            content: data.content || '',\n            sql: data.sql || '',\n            result: data.result || null,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => first ? [...prev, assistantMessage] : [...prev, {\n            ...assistantMessage,\n            content: `(쿼리 ${queries.indexOf(query) + 1})`\n          }]);\n        } else {\n          const errorMessage = {\n            role: 'assistant',\n            content: response.data.error || '알 수 없는 오류 발생',\n            error: true,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, errorMessage]);\n        }\n      } catch (error) {\n        const errorMessage = {\n          role: 'assistant',\n          content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n          error: true,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n      first = false;\n    }\n    setLoading(false);\n    setInput('');\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = e => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화 (현재 대화의 메시지만 삭제)\n  const handleResetChat = async () => {\n    if (!currentConversationId) return;\n    if (window.confirm('현재 대화의 모든 메시지를 초기화하시겠습니까?')) {\n      try {\n        const formData = new FormData();\n        formData.append('conversation_id', currentConversationId);\n        const response = await axios.post('/api/nl2sql/reset', formData);\n        if (response.data.status === 'success') {\n          setMessages([]);\n          // 대화 목록 새로고침 (업데이트된 updated_at 반영)\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        }\n      } catch (error) {\n        console.error('채팅 초기화 오류:', error);\n        alert('채팅 초기화에 실패했습니다.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `conversation-sidebar${conversationSidebarCollapsed ? ' collapsed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCAC \\uB300\\uD654 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-sm\",\n          onClick: () => {\n            setCurrentConversationId(null);\n            setMessages([]);\n          },\n          title: \"\\uC0C8 \\uB300\\uD654 \\uC2DC\\uC791\",\n          children: \"\\u2795 \\uC0C8 \\uB300\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sidebar-toggle-btn\",\n          style: {\n            marginLeft: 8\n          },\n          onClick: () => setConversationSidebarCollapsed(v => !v),\n          title: conversationSidebarCollapsed ? '대화목록 펼치기' : '대화목록 접기',\n          children: conversationSidebarCollapsed ? '▶' : '◀'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), !conversationSidebarCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-list-container\",\n        children: conversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-conversations\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC544\\uC9C1 \\uB300\\uD654\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uC0C8 \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD574\\uBCF4\\uC138\\uC694!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"conversation-list list-group\",\n          children: conversations.map(conv => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `conversation-item list-group-item${currentConversationId === conv.id ? ' active' : ''}`,\n            onClick: () => handleSelectConversation(conv.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-title\",\n                children: conv.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-meta\",\n                children: conv.updated_at\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn btn btn-danger btn-sm\",\n              onClick: e => {\n                e.stopPropagation();\n                handleDeleteConversation(conv.id);\n              },\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 21\n            }, this)]\n          }, conv.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"db-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"db-select\",\n              className: \"prompt-label\",\n              children: \"DB \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"db-select\",\n              value: selectedDb || '',\n              onChange: e => onDbChange(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"DB\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"__ALL_DBS__\",\n                children: \"\\uBAA8\\uB4E0 DB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this), databases === null || databases === void 0 ? void 0 : databases.map(db => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: db.name,\n                children: db.name\n              }, db.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-model-selector ms-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ai-model-select\",\n              className: \"prompt-label\",\n              children: \"AI \\uBAA8\\uB378 \\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"ai-model-select\",\n              value: selectedAiModel,\n              onChange: async e => {\n                const modelName = e.target.value;\n                const selected = aiModels.find(m => m.name === modelName);\n                if (selected) {\n                  let selectApiEndpoint = '';\n                  if (selected.type === 'openai') selectApiEndpoint = '/api/openai/select';else if (selected.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';else if (selected.type === 'gemini') selectApiEndpoint = '/api/gemini/select';else if (selected.type === 'claude') selectApiEndpoint = '/api/claude/select';\n                  if (selectApiEndpoint) {\n                    try {\n                      const formData = new FormData();\n                      formData.append('name', selected.name);\n                      await axios.post(selectApiEndpoint, formData);\n                      setSelectedAiModel(selected.name);\n                      alert(`${selected.name} AI 모델이 선택되었습니다.`);\n                    } catch (error) {\n                      console.error('Error selecting AI model:', error);\n                      alert('AI 모델 선택에 실패했습니다.');\n                    }\n                  }\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"AI \\uBAA8\\uB378 \\uC120\\uD0DD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this), aiModels.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: model.name,\n                children: [model.name, \" (\", model.type, \")\"]\n              }, model.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-actions\",\n          children: [currentConversationId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleResetChat,\n            className: \"btn btn-outline-warning btn-sm\",\n            title: \"\\uD604\\uC7AC \\uB300\\uD654 \\uCD08\\uAE30\\uD654\",\n            children: \"\\uD83D\\uDD04 \\uCD08\\uAE30\\uD654\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentConversationId(null);\n              setMessages([]);\n            },\n            className: \"btn btn-outline-primary btn-sm ms-2\",\n            title: \"\\uC0C8 \\uB300\\uD654 \\uC2DC\\uC791\",\n            children: \"\\u2795 \\uC0C8 \\uB300\\uD654\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        id: \"chat-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-box\",\n          children: [messages.length === 0 && !currentConversationId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggest-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCA1 \\uCD94\\uCC9C \\uC9C8\\uBB38\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggest-cards\",\n              children: suggestedQuestions.map((category, categoryIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggest-category\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: category.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggest-cards-grid\",\n                  children: category.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggest-card\",\n                    onClick: () => handleSuggestedQuestion(question),\n                    children: question\n                  }, questionIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 609,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 23\n                }, this)]\n              }, categoryIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-role\",\n                  children: msg.role === 'user' ? '👤 사용자' : '🤖 AI'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: msg.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-body\",\n                children: msg.role === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-message\",\n                  children: msg.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ai-message-card\",\n                  children: [msg.content && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ai-response-section\",\n                    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                      children: msg.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 641,\n                    columnNumber: 27\n                  }, this), msg.sql && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sql-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\uD83D\\uDD0D \\uC0DD\\uC131\\uB41C SQL\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 648,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => navigator.clipboard.writeText(msg.sql),\n                        className: \"btn-copy\",\n                        children: \"\\uBCF5\\uC0AC\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 649,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 647,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                      children: /*#__PURE__*/_jsxDEV(\"code\", {\n                        children: msg.sql\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 651,\n                        columnNumber: 34\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 646,\n                    columnNumber: 27\n                  }, this), msg.result && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"section-header\",\n                      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\uD83D\\uDCCA \\uCFFC\\uB9AC \\uACB0\\uACFC\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 657,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 656,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"result-table-container\",\n                      style: {\n                        maxWidth: '100%',\n                        overflowX: 'auto',\n                        minWidth: 600\n                      },\n                      children: msg.result.headers && msg.result.data ? msg.result.data.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n                        className: \"result-table\",\n                        style: {\n                          minWidth: 600,\n                          fontSize: '1.05em'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: msg.result.headers.map((header, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                              style: {\n                                padding: '8px 12px',\n                                background: '#f5f5f5',\n                                border: '1px solid #ddd'\n                              },\n                              children: header\n                            }, idx, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 667,\n                              columnNumber: 43\n                            }, this))\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 665,\n                            columnNumber: 39\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 664,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: msg.result.data.map((row, ridx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: row.map((cell, cidx) => /*#__PURE__*/_jsxDEV(\"td\", {\n                              style: {\n                                padding: '8px 12px',\n                                border: '1px solid #eee',\n                                background: ridx % 2 === 0 ? '#fff' : '#fafbfc'\n                              },\n                              children: cell === null ? '' : String(cell)\n                            }, cidx, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 675,\n                              columnNumber: 45\n                            }, this))\n                          }, ridx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 673,\n                            columnNumber: 41\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 671,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 663,\n                        columnNumber: 35\n                      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          color: '#888',\n                          padding: '16px'\n                        },\n                        children: \"\\uB370\\uC774\\uD130 \\uC5C6\\uC74C\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 682,\n                        columnNumber: 35\n                      }, this) :\n                      // 마크다운 표 자동 변환\n                      typeof msg.result === 'string' && renderMarkdownTable(msg.result) ||\n                      // 배열/오브젝트 자동 변환\n                      renderAutoTable(msg.result) ||\n                      /*#__PURE__*/\n                      // 기존 방식 fallback\n                      _jsxDEV(\"pre\", {\n                        style: {\n                          fontSize: '1.05em',\n                          background: '#f8f8f8',\n                          padding: 12,\n                          borderRadius: 6,\n                          overflowX: 'auto'\n                        },\n                        children: typeof msg.result === 'object' ? JSON.stringify(msg.result, null, 2) : String(msg.result)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 690,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 659,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 27\n                  }, this), msg.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error-section\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"alert alert-danger\",\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\u274C \\uC624\\uB958 \\uBC1C\\uC0DD\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: msg.content\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 699,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 697,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message message-ai\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-role\",\n                  children: \"\\uD83E\\uDD16 AI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"message-time\",\n                  children: \"\\uCC98\\uB9AC \\uC911...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 716,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-body\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"spinner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 720,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"AI\\uAC00 \\uC751\\uB2F5\\uC744 \\uC0DD\\uC131\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 721,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 719,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-area\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: textareaRef,\n            value: input,\n            onChange: handleInputChange,\n            onKeyDown: handleKeyDown,\n            placeholder: \"\\uC9C8\\uBB38\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694... (Shift+Enter\\uB85C \\uC904\\uBC14\\uAFC8)\",\n            className: \"chat-input\",\n            rows: textareaRows,\n            disabled: loading || !selectedDb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            disabled: loading || !input.trim() || !selectedDb,\n            className: \"send-button\",\n            children: loading ? '⏳' : '📤'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatComponent, \"42+m9Ubmn140w/liVRBlA7bNa7o=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ReactMarkdown","jsxDEV","_jsxDEV","renderMarkdownTable","md","tableMatch","match","rows","map","row","split","slice","cell","trim","length","headers","data","className","style","minWidth","fontSize","children","h","i","fileName","_jsxFileName","lineNumber","columnNumber","ridx","cidx","renderAutoTable","Array","isArray","Object","keys","v","ChatComponent","selectedDb","databases","onDbChange","_s","messages","setMessages","input","setInput","loading","setLoading","textareaRows","setTextareaRows","messagesEndRef","textareaRef","aiModels","setAiModels","selectedAiModel","setSelectedAiModel","dbSchema","setDbSchema","conversations","setConversations","currentConversationId","setCurrentConversationId","conversationSidebarCollapsed","setConversationSidebarCollapsed","suggestedQuestions","title","questions","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchConversations","response","get","status","id","error","console","fetchDbSchema","schema","log","fetchMessages","formattedMessages","msg","role","content","sql","sql_query","result","sql_result","JSON","parse","timestamp","Date","toLocaleTimeString","fetchAiModels","openaiRes","azureOpenAIRes","geminiRes","claudeRes","allModels","k","type","configs","c","currentSelected","find","m","is_selected","name","defaultModel","selectApiEndpoint","formData","FormData","append","post","then","catch","autoResizeTextarea","el","height","newHeight","Math","min","scrollHeight","ceil","handleSuggestedQuestion","question","_textareaRef$current","focus","generateSchemaPrompt","prompt","tables","forEach","table","comment","columns","column","max_length","precision","scale","nullable","default","indexes","index","join","unique","primary","relationships","rel","foreign_table","foreign_column","handleSelectConversation","convId","handleDeleteConversation","window","confirm","delete","convRes","alert","splitQueries","q","filter","startsWith","handleSend","queries","first","query","message","assistantMessage","prev","indexOf","errorMessage","handleKeyDown","e","key","shiftKey","preventDefault","handleInputChange","target","value","handleResetChat","onClick","marginLeft","conv","updated_at","stopPropagation","htmlFor","onChange","db","modelName","selected","model","category","categoryIndex","questionIndex","idx","navigator","clipboard","writeText","maxWidth","overflowX","header","padding","background","border","String","color","borderRadius","stringify","ref","onKeyDown","placeholder","disabled","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/AI_DBAgent/frontend/src/components/ChatComponent.js"],"sourcesContent":["// ChatComponent.js\n// 자연어→SQL, AI 통합 채팅 컴포넌트\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nimport ReactMarkdown from 'react-markdown';\n\n// 마크다운 표를 HTML 테이블로 렌더링하는 함수\nfunction renderMarkdownTable(md) {\n  // 마크다운 표만 추출\n  const tableMatch = md.match(/\\|.*\\|/g);\n  if (!tableMatch) return null;\n  const rows = tableMatch.map(row => row.split('|').slice(1, -1).map(cell => cell.trim()));\n  if (rows.length < 2) return null;\n  const headers = rows[0];\n  const data = rows.slice(2); // 1: header, 2: separator, 3~: data\n  return (\n    <table className=\"result-table\" style={{ minWidth: 600, fontSize: '1.05em' }}>\n      <thead>\n        <tr>{headers.map((h, i) => <th key={i}>{h}</th>)}</tr>\n      </thead>\n      <tbody>\n        {data.map((row, ridx) => (\n          <tr key={ridx}>{row.map((cell, cidx) => <td key={cidx}>{cell}</td>)}</tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\n// 배열/오브젝트를 표로 변환\nfunction renderAutoTable(data) {\n  if (Array.isArray(data)) {\n    if (data.length === 0) return null;\n    if (typeof data[0] === 'object' && data[0] !== null) {\n      // 오브젝트 배열\n      const headers = Object.keys(data[0]);\n      return (\n        <table className=\"result-table\" style={{ minWidth: 600, fontSize: '1.05em' }}>\n          <thead>\n            <tr>{headers.map((h, i) => <th key={i}>{h}</th>)}</tr>\n          </thead>\n          <tbody>\n            {data.map((row, ridx) => (\n              <tr key={ridx}>{headers.map((h, cidx) => <td key={cidx}>{row[h]}</td>)}</tr>\n            ))}\n          </tbody>\n        </table>\n      );\n    } else {\n      // 단순 배열\n      return (\n        <table className=\"result-table\" style={{ minWidth: 300, fontSize: '1.05em' }}>\n          <tbody>\n            {data.map((v, i) => <tr key={i}><td>{v}</td></tr>)}\n          </tbody>\n        </table>\n      );\n    }\n  } else if (typeof data === 'object' && data !== null) {\n    // 단일 오브젝트\n    const headers = Object.keys(data);\n    return (\n      <table className=\"result-table\" style={{ minWidth: 300, fontSize: '1.05em' }}>\n        <tbody>\n          {headers.map((h, i) => <tr key={i}><th>{h}</th><td>{data[h]}</td></tr>)}\n        </tbody>\n      </table>\n    );\n  }\n  return null;\n}\n\nfunction ChatComponent({ selectedDb, databases, onDbChange }) {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [textareaRows, setTextareaRows] = useState(1);\n  const messagesEndRef = useRef(null);\n  const textareaRef = useRef(null);\n\n  const [aiModels, setAiModels] = useState([]);\n  const [selectedAiModel, setSelectedAiModel] = useState('');\n  const [dbSchema, setDbSchema] = useState(null); // DB 스키마 정보\n\n  const [conversations, setConversations] = useState([]); // 대화 목록\n  const [currentConversationId, setCurrentConversationId] = useState(null); // 현재 대화 ID\n  const [conversationSidebarCollapsed, setConversationSidebarCollapsed] = useState(false);\n\n  // 추천 질문들 (카드형)\n  const suggestedQuestions = [\n    {\n      title: '성능 분석',\n      questions: [\n        '오늘 가장 오래 걸린 쿼리 보여줘',\n        '슬로우 쿼리 10개만 보여줘',\n        '테이블별 row 수와 크기 알려줘'\n      ]\n    },\n    {\n      title: '데이터 탐색',\n      questions: [\n        '가장 row가 많은 테이블 알려줘',\n        '최근 7일간 생성된 데이터 보여줘',\n        '사용자 테이블의 구조를 설명해줘'\n      ]\n    },\n    {\n      title: '시스템 상태',\n      questions: [\n        '현재 활성 연결 수는?',\n        '데이터베이스 크기와 사용량 알려줘',\n        '인덱스 사용 현황을 분석해줘'\n      ]\n    }\n  ];\n\n  // 자동 스크롤\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // DB 선택 변경 시 대화 목록 불러오기\n  useEffect(() => {\n    const fetchConversations = async () => {\n      if (selectedDb) {\n        try {\n          const response = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (response.data.status === 'success') {\n            const conversations = response.data.conversations;\n            setConversations(conversations);\n            if (conversations.length > 0) {\n              // 가장 최근 대화를 자동으로 선택\n              setCurrentConversationId(conversations[0].id);\n            } else {\n              // 대화가 없으면 현재 대화 초기화\n              setCurrentConversationId(null);\n              setMessages([]);\n            }\n          }\n        } catch (error) {\n          console.error('대화 목록을 불러오는데 실패했습니다:', error);\n          setConversations([]);\n        }\n      } else {\n        setConversations([]);\n        setCurrentConversationId(null);\n        setMessages([]);\n      }\n    };\n\n    fetchConversations();\n  }, [selectedDb]);\n\n  // DB 선택 변경 시 스키마 정보 불러오기\n  useEffect(() => {\n    const fetchDbSchema = async () => {\n      if (selectedDb && selectedDb !== '__ALL_DBS__') {\n        try {\n          const response = await axios.get(`/api/schema/${selectedDb}`);\n          if (response.data.status === 'success') {\n            setDbSchema(response.data.schema);\n            console.log('DB 스키마 정보 로드 완료:', response.data.schema);\n          }\n        } catch (error) {\n          console.error('DB 스키마 정보를 불러오는데 실패했습니다:', error);\n          setDbSchema(null);\n        }\n      } else {\n        setDbSchema(null);\n      }\n    };\n\n    fetchDbSchema();\n  }, [selectedDb]);\n\n  // 현재 대화 ID 변경 시 메시지 불러오기\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (currentConversationId) {\n        try {\n          const response = await axios.get(`/api/conversations/${currentConversationId}/messages`);\n          if (response.data.status === 'success') {\n            // DB에서 불러온 메시지 형식 변환\n            const formattedMessages = response.data.messages.map(msg => ({\n              role: msg.role,\n              content: msg.content,\n              sql: msg.sql_query,\n              result: msg.sql_result ? JSON.parse(msg.sql_result) : null,\n              timestamp: new Date(msg.timestamp).toLocaleTimeString()\n            }));\n            setMessages(formattedMessages);\n          }\n        } catch (error) {\n          console.error('메시지를 불러오는데 실패했습니다:', error);\n          setMessages([]);\n        }\n      } else {\n        setMessages([]);\n      }\n    };\n    fetchMessages();\n  }, [currentConversationId]);\n\n  // AI 모델 목록 불러오기 (한 번만 실행)\n  useEffect(() => {\n    const fetchAiModels = async () => {\n      try {\n        const openaiRes = await axios.get('/api/openai/keys');\n        const azureOpenAIRes = await axios.get('/api/azure-openai/configs');\n        const geminiRes = await axios.get('/api/gemini/configs');\n        const claudeRes = await axios.get('/api/claude/configs');\n\n        const allModels = [\n          ...openaiRes.data.keys.map(k => ({ ...k, type: 'openai' })),\n          ...azureOpenAIRes.data.configs.map(c => ({ ...c, type: 'azure_openai' })),\n          ...geminiRes.data.configs.map(c => ({ ...c, type: 'gemini' })),\n          ...claudeRes.data.configs.map(c => ({ ...c, type: 'claude' })),\n        ];\n        setAiModels(allModels);\n\n        const currentSelected = allModels.find(m => m.is_selected);\n        if (currentSelected) {\n          setSelectedAiModel(currentSelected.name);\n        } else if (allModels.length > 0) {\n          const defaultModel = allModels[0];\n          let selectApiEndpoint = '';\n          if (defaultModel.type === 'openai') selectApiEndpoint = '/api/openai/select';\n          else if (defaultModel.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';\n          else if (defaultModel.type === 'gemini') selectApiEndpoint = '/api/gemini/select';\n          else if (defaultModel.type === 'claude') selectApiEndpoint = '/api/claude/select';\n\n          if (selectApiEndpoint) {\n            const formData = new FormData();\n            formData.append('name', defaultModel.name);\n            axios.post(selectApiEndpoint, formData)\n              .then(() => {\n                setSelectedAiModel(defaultModel.name);\n                console.log(`Default AI model selected: ${defaultModel.name}`);\n              })\n              .catch(error => {\n                console.error('Error selecting default AI model:', error);\n              });\n          }\n        }\n\n      } catch (error) {\n        console.error('Error fetching AI models:', error);\n      }\n    };\n    fetchAiModels();\n  }, []);\n\n  // 텍스트 영역 자동 크기 조정\n  const autoResizeTextarea = (el) => {\n    el.style.height = 'auto';\n    const newHeight = Math.min(el.scrollHeight, 120); // 최대 5줄\n    el.style.height = newHeight + 'px';\n    setTextareaRows(Math.ceil(newHeight / 24));\n  };\n\n  // 추천 질문 클릭\n  const handleSuggestedQuestion = (question) => {\n    setInput(question);\n    textareaRef.current?.focus();\n  };\n\n  // DB 스키마 정보를 AI 프롬프트로 변환\n  const generateSchemaPrompt = (schema) => {\n    let prompt = '';\n    \n    // 테이블 정보\n    prompt += `데이터베이스에 ${schema.tables.length}개의 테이블이 있습니다:\\n\\n`;\n    \n    schema.tables.forEach(table => {\n      prompt += `테이블: ${table.name}`;\n      if (table.comment) {\n        prompt += ` (${table.comment})`;\n      }\n      prompt += '\\n';\n      \n      // 컬럼 정보\n      prompt += '  컬럼:\\n';\n      table.columns.forEach(column => {\n        prompt += `    - ${column.name}: ${column.type}`;\n        if (column.max_length) {\n          prompt += `(${column.max_length})`;\n        }\n        if (column.precision && column.scale) {\n          prompt += `(${column.precision},${column.scale})`;\n        }\n        if (!column.nullable) {\n          prompt += ' (NOT NULL)';\n        }\n        if (column.default) {\n          prompt += ` (기본값: ${column.default})`;\n        }\n        if (column.comment) {\n          prompt += ` - ${column.comment}`;\n        }\n        prompt += '\\n';\n      });\n      \n      // 인덱스 정보\n      if (table.indexes && table.indexes.length > 0) {\n        prompt += '  인덱스:\\n';\n        table.indexes.forEach(index => {\n          prompt += `    - ${index.name}: [${index.columns.join(', ')}]`;\n          if (index.unique) {\n            prompt += ' (UNIQUE)';\n          }\n          if (index.primary) {\n            prompt += ' (PRIMARY KEY)';\n          }\n          prompt += '\\n';\n        });\n      }\n      prompt += '\\n';\n    });\n    \n    // 관계 정보\n    if (schema.relationships && schema.relationships.length > 0) {\n      prompt += '테이블 관계:\\n';\n      schema.relationships.forEach(rel => {\n        prompt += `  ${rel.table}.${rel.column} -> ${rel.foreign_table}.${rel.foreign_column}\\n`;\n      });\n      prompt += '\\n';\n    }\n    \n    return prompt;\n  };\n\n  // 기존 대화 선택\n  const handleSelectConversation = (convId) => {\n    setCurrentConversationId(convId);\n  };\n\n  // 대화 삭제\n  const handleDeleteConversation = async (convId) => {\n    if (window.confirm('정말로 이 대화를 삭제하시겠습니까? 모든 메시지가 영구적으로 삭제됩니다.')) {\n      try {\n        await axios.delete(`/api/conversations/${convId}`);\n        // 대화 목록 새로고침\n        const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n        if (convRes.data.status === 'success') {\n          setConversations(convRes.data.conversations);\n        }\n        if (currentConversationId === convId) {\n          setCurrentConversationId(null);\n          setMessages([]);\n        }\n      } catch (error) {\n        console.error('대화 삭제 실패:', error);\n        alert('대화 삭제에 실패했습니다.');\n      }\n    }\n  };\n\n  const splitQueries = (input) => {\n    // 세미콜론(;) 기준으로 쿼리 분리, 주석/빈칸 무시\n    return input\n      .split(';')\n      .map(q => q.trim())\n      .filter(q => q && !q.startsWith('--'));\n  };\n\n  // 메시지 전송\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    const queries = splitQueries(input);\n    let first = true;\n    for (const query of queries) {\n      try {\n        const formData = new FormData();\n        formData.append('db_name', selectedDb);\n        formData.append('prompt', query);\n        formData.append('conversation_id', currentConversationId || '');\n        const response = await axios.post('/api/nl2sql', formData);\n        if (response.data.status === 'success') {\n          const data = response.data.message;\n          const assistantMessage = {\n            role: 'assistant',\n            content: data.content || '',\n            sql: data.sql || '',\n            result: data.result || null,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => first ? [...prev, assistantMessage] : [...prev, { ...assistantMessage, content: `(쿼리 ${queries.indexOf(query)+1})` }]);\n        } else {\n          const errorMessage = {\n            role: 'assistant',\n            content: response.data.error || '알 수 없는 오류 발생',\n            error: true,\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, errorMessage]);\n        }\n      } catch (error) {\n        const errorMessage = {\n          role: 'assistant',\n          content: '죄송합니다. 요청 처리 중 오류가 발생했습니다.',\n          error: true,\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n      first = false;\n    }\n    setLoading(false);\n    setInput('');\n  };\n\n  // 키보드 이벤트 처리\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  // 텍스트 영역 입력 처리\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n    autoResizeTextarea(e.target);\n  };\n\n  // 채팅 초기화 (현재 대화의 메시지만 삭제)\n  const handleResetChat = async () => {\n    if (!currentConversationId) return;\n    \n    if (window.confirm('현재 대화의 모든 메시지를 초기화하시겠습니까?')) {\n      try {\n        const formData = new FormData();\n        formData.append('conversation_id', currentConversationId);\n        const response = await axios.post('/api/nl2sql/reset', formData);\n        \n        if (response.data.status === 'success') {\n          setMessages([]);\n          // 대화 목록 새로고침 (업데이트된 updated_at 반영)\n          const convRes = await axios.get(`/api/conversations?db_name=${selectedDb}`);\n          if (convRes.data.status === 'success') {\n            setConversations(convRes.data.conversations);\n          }\n        }\n      } catch (error) {\n        console.error('채팅 초기화 오류:', error);\n        alert('채팅 초기화에 실패했습니다.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"chat-page-container\">\n      {/* 대화 목록 사이드바 */}\n      <div className={`conversation-sidebar${conversationSidebarCollapsed ? ' collapsed' : ''}`}> \n        <div className=\"sidebar-header\">\n          <h3>💬 대화 목록</h3>\n          <button \n            className=\"btn btn-primary btn-sm\"\n            onClick={() => {\n              setCurrentConversationId(null);\n              setMessages([]);\n            }}\n            title=\"새 대화 시작\"\n          >\n            ➕ 새 대화\n          </button>\n          <button \n            className=\"sidebar-toggle-btn\"\n            style={{ marginLeft: 8 }}\n            onClick={() => setConversationSidebarCollapsed(v => !v)}\n            title={conversationSidebarCollapsed ? '대화목록 펼치기' : '대화목록 접기'}\n          >\n            {conversationSidebarCollapsed ? '▶' : '◀'}\n          </button>\n        </div>\n        {!conversationSidebarCollapsed && (\n          <div className=\"conversation-list-container\">\n            {conversations.length === 0 ? (\n              <div className=\"no-conversations\">\n                <p>아직 대화가 없습니다.</p>\n                <p>새 대화를 시작해보세요!</p>\n              </div>\n            ) : (\n              <ul className=\"conversation-list list-group\">\n                {conversations.map(conv => (\n                  <li \n                    key={conv.id}\n                    className={`conversation-item list-group-item${currentConversationId === conv.id ? ' active' : ''}`}\n                    onClick={() => handleSelectConversation(conv.id)}\n                  >\n                    <div className=\"conversation-content\">\n                      <div className=\"conversation-title\">{conv.title}</div>\n                      <div className=\"conversation-meta\">{conv.updated_at}</div>\n                    </div>\n                    <button className=\"delete-btn btn btn-danger btn-sm\" onClick={e => { e.stopPropagation(); handleDeleteConversation(conv.id); }}>삭제</button>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n      </div>\n\n      <div className=\"chat-container\">\n        {/* 채팅 헤더 */}\n        <div className=\"chat-header\">\n          <div className=\"header-left\">\n            <div className=\"db-selector\">\n              <label htmlFor=\"db-select\" className=\"prompt-label\">DB 선택</label>\n              <select \n                id=\"db-select\" \n                value={selectedDb || ''} \n                onChange={(e) => onDbChange(e.target.value)}\n              >\n                <option value=\"\">DB를 선택하세요</option>\n                <option value=\"__ALL_DBS__\">모든 DB</option>\n                {databases?.map(db => (\n                  <option key={db.name} value={db.name}>\n                    {db.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            {/* AI 모델 선택 드롭다운 */}\n            <div className=\"ai-model-selector ms-3\">\n              <label htmlFor=\"ai-model-select\" className=\"prompt-label\">AI 모델 선택</label>\n              <select \n                id=\"ai-model-select\" \n                value={selectedAiModel} \n                onChange={async (e) => {\n                  const modelName = e.target.value;\n                  const selected = aiModels.find(m => m.name === modelName);\n                  if (selected) {\n                    let selectApiEndpoint = '';\n                    if (selected.type === 'openai') selectApiEndpoint = '/api/openai/select';\n                    else if (selected.type === 'azure_openai') selectApiEndpoint = '/api/azure-openai/select';\n                    else if (selected.type === 'gemini') selectApiEndpoint = '/api/gemini/select';\n                    else if (selected.type === 'claude') selectApiEndpoint = '/api/claude/select';\n\n                    if (selectApiEndpoint) {\n                      try {\n                        const formData = new FormData();\n                        formData.append('name', selected.name);\n                        await axios.post(selectApiEndpoint, formData);\n                        setSelectedAiModel(selected.name);\n                        alert(`${selected.name} AI 모델이 선택되었습니다.`);\n                      } catch (error) {\n                        console.error('Error selecting AI model:', error);\n                        alert('AI 모델 선택에 실패했습니다.');\n                      }\n                    }\n                  }\n                }}\n              >\n                <option value=\"\">AI 모델 선택</option>\n                {aiModels.map(model => (\n                  <option key={model.name} value={model.name}>\n                    {model.name} ({model.type})\n                  </option>\n                ))}\n              </select>\n            </div>\n\n          </div>\n          \n          <div className=\"header-actions\">\n            {currentConversationId && (\n              <button \n                onClick={handleResetChat} \n                className=\"btn btn-outline-warning btn-sm\"\n                title=\"현재 대화 초기화\"\n              >\n                🔄 초기화\n              </button>\n            )}\n            <button \n              onClick={() => {\n                setCurrentConversationId(null);\n                setMessages([]);\n              }}\n              className=\"btn btn-outline-primary btn-sm ms-2\"\n              title=\"새 대화 시작\"\n            >\n              ➕ 새 대화\n            </button>\n          </div>\n        </div>\n\n        {/* 채팅 메시지 영역 */}\n        <div className=\"chat-messages\" id=\"chat-messages\">\n          <div className=\"chat-box\">\n            {/* 추천 질문 카드들 (첫 대화 전만 표시) */}\n            {messages.length === 0 && !currentConversationId && (\n              <div className=\"suggest-section\">\n                <h3>💡 추천 질문</h3>\n                <div className=\"suggest-cards\">\n                  {suggestedQuestions.map((category, categoryIndex) => (\n                    <div key={categoryIndex} className=\"suggest-category\">\n                      <h4>{category.title}</h4>\n                      <div className=\"suggest-cards-grid\">\n                        {category.questions.map((question, questionIndex) => (\n                          <div \n                            key={questionIndex}\n                            className=\"suggest-card\" \n                            onClick={() => handleSuggestedQuestion(question)}\n                          >\n                            {question}\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* 메시지들 */}\n            {messages.map((msg, idx) => (\n              <div key={idx} className={`message ${msg.role === 'user' ? 'message-user' : 'message-ai'}`}>\n                <div className=\"message-content\">\n                  <div className=\"message-header\">\n                    <span className=\"message-role\">\n                      {msg.role === 'user' ? '👤 사용자' : '🤖 AI'}\n                    </span>\n                    <span className=\"message-time\">{msg.timestamp}</span>\n                  </div>\n                  \n                  <div className=\"message-body\">\n                    {msg.role === 'user' ? (\n                      <div className=\"user-message\">{msg.content}</div>\n                    ) : (\n                      <div className=\"ai-message-card\">\n                        {msg.content && (\n                          <div className=\"ai-response-section\">\n                            <ReactMarkdown>{msg.content}</ReactMarkdown>\n                          </div>\n                        )}\n                        {msg.sql && (\n                          <div className=\"sql-section\">\n                            <div className=\"section-header\">\n                              <strong>🔍 생성된 SQL</strong>\n                              <button onClick={() => navigator.clipboard.writeText(msg.sql)} className=\"btn-copy\">복사</button>\n                            </div>\n                            <pre><code>{msg.sql}</code></pre>\n                          </div>\n                        )}\n                        {msg.result && (\n                          <div className=\"result-section\">\n                            <div className=\"section-header\">\n                              <strong>📊 쿼리 결과</strong>\n                            </div>\n                            <div className=\"result-table-container\" style={{ maxWidth: '100%', overflowX: 'auto', minWidth: 600 }}>\n                              {/* headers/data 구조면 표로, 아니면 기존 방식 */}\n                              {msg.result.headers && msg.result.data ? (\n                                msg.result.data.length > 0 ? (\n                                  <table className=\"result-table\" style={{ minWidth: 600, fontSize: '1.05em' }}>\n                                    <thead>\n                                      <tr>\n                                        {msg.result.headers.map((header, idx) => (\n                                          <th key={idx} style={{ padding: '8px 12px', background: '#f5f5f5', border: '1px solid #ddd' }}>{header}</th>\n                                        ))}\n                                      </tr>\n                                    </thead>\n                                    <tbody>\n                                      {msg.result.data.map((row, ridx) => (\n                                        <tr key={ridx}>\n                                          {row.map((cell, cidx) => (\n                                            <td key={cidx} style={{ padding: '8px 12px', border: '1px solid #eee', background: ridx % 2 === 0 ? '#fff' : '#fafbfc' }}>{cell === null ? '' : String(cell)}</td>\n                                          ))}\n                                        </tr>\n                                      ))}\n                                    </tbody>\n                                  </table>\n                                ) : (\n                                  <div style={{ color: '#888', padding: '16px' }}>데이터 없음</div>\n                                )\n                              ) : (\n                                // 마크다운 표 자동 변환\n                                (typeof msg.result === 'string' && renderMarkdownTable(msg.result)) ||\n                                // 배열/오브젝트 자동 변환\n                                renderAutoTable(msg.result) ||\n                                // 기존 방식 fallback\n                                <pre style={{ fontSize: '1.05em', background: '#f8f8f8', padding: 12, borderRadius: 6, overflowX: 'auto' }}>{typeof msg.result === 'object' ? JSON.stringify(msg.result, null, 2) : String(msg.result)}</pre>\n                              )}\n                            </div>\n                          </div>\n                        )}\n                        {msg.error && (\n                          <div className=\"error-section\">\n                            <div className=\"alert alert-danger\">\n                              <strong>❌ 오류 발생</strong>\n                              <p>{msg.content}</p>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            {/* 로딩 인디케이터 */}\n            {loading && (\n              <div className=\"message message-ai\">\n                <div className=\"message-content\">\n                  <div className=\"message-header\">\n                    <span className=\"message-role\">🤖 AI</span>\n                    <span className=\"message-time\">처리 중...</span>\n                  </div>\n                  <div className=\"message-body\">\n                    <div className=\"loading-indicator\">\n                      <div className=\"spinner\"></div>\n                      <span>AI가 응답을 생성하고 있습니다...</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div ref={messagesEndRef} />\n          </div>\n        </div>\n\n        {/* 입력 영역 */}\n        <div className=\"chat-input-area\">\n          <div className=\"input-container\">\n            <textarea\n              ref={textareaRef}\n              value={input}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              placeholder=\"질문을 입력하세요... (Shift+Enter로 줄바꿈)\"\n              className=\"chat-input\"\n              rows={textareaRows}\n              disabled={loading || !selectedDb}\n            />\n            <button\n              onClick={handleSend}\n              disabled={loading || !input.trim() || !selectedDb}\n              className=\"send-button\"\n            >\n              {loading ? '⏳' : '📤'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}