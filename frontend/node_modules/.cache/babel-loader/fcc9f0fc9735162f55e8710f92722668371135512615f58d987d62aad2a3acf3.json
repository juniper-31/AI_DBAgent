{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/tmp/db-agent/frontend/src/components/AwsRdsResource.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AwsRdsResource = ({\n  onDatabaseAdd\n}) => {\n  _s();\n  const [instances, setInstances] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    fetchRdsInstances();\n  }, []);\n  const fetchRdsInstances = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setInstances(data.instances || []);\n      } else {\n        setError('RDS 인스턴스 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 인스턴스 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRegisterDb = async instance => {\n    setSuccess('');\n    setError('');\n    try {\n      // DB 관리에 등록 요청 (예시: /api/databases)\n      const formData = new FormData();\n      formData.append('name', instance.DBInstanceIdentifier);\n      formData.append('host', instance.Endpoint.Address);\n      formData.append('port', instance.Endpoint.Port);\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', instance.DBName || '');\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('DB로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aws-rds-resource\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"RDS \\uC778\\uC2A4\\uD134\\uC2A4 \\uC870\\uD68C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: instances.map(inst => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"rds-instance-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: inst.DBInstanceIdentifier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), \" (\", inst.Engine, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 75\n          }, this), \"\\uD638\\uC2A4\\uD2B8: \", inst.Endpoint.Address, \":\", inst.Endpoint.Port, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 64\n          }, this), \"DB\\uBA85: \", inst.DBName || '-']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRegisterDb(inst),\n          className: \"btn btn-primary btn-sm\",\n          children: \"DB\\uB85C \\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, inst.DBInstanceIdentifier, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AwsRdsResource, \"q+zo+4WhvZvhhRk38LEWY9cytPI=\");\n_c = AwsRdsResource;\nexport default AwsRdsResource;\nvar _c;\n$RefreshReg$(_c, \"AwsRdsResource\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AwsRdsResource","onDatabaseAdd","_s","instances","setInstances","loading","setLoading","error","setError","success","setSuccess","fetchRdsInstances","response","fetch","credentials","ok","data","json","e","handleRegisterDb","instance","formData","FormData","append","DBInstanceIdentifier","Endpoint","Address","Port","DBName","method","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","inst","Engine","onClick","_c","$RefreshReg$"],"sources":["/Users/bskong/tmp/db-agent/frontend/src/components/AwsRdsResource.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AwsRdsResource = ({ onDatabaseAdd }) => {\n  const [instances, setInstances] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    fetchRdsInstances();\n  }, []);\n\n  const fetchRdsInstances = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', { credentials: 'include' });\n      if (response.ok) {\n        const data = await response.json();\n        setInstances(data.instances || []);\n      } else {\n        setError('RDS 인스턴스 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 인스턴스 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRegisterDb = async (instance) => {\n    setSuccess('');\n    setError('');\n    try {\n      // DB 관리에 등록 요청 (예시: /api/databases)\n      const formData = new FormData();\n      formData.append('name', instance.DBInstanceIdentifier);\n      formData.append('host', instance.Endpoint.Address);\n      formData.append('port', instance.Endpoint.Port);\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', instance.DBName || '');\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('DB로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"aws-rds-resource\">\n      <h2>RDS 인스턴스 조회</h2>\n      {loading && <div>불러오는 중...</div>}\n      {error && <div className=\"alert alert-error\">{error}</div>}\n      {success && <div className=\"alert alert-success\">{success}</div>}\n      <ul>\n        {instances.map((inst) => (\n          <li key={inst.DBInstanceIdentifier} className=\"rds-instance-item\">\n            <div>\n              <strong>{inst.DBInstanceIdentifier}</strong> ({inst.Engine})<br />\n              호스트: {inst.Endpoint.Address}:{inst.Endpoint.Port}<br />\n              DB명: {inst.DBName || '-'}\n            </div>\n            <button onClick={() => handleRegisterDb(inst)} className=\"btn btn-primary btn-sm\">DB로 등록</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default AwsRdsResource; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}