{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsRdsResource.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AwsRdsResource = ({\n  onDatabaseAdd\n}) => {\n  _s();\n  const [instances, setInstances] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [expandedClusters, setExpandedClusters] = useState({});\n  useEffect(() => {\n    fetchRdsInstances();\n  }, []);\n  const fetchRdsInstances = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setInstances(data.instances || []);\n        setClusters(data.clusters || []);\n      } else {\n        setError('RDS 인스턴스 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 인스턴스 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 클러스터 기준 그룹핑 (클러스터 정보와 인스턴스 매칭)\n  const groupByCluster = (instances, clusters) => {\n    const clusterMap = {};\n    clusters.forEach(c => {\n      clusterMap[c.DBClusterIdentifier] = {\n        ...c,\n        instances: []\n      };\n    });\n    const singles = [];\n    instances.forEach(inst => {\n      if (inst.DBClusterIdentifier && clusterMap[inst.DBClusterIdentifier]) {\n        clusterMap[inst.DBClusterIdentifier].instances.push(inst);\n      } else {\n        singles.push(inst);\n      }\n    });\n    return {\n      clusters: Object.values(clusterMap),\n      singles\n    };\n  };\n  const {\n    clusters: clusterList,\n    singles\n  } = groupByCluster(instances, clusters);\n  const toggleCluster = clusterId => {\n    setExpandedClusters(prev => ({\n      ...prev,\n      [clusterId]: !prev[clusterId]\n    }));\n  };\n\n  // 클러스터 등록 핸들러(RO 주소)\n  const handleRegisterCluster = async cluster => {\n    setSuccess('');\n    setError('');\n    const endpoint = cluster.ReaderEndpoint || cluster.Endpoint || '-';\n    const engine = cluster.Engine || '';\n    try {\n      const formData = new FormData();\n      formData.append('name', cluster.DBClusterIdentifier);\n      formData.append('host', endpoint);\n      formData.append('port', '');\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', '');\n      formData.append('engine', engine);\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('클러스터(RO)로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n  const handleRegisterDb = async instance => {\n    setSuccess('');\n    setError('');\n    try {\n      const formData = new FormData();\n      formData.append('name', instance.DBInstanceIdentifier);\n      formData.append('host', instance.Endpoint.Address);\n      formData.append('port', instance.Endpoint.Port);\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', instance.DBName || '');\n      formData.append('engine', instance.Engine || '');\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('DB로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aws-rds-resource\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"RDS \\uC778\\uC2A4\\uD134\\uC2A4 \\uC870\\uD68C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px',\n        color: '#888',\n        marginBottom: '8px'\n      },\n      children: [\"\\u203B \\uD074\\uB7EC\\uC2A4\\uD130\\uB294 \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uC77D\\uAE30\\uC804\\uC6A9(RO) \\uC5D4\\uB4DC\\uD3EC\\uC778\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 78\n      }, this), \"\\uB85C\\uB9CC \\uB4F1\\uB85D\\uB429\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"db-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD074\\uB7EC\\uC2A4\\uD130/\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC5D4\\uC9C4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uD638\\uC2A4\\uD2B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uB4F1\\uB85D\\uC0C1\\uD0DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC561\\uC158\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [clusterList.map(cluster => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"cluster-row\",\n            onClick: () => toggleCluster(cluster.DBClusterIdentifier),\n            style: {\n              cursor: 'pointer',\n              background: '#f7f8fa'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginRight: 8\n                },\n                children: expandedClusters[cluster.DBClusterIdentifier] ? '▼' : '▶'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: cluster.DBClusterIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), \" (\\uD074\\uB7EC\\uC2A4\\uD130)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.Engine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cluster.ReaderEndpoint || cluster.Endpoint || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => {\n                  e.stopPropagation();\n                  handleRegisterCluster(cluster);\n                },\n                className: \"btn btn-primary btn-sm\",\n                children: \"DB\\uB85C \\uB4F1\\uB85D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), expandedClusters[cluster.DBClusterIdentifier] && cluster.instances.map(inst => {\n            var _inst$Endpoint;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"instance-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  paddingLeft: 32\n                },\n                children: inst.DBInstanceIdentifier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: inst.Engine\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_inst$Endpoint = inst.Endpoint) === null || _inst$Endpoint === void 0 ? void 0 : _inst$Endpoint.Address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)]\n            }, inst.DBInstanceIdentifier, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this);\n          })]\n        }, cluster.DBClusterIdentifier, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)), singles.map(inst => {\n          var _inst$Endpoint2;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"instance-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: inst.DBInstanceIdentifier\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: inst.Engine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_inst$Endpoint2 = inst.Endpoint) === null || _inst$Endpoint2 === void 0 ? void 0 : _inst$Endpoint2.Address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRegisterDb(inst),\n                className: \"btn btn-primary btn-sm\",\n                children: \"DB\\uB85C \\uB4F1\\uB85D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, inst.DBInstanceIdentifier, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(AwsRdsResource, \"rSv3P0uia7DWc383B25settebXQ=\");\n_c = AwsRdsResource;\nexport default AwsRdsResource;\nvar _c;\n$RefreshReg$(_c, \"AwsRdsResource\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AwsRdsResource","onDatabaseAdd","_s","instances","setInstances","clusters","setClusters","loading","setLoading","error","setError","success","setSuccess","expandedClusters","setExpandedClusters","fetchRdsInstances","response","fetch","credentials","ok","data","json","e","groupByCluster","clusterMap","forEach","c","DBClusterIdentifier","singles","inst","push","Object","values","clusterList","toggleCluster","clusterId","prev","handleRegisterCluster","cluster","endpoint","ReaderEndpoint","Endpoint","engine","Engine","formData","FormData","append","method","body","handleRegisterDb","instance","DBInstanceIdentifier","Address","Port","DBName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","color","marginBottom","map","Fragment","onClick","cursor","background","marginRight","stopPropagation","_inst$Endpoint","paddingLeft","_inst$Endpoint2","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/AwsRdsResource.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst AwsRdsResource = ({ onDatabaseAdd }) => {\n  const [instances, setInstances] = useState([]);\n  const [clusters, setClusters] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [expandedClusters, setExpandedClusters] = useState({});\n\n  useEffect(() => {\n    fetchRdsInstances();\n  }, []);\n\n  const fetchRdsInstances = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await fetch('/aws/rds-instances', { credentials: 'include' });\n      if (response.ok) {\n        const data = await response.json();\n        setInstances(data.instances || []);\n        setClusters(data.clusters || []);\n      } else {\n        setError('RDS 인스턴스 목록을 불러오지 못했습니다.');\n      }\n    } catch (e) {\n      setError('RDS 인스턴스 조회 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 클러스터 기준 그룹핑 (클러스터 정보와 인스턴스 매칭)\n  const groupByCluster = (instances, clusters) => {\n    const clusterMap = {};\n    clusters.forEach(c => {\n      clusterMap[c.DBClusterIdentifier] = { ...c, instances: [] };\n    });\n    const singles = [];\n    instances.forEach(inst => {\n      if (inst.DBClusterIdentifier && clusterMap[inst.DBClusterIdentifier]) {\n        clusterMap[inst.DBClusterIdentifier].instances.push(inst);\n      } else {\n        singles.push(inst);\n      }\n    });\n    return { clusters: Object.values(clusterMap), singles };\n  };\n\n  const { clusters: clusterList, singles } = groupByCluster(instances, clusters);\n\n  const toggleCluster = (clusterId) => {\n    setExpandedClusters(prev => ({ ...prev, [clusterId]: !prev[clusterId] }));\n  };\n\n  // 클러스터 등록 핸들러(RO 주소)\n  const handleRegisterCluster = async (cluster) => {\n    setSuccess('');\n    setError('');\n    const endpoint = cluster.ReaderEndpoint || cluster.Endpoint || '-';\n    const engine = cluster.Engine || '';\n    try {\n      const formData = new FormData();\n      formData.append('name', cluster.DBClusterIdentifier);\n      formData.append('host', endpoint);\n      formData.append('port', '');\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', '');\n      formData.append('engine', engine);\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('클러스터(RO)로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleRegisterDb = async (instance) => {\n    setSuccess('');\n    setError('');\n    try {\n      const formData = new FormData();\n      formData.append('name', instance.DBInstanceIdentifier);\n      formData.append('host', instance.Endpoint.Address);\n      formData.append('port', instance.Endpoint.Port);\n      formData.append('user', '');\n      formData.append('password', '');\n      formData.append('dbname', instance.DBName || '');\n      formData.append('engine', instance.Engine || '');\n      const response = await fetch('/api/databases', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        setSuccess('DB로 등록되었습니다!');\n        if (onDatabaseAdd) onDatabaseAdd();\n      } else {\n        setError('DB 등록에 실패했습니다.');\n      }\n    } catch (e) {\n      setError('DB 등록 중 오류가 발생했습니다.');\n    }\n  };\n\n  return (\n    <div className=\"aws-rds-resource\">\n      <h2>RDS 인스턴스 조회</h2>\n      <div style={{fontSize:'14px',color:'#888',marginBottom:'8px'}}>※ 클러스터는 <b>읽기전용(RO) 엔드포인트</b>로만 등록됩니다.</div>\n      {loading && <div>불러오는 중...</div>}\n      {error && <div className=\"alert alert-error\">{error}</div>}\n      {success && <div className=\"alert alert-success\">{success}</div>}\n      <table className=\"db-table\">\n        <thead>\n          <tr>\n            <th>클러스터/이름</th>\n            <th>엔진</th>\n            <th>호스트</th>\n            <th>등록상태</th>\n            <th>액션</th>\n          </tr>\n        </thead>\n        <tbody>\n          {/* 클러스터 그룹 */}\n          {clusterList.map(cluster => (\n            <React.Fragment key={cluster.DBClusterIdentifier}>\n              <tr className=\"cluster-row\" onClick={() => toggleCluster(cluster.DBClusterIdentifier)} style={{ cursor: 'pointer', background: '#f7f8fa' }}>\n                <td>\n                  <span style={{ marginRight: 8 }}>{expandedClusters[cluster.DBClusterIdentifier] ? '▼' : '▶'}</span>\n                  <strong>{cluster.DBClusterIdentifier}</strong> (클러스터)\n                </td>\n                <td>{cluster.Engine}</td>\n                <td>{cluster.ReaderEndpoint || cluster.Endpoint || '-'}</td>\n                <td>-</td>\n                <td>\n                  <button onClick={e => { e.stopPropagation(); handleRegisterCluster(cluster); }} className=\"btn btn-primary btn-sm\">DB로 등록</button>\n                </td>\n              </tr>\n              {expandedClusters[cluster.DBClusterIdentifier] && cluster.instances.map(inst => (\n                <tr key={inst.DBInstanceIdentifier} className=\"instance-row\">\n                  <td style={{ paddingLeft: 32 }}>{inst.DBInstanceIdentifier}</td>\n                  <td>{inst.Engine}</td>\n                  <td>{inst.Endpoint?.Address}</td>\n                  <td>-</td>\n                  <td></td>\n                </tr>\n              ))}\n            </React.Fragment>\n          ))}\n          {/* 단일 인스턴스 */}\n          {singles.map(inst => (\n            <tr key={inst.DBInstanceIdentifier} className=\"instance-row\">\n              <td>{inst.DBInstanceIdentifier}</td>\n              <td>{inst.Engine}</td>\n              <td>{inst.Endpoint?.Address}</td>\n              <td>-</td>\n              <td>\n                <button onClick={() => handleRegisterDb(inst)} className=\"btn btn-primary btn-sm\">DB로 등록</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AwsRdsResource; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}