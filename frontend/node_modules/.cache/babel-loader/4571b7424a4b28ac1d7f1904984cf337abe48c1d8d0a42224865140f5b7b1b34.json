{"ast":null,"code":"var _jsxFileName = \"/Users/bskong/Repository/test/db-agent/frontend/src/components/OpenAIManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenAIManager = ({\n  onOpenAIKeyChange\n}) => {\n  _s();\n  const [openaiKeys, setOpenaiKeys] = useState([]);\n  const [selectedKey, setSelectedKey] = useState('');\n  const [newKeyName, setNewKeyName] = useState('');\n  const [newKeyValue, setNewKeyValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // OpenAI 키 목록 가져오기\n  const fetchOpenAIKeys = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/openai/keys', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setOpenaiKeys(data.keys || []);\n        setSelectedKey(data.selected || '');\n      } else {\n        console.error('OpenAI 키 목록 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('OpenAI 키 목록 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 추가\n  const handleAddKey = async e => {\n    e.preventDefault();\n    if (!newKeyName.trim() || !newKeyValue.trim()) {\n      setError('키 이름과 값은 필수입니다.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('name', newKeyName);\n      formData.append('key', newKeyValue);\n      const response = await fetch('/api/openai/keys', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        // const data = await response.json(); // Backend no longer returns keys list here\n        fetchOpenAIKeys(); // Refresh the list from the backend\n\n        setNewKeyName('');\n        setNewKeyValue('');\n        setSuccess('OpenAI API 키가 성공적으로 추가되었습니다.');\n        setError('');\n      } else {\n        setError('키 추가에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 추가 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 선택\n  const handleSelectKey = async keyName => {\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('name', keyName);\n      const response = await fetch('/api/openai/select', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        // setSelectedKey(keyName); // State will be updated by fetchOpenAIKeys\n        fetchOpenAIKeys(); // Refresh the list and selected state\n        setSuccess('OpenAI API 키가 선택되었습니다.');\n        setError('');\n      } else {\n        setError('키 선택에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 선택 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 삭제\n  const handleDeleteKey = async keyName => {\n    if (!window.confirm(`정말로 \"${keyName}\" 키를 삭제하시겠습니까?`)) {\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/openai/keys/${keyName}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        // const data = await response.json(); // Backend no longer returns keys list here\n        fetchOpenAIKeys(); // Refresh the list\n\n        // if (selectedKey === keyName) { // This logic is now handled by fetchOpenAIKeys\n        //   setSelectedKey('');\n        // }\n\n        setSuccess('OpenAI API 키가 삭제되었습니다.');\n        setError('');\n      } else {\n        setError('키 삭제에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 삭제 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 마스킹 함수 (앞 3글자 + ... + 뒤 4글자만 보이게)\n  const maskKey = key => {\n    if (!key) return '';\n    if (key.length <= 8) return '*'.repeat(key.length);\n    return key.substring(0, 3) + '***...***' + key.substring(key.length - 4);\n  };\n  useEffect(() => {\n    fetchOpenAIKeys();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"openai-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDD11 OpenAI API \\uD0A4 \\uAD00\\uB9AC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC790\\uC5F0\\uC5B4\\u2192SQL \\uBCC0\\uD658\\uC744 \\uC704\\uD55C OpenAI API \\uD0A4\\uB97C \\uB4F1\\uB85D\\uD558\\uACE0 \\uAD00\\uB9AC\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(''),\n        className: \"close-btn\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-success\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u2705 \", success]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSuccess(''),\n        className: \"close-btn\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC0C8 API \\uD0A4 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddKey,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"key-name\",\n            children: \"\\uD0A4 \\uC774\\uB984:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"key-name\",\n            value: newKeyName,\n            onChange: e => setNewKeyName(e.target.value),\n            placeholder: \"\\uC608: Production Key, Development Key\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"key-value\",\n            children: \"API \\uD0A4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"key-value\",\n            value: newKeyValue,\n            onChange: e => setNewKeyValue(e.target.value),\n            placeholder: \"sk-...\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: loading ? '추가 중...' : '키 추가'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uB4F1\\uB85D\\uB41C API \\uD0A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), openaiKeys.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB4F1\\uB85D\\uB41C OpenAI API \\uD0A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC704\\uC5D0\\uC11C \\uC0C8 \\uD0A4\\uB97C \\uCD94\\uAC00\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"key-list\",\n        children: openaiKeys.map((key, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `key-item ${selectedKey === key.name ? 'selected' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"key-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-name\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: key.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), selectedKey === key.name && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-badge\",\n                children: \"\\uC120\\uD0DD\\uB428\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"key-value\",\n              children: maskKey(key.api_key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"key-actions\",\n            children: [selectedKey !== key.name && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelectKey(key.name),\n              className: \"btn btn-sm btn-outline\",\n              disabled: loading,\n              children: \"\\uC120\\uD0DD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteKey(key.name),\n              className: \"btn btn-sm btn-danger\",\n              disabled: loading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCD6 \\uC0AC\\uC6A9\\uBC95\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usage-guide\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"OpenAI\\uC5D0\\uC11C API \\uD0A4\\uB97C \\uBC1C\\uAE09\\uBC1B\\uC73C\\uC138\\uC694 (\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://platform.openai.com/api-keys\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"https://platform.openai.com/api-keys\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 41\n            }, this), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uC704 \\uD3FC\\uC5D0\\uC11C \\uD0A4 \\uC774\\uB984\\uACFC API \\uD0A4\\uB97C \\uC785\\uB825\\uD558\\uACE0 \\uCD94\\uAC00\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\uC0AC\\uC6A9\\uD560 \\uD0A4\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"AI \\uCC44\\uD305\\uC5D0\\uC11C \\uC790\\uC5F0\\uC5B4\\uB85C \\uB370\\uC774\\uD130\\uBCA0\\uC774\\uC2A4\\uB97C \\uC9C8\\uC758\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenAIManager, \"DNFBNnHJ8nMFSthYK4Vexd5XZ+g=\");\n_c = OpenAIManager;\nexport default OpenAIManager;\nvar _c;\n$RefreshReg$(_c, \"OpenAIManager\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","OpenAIManager","onOpenAIKeyChange","_s","openaiKeys","setOpenaiKeys","selectedKey","setSelectedKey","newKeyName","setNewKeyName","newKeyValue","setNewKeyValue","loading","setLoading","error","setError","success","setSuccess","fetchOpenAIKeys","response","fetch","credentials","ok","data","json","keys","selected","console","handleAddKey","e","preventDefault","trim","formData","FormData","append","method","body","handleSelectKey","keyName","handleDeleteKey","window","confirm","maskKey","key","length","repeat","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","disabled","map","index","name","api_key","href","rel","_c","$RefreshReg$"],"sources":["/Users/bskong/Repository/test/db-agent/frontend/src/components/OpenAIManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst OpenAIManager = ({ onOpenAIKeyChange }) => {\n  const [openaiKeys, setOpenaiKeys] = useState([]);\n  const [selectedKey, setSelectedKey] = useState('');\n  const [newKeyName, setNewKeyName] = useState('');\n  const [newKeyValue, setNewKeyValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // OpenAI 키 목록 가져오기\n  const fetchOpenAIKeys = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('/api/openai/keys', { credentials: 'include' });\n      if (response.ok) {\n        const data = await response.json();\n        setOpenaiKeys(data.keys || []);\n        setSelectedKey(data.selected || '');\n      } else {\n        console.error('OpenAI 키 목록 가져오기 실패');\n      }\n    } catch (error) {\n      console.error('OpenAI 키 목록 요청 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 추가\n  const handleAddKey = async (e) => {\n    e.preventDefault();\n    if (!newKeyName.trim() || !newKeyValue.trim()) {\n      setError('키 이름과 값은 필수입니다.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('name', newKeyName);\n      formData.append('key', newKeyValue);\n\n      const response = await fetch('/api/openai/keys', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n\n      if (response.ok) {\n        // const data = await response.json(); // Backend no longer returns keys list here\n        fetchOpenAIKeys(); // Refresh the list from the backend\n        \n        setNewKeyName('');\n        setNewKeyValue('');\n        setSuccess('OpenAI API 키가 성공적으로 추가되었습니다.');\n        setError('');\n      } else {\n        setError('키 추가에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 추가 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 선택\n  const handleSelectKey = async (keyName) => {\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('name', keyName);\n\n      const response = await fetch('/api/openai/select', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n\n      if (response.ok) {\n        // setSelectedKey(keyName); // State will be updated by fetchOpenAIKeys\n        fetchOpenAIKeys(); // Refresh the list and selected state\n        setSuccess('OpenAI API 키가 선택되었습니다.');\n        setError('');\n      } else {\n        setError('키 선택에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 선택 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 삭제\n  const handleDeleteKey = async (keyName) => {\n    if (!window.confirm(`정말로 \"${keyName}\" 키를 삭제하시겠습니까?`)) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(`/api/openai/keys/${keyName}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n\n      if (response.ok) {\n        // const data = await response.json(); // Backend no longer returns keys list here\n        fetchOpenAIKeys(); // Refresh the list\n        \n        // if (selectedKey === keyName) { // This logic is now handled by fetchOpenAIKeys\n        //   setSelectedKey('');\n        // }\n        \n        setSuccess('OpenAI API 키가 삭제되었습니다.');\n        setError('');\n      } else {\n        setError('키 삭제에 실패했습니다.');\n      }\n    } catch (error) {\n      setError('키 삭제 중 오류가 발생했습니다.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 키 마스킹 함수 (앞 3글자 + ... + 뒤 4글자만 보이게)\n  const maskKey = (key) => {\n    if (!key) return '';\n    if (key.length <= 8) return '*'.repeat(key.length);\n    return key.substring(0, 3) + '***...***' + key.substring(key.length - 4);\n  };\n\n  useEffect(() => {\n    fetchOpenAIKeys();\n  }, []);\n\n  return (\n    <div className=\"openai-manager\">\n      <div className=\"section-header\">\n        <h2>🔑 OpenAI API 키 관리</h2>\n        <p>자연어→SQL 변환을 위한 OpenAI API 키를 등록하고 관리하세요.</p>\n      </div>\n\n      {/* 상태 메시지 */}\n      {error && (\n        <div className=\"alert alert-error\">\n          <span>⚠️ {error}</span>\n          <button onClick={() => setError('')} className=\"close-btn\">✕</button>\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"alert alert-success\">\n          <span>✅ {success}</span>\n          <button onClick={() => setSuccess('')} className=\"close-btn\">✕</button>\n        </div>\n      )}\n\n      {/* 키 추가 폼 */}\n      <div className=\"card\">\n        <h3>새 API 키 추가</h3>\n        <form onSubmit={handleAddKey} className=\"form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"key-name\">키 이름:</label>\n            <input\n              type=\"text\"\n              id=\"key-name\"\n              value={newKeyName}\n              onChange={(e) => setNewKeyName(e.target.value)}\n              placeholder=\"예: Production Key, Development Key\"\n              required\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label htmlFor=\"key-value\">API 키:</label>\n            <input\n              type=\"password\"\n              id=\"key-value\"\n              value={newKeyValue}\n              onChange={(e) => setNewKeyValue(e.target.value)}\n              placeholder=\"sk-...\"\n              required\n            />\n          </div>\n          \n          <button \n            type=\"submit\" \n            className=\"btn btn-primary\"\n            disabled={loading}\n          >\n            {loading ? '추가 중...' : '키 추가'}\n          </button>\n        </form>\n      </div>\n\n      {/* 등록된 키 목록 */}\n      <div className=\"card\">\n        <h3>등록된 API 키</h3>\n        {openaiKeys.length === 0 ? (\n          <div className=\"empty-state\">\n            <p>등록된 OpenAI API 키가 없습니다.</p>\n            <p>위에서 새 키를 추가해주세요.</p>\n          </div>\n        ) : (\n          <div className=\"key-list\">\n            {openaiKeys.map((key, index) => (\n              <div \n                key={index} \n                className={`key-item ${selectedKey === key.name ? 'selected' : ''}`}\n              >\n                <div className=\"key-info\">\n                  <div className=\"key-name\">\n                    <strong>{key.name}</strong>\n                    {selectedKey === key.name && (\n                      <span className=\"selected-badge\">선택됨</span>\n                    )}\n                  </div>\n                  <div className=\"key-value\">\n                    {maskKey(key.api_key)}\n                  </div>\n                </div>\n                <div className=\"key-actions\">\n                  {selectedKey !== key.name && (\n                    <button\n                      onClick={() => handleSelectKey(key.name)}\n                      className=\"btn btn-sm btn-outline\"\n                      disabled={loading}\n                    >\n                      선택\n                    </button>\n                  )}\n                  <button\n                    onClick={() => handleDeleteKey(key.name)}\n                    className=\"btn btn-sm btn-danger\"\n                    disabled={loading}\n                  >\n                    삭제\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* 사용법 안내 */}\n      <div className=\"card\">\n        <h3>📖 사용법</h3>\n        <div className=\"usage-guide\">\n          <ol>\n            <li>OpenAI에서 API 키를 발급받으세요 (<a href=\"https://platform.openai.com/api-keys\" target=\"_blank\" rel=\"noopener noreferrer\">https://platform.openai.com/api-keys</a>)</li>\n            <li>위 폼에서 키 이름과 API 키를 입력하고 추가하세요</li>\n            <li>사용할 키를 선택하세요</li>\n            <li>AI 채팅에서 자연어로 데이터베이스를 질의할 수 있습니다</li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OpenAIManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}